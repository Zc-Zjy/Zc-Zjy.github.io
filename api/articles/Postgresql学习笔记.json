{"title":"Postgresql学习笔记","slug":"Postgresql学习笔记","date":"2023-10-17T05:38:07.000Z","updated":"2024-07-12T07:43:37.610Z","comments":true,"path":"api/articles/Postgresql学习笔记.json","realPath":null,"excerpt":null,"covers":["/2023/10/17/Postgresql%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/postgresql1.jpg","/2023/10/17/Postgresql%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/postgresql2.jpg","/2023/10/17/Postgresql%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/postgresql3.jpg","/2023/10/17/Postgresql%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/postgresql4.jpg","/2023/10/17/Postgresql%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/postgresql5.png"],"cover":null,"content":"<hr>\n<h1 id=\"一、Postgresql在linux（虚拟环境中）中安装教程\"><a href=\"#一、Postgresql在linux（虚拟环境中）中安装教程\" class=\"headerlink\" title=\"一、Postgresql在linux（虚拟环境中）中安装教程\"></a>一、Postgresql在linux（虚拟环境中）中安装教程</h1><p>1、官网下载地址：<br><a href=\"https://www.postgresql.org/download/\">https://www.postgresql.org/download/</a></p>\n<img src=\"/2023/10/17/Postgresql%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/postgresql1.jpg\" class=\"\">\n\n<p><strong>注意</strong>：Postgresql15的版本，navicat连接不了，会报错误，原因自查。  </p>\n<p>2、安装教程官网会给出  </p>\n<img src=\"/2023/10/17/Postgresql%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/postgresql2.jpg\" class=\"\">\n<figure class=\"highlight cmd\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 下载安装rpm仓库（sudo表示使用root用户权限来进行操作）</span><br><span class=\"line\">sudo yum install -y https://download.postgresql.org/pub/repos/yum/reporpms/EL-<span class=\"number\">7</span>-x86_64/pgdg-redhat-repo-latest.noarch.rpm</span><br><span class=\"line\"># 安装</span><br><span class=\"line\">sudo yum install -y postgresql14-server</span><br><span class=\"line\"># 初始化数据库</span><br><span class=\"line\">sudo /usr/pgsql-<span class=\"number\">15</span>/bin/postgresql-<span class=\"number\">14</span>-setup initdb</span><br><span class=\"line\"># 允许自启</span><br><span class=\"line\">sudo systemctl enable postgresql-<span class=\"number\">14</span></span><br><span class=\"line\"># 启动服务</span><br><span class=\"line\">sudo systemctl <span class=\"built_in\">start</span> postgresql-<span class=\"number\">14</span></span><br></pre></td></tr></table></figure>\n\n<p>3、初始化（初始化后会创建一个用户postgres，我们需要重新给它设置密码）<br><strong>注意</strong>：这里的postgres用户就是linux中的用户，属于PostgreSQL Server的用户组。  </p>\n<figure class=\"highlight cmd\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#删除密码</span><br><span class=\"line\">sudo passwd -d postgres</span><br><span class=\"line\">#设置密码</span><br><span class=\"line\">sudo passwd postgres</span><br><span class=\"line\">#切换成postgres用户（如果报权限不够就使用：su -postgres）</span><br><span class=\"line\">su postgres</span><br><span class=\"line\">#进入postgresql client</span><br><span class=\"line\">psql</span><br><span class=\"line\">#或者使用这个命令直接从别的用户进入postgresql client</span><br><span class=\"line\">sudo -u postgres psql</span><br><span class=\"line\">#修改数据库中postgres用户密码</span><br><span class=\"line\">ALTER USER postgres WITH PASSWORD &#x27;root&#x27;;</span><br><span class=\"line\">#退出</span><br><span class=\"line\">\\q</span><br></pre></td></tr></table></figure>\n\n<p>4、因为我们想通过本地的navicat来进行连接，所以需要关闭防火墙或者打开5432端口<br><strong>注意</strong>：下面的命令可能会让你输入root密码来进行验证，如果不想可以在命令前面加上 sudo，如果出现“postgres 不在 sudoers 文件中。此事将被报告。”，<a href=\"https://blog.csdn.net/m0_59133441/article/details/121511380\">可点击此处来解决</a>。<br>（1）查看防火墙状态</p>\n<figure class=\"highlight ada\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">firewall-cmd <span class=\"comment\">--state</span></span><br></pre></td></tr></table></figure>\n<p>（2）停止firewall</p>\n<figure class=\"highlight arduino\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">systemctl stop firewalld.service</span><br></pre></td></tr></table></figure>\n<p>（3）禁止firewall开机启动</p>\n<figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">systemctl <span class=\"built_in\">disable</span> firewalld.service</span><br></pre></td></tr></table></figure>\n<p>或者<br>（1）开放指定端口</p>\n<figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">firewall-cmd <span class=\"attribute\">--zone</span>=public <span class=\"attribute\">--add-port</span>=5432/tcp --permanent</span><br></pre></td></tr></table></figure>\n<p>（2）关闭指定端口</p>\n<figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">firewall-cmd <span class=\"attribute\">--zone</span>=public <span class=\"attribute\">--remove-port</span>=5672/tcp --permanent</span><br></pre></td></tr></table></figure>\n<p>（3）重启防火墙</p>\n<figure class=\"highlight ada\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">firewall-cmd <span class=\"comment\">--reloadl</span></span><br></pre></td></tr></table></figure>\n\n<p>5、修改配置文件<br>（1）用root用户打开配置文件或者在下面命令前加上 sudo  </p>\n<figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"regexp\">//</span> 注意先看自己的版本是几，然后把下面路径中的<span class=\"number\">14</span>改为自己的版本</span><br><span class=\"line\">vim <span class=\"regexp\">/var/</span>lib<span class=\"regexp\">/pgsql/</span><span class=\"number\">14</span><span class=\"regexp\">/data/</span>postgresql.conf</span><br></pre></td></tr></table></figure>\n<p>在 postgresql.conf 文件中取消注释，修改listen_addresses为’*’表示监听任意地址</p>\n<img src=\"/2023/10/17/Postgresql%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/postgresql3.jpg\" class=\"\">\n<p>（2）同样修改另一个配置文件</p>\n<figure class=\"highlight pgsql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// 注意先看自己的版本是几，然后把下面路径中的<span class=\"number\">14</span>改为自己的版本</span><br><span class=\"line\">vim /var/lib/pgsql/<span class=\"number\">14</span>/data/pg_hba.conf</span><br></pre></td></tr></table></figure>\n<p>在 IPv4 local connections下面新增一行：</p>\n<figure class=\"highlight apache\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">host</span>  <span class=\"literal\">all</span>  <span class=\"literal\">all</span> <span class=\"number\">0.0.0.0</span>/<span class=\"number\">0</span> scram-sha-<span class=\"number\">256</span></span><br></pre></td></tr></table></figure>\n<img src=\"/2023/10/17/Postgresql%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/postgresql4.jpg\" class=\"\">\n<p>（3）重启服务（ 需要查看自己的版本号，<a href=\"https://dandelioncloud.cn/article/details/1597226823283064833\">查看方法请点击</a> ）</p>\n<figure class=\"highlight apache\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">sudo</span> systemctl restart postgresql-<span class=\"number\">14</span></span><br></pre></td></tr></table></figure>\n\n<p>6、然后就可以用navicat等工具连接了  </p>\n<p>7、卸载Postgresql的方法，<a href=\"https://www.cnblogs.com/june-/articles/14276416.html\">请点击这里。</a></p>\n<p>8、注意事项<br>（1）postgresql，它不支持单引号和反引号，只支持双引号，比如关键字在mysql中可以用反引号包裹，但在postgresql中得用双引号包裹；<br>（2）关键字后面的as不能省略；</p>\n<br/>\n\n<hr>\n<br/>\n\n\n<h1 id=\"二、Postgresql使用方法\"><a href=\"#二、Postgresql使用方法\" class=\"headerlink\" title=\"二、Postgresql使用方法\"></a>二、Postgresql使用方法</h1><h3 id=\"1、登录命令\"><a href=\"#1、登录命令\" class=\"headerlink\" title=\"1、登录命令\"></a>1、登录命令</h3><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#连接指定服务器上的数据库</span><br><span class=\"line\">psql <span class=\"operator\">-</span>h IP <span class=\"operator\">-</span>p 端口 <span class=\"operator\">-</span>U 用户名 <span class=\"operator\">-</span>d 数据库名 <span class=\"operator\">-</span>W</span><br></pre></td></tr></table></figure>\n<p>说明：<br><code>-h</code>：数据库所在的IP地址；<br><code>-p</code>：（默认5432）数据库的监听端口；<br><code>-U</code>：用户名；<br><code>-d</code>：数据库名称；<br><code>-W</code>：提示输入密码；</p>\n<h3 id=\"2、常用命令说明\"><a href=\"#2、常用命令说明\" class=\"headerlink\" title=\"2、常用命令说明\"></a>2、常用命令说明</h3><p><code>\\?</code>：所有命令帮助；<br><code>\\l</code>：列出所有数据库；<br><code>\\d</code>：列出数据库中所有表；<br><code>\\dt</code>：列出数据库中所有表；<br><code>\\d [table_name]</code>：显示指定表的结构；<br><code>\\di</code>：列出数据库中所有 index；<br><code>\\dv</code>：列出数据库中所有 view；<br><code>\\h</code>：sql命令帮助；<br><code>\\q</code>：退出连接；<br><code>\\c [database_name]</code>：切换到指定的数据库；<br><code>\\c</code>：显示当前数据库名称和用户；<br><code>\\conninfo</code>：显示客户端的连接信息；<br><code>\\du</code>：显示所有用户；<br><code>\\dn</code>：显示数据库中的schema；<br><code>\\encoding</code>：显示字符集；<br><code>select version();</code>：显示版本信息；<br><code>\\i testdb.sql</code>：执行sql文件；<br><code>\\x</code>：扩展展示结果信息，相当于MySQL的\\G；<br><code>\\o /tmp/test.txt</code>：将下一条sql执行结果导入文件中。</p>\n<h3 id=\"3、关于对表的操作\"><a href=\"#3、关于对表的操作\" class=\"headerlink\" title=\"3、关于对表的操作\"></a>3、关于对表的操作</h3><p>1、向表中新增一列属性：  </p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">ALTER</span> <span class=\"keyword\">TABLE</span> table_name <span class=\"keyword\">ADD</span> <span class=\"keyword\">COLUMN</span>  column_name1 data_type;</span><br></pre></td></tr></table></figure>\n\n\n<br/>\n\n<hr>\n<br/>\n\n\n<h1 id=\"三、JDBC连接和数据库对应说明\"><a href=\"#三、JDBC连接和数据库对应说明\" class=\"headerlink\" title=\"三、JDBC连接和数据库对应说明\"></a>三、JDBC连接和数据库对应说明</h1><p><code>jdbc:postgresql://192.168.126.130:5432/sonarqube?currentSchema=public</code>  </p>\n<img src=\"/2023/10/17/Postgresql%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/postgresql5.png\" class=\"\">\n\n\n<br/>\n\n<hr>\n<br/>\n\n\n<h1 id=\"四、使用MybatisPlus过程中出现的问题\"><a href=\"#四、使用MybatisPlus过程中出现的问题\" class=\"headerlink\" title=\"四、使用MybatisPlus过程中出现的问题\"></a>四、使用MybatisPlus过程中出现的问题</h1><h3 id=\"1、关于json类型的存储\"><a href=\"#1、关于json类型的存储\" class=\"headerlink\" title=\"1、关于json类型的存储\"></a>1、关于json类型的存储</h3><p>1、说明<br>如果<code>java</code>类型是<code>List</code>，怎么存到数据库中，首先将数据库中的属性设为<code>json</code>格式，大小为0。<br>2、操作<br>（1）创建<code>json</code>处理类<code>JsonTypeHandler</code>  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> com.fasterxml.jackson.core.JsonProcessingException;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.fasterxml.jackson.core.type.TypeReference;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.fasterxml.jackson.databind.ObjectMapper;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.apache.ibatis.type.BaseTypeHandler;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.apache.ibatis.type.JdbcType;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.IOException;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.lang.reflect.Type;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.sql.*;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">JsonTypeHandler</span>&lt;T&gt; <span class=\"keyword\">extends</span> <span class=\"title class_\">BaseTypeHandler</span>&lt;T&gt; &#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"type\">ObjectMapper</span> <span class=\"variable\">objectMapper</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">ObjectMapper</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">setNonNullParameter</span><span class=\"params\">(PreparedStatement preparedStatement, <span class=\"type\">int</span> i, T t, JdbcType jdbcType)</span> <span class=\"keyword\">throws</span> SQLException &#123;</span><br><span class=\"line\">        String jsonString;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            jsonString = objectMapper.writeValueAsString(t);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (JsonProcessingException e) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"title class_\">RuntimeException</span>(<span class=\"string\">&quot;Failed to convert Java object to JSON string&quot;</span>, e);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        preparedStatement.setObject(i, jsonString, Types.OTHER);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> T <span class=\"title function_\">getNullableResult</span><span class=\"params\">(ResultSet resultSet, String s)</span> <span class=\"keyword\">throws</span> SQLException &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> deserializeFromDb(resultSet.getString(s));</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> T <span class=\"title function_\">getNullableResult</span><span class=\"params\">(ResultSet resultSet, <span class=\"type\">int</span> i)</span> <span class=\"keyword\">throws</span> SQLException &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> deserializeFromDb(resultSet.getString(i));</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> T <span class=\"title function_\">getNullableResult</span><span class=\"params\">(CallableStatement callableStatement, <span class=\"type\">int</span> i)</span> <span class=\"keyword\">throws</span> SQLException &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> deserializeFromDb(callableStatement.getString(i));</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> T <span class=\"title function_\">deserializeFromDb</span><span class=\"params\">(String dbData)</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (dbData == <span class=\"literal\">null</span> || <span class=\"string\">&quot;&quot;</span>.equals(dbData)) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">null</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> objectMapper.readValue(dbData, <span class=\"keyword\">new</span> <span class=\"title class_\">TypeReference</span>&lt;T&gt;() &#123;</span><br><span class=\"line\">                <span class=\"meta\">@Override</span></span><br><span class=\"line\">                <span class=\"keyword\">public</span> Type <span class=\"title function_\">getType</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">return</span> <span class=\"built_in\">super</span>.getType();</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (IOException e) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"title class_\">RuntimeException</span>(<span class=\"string\">&quot;Failed to parse JSON data from database&quot;</span>, e);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>（2）将实体类中的<code>List</code>属性上面添加注解<code>@TableField(typeHandler = JsonTypeHandler.class)</code>以及在类上面添加注解<code>@TableName(value = &quot;t_detection_scheme&quot;, autoResultMap = true)</code>，一定要加<code>autoResultMap = true</code>，不然查询的时候<code>List</code>属性会为<code>null</code>。  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@JsonIgnoreProperties(ignoreUnknown = true)</span></span><br><span class=\"line\"><span class=\"meta\">@Data</span></span><br><span class=\"line\"><span class=\"meta\">@TableName(value = &quot;t_detection_scheme&quot;, autoResultMap = true)</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">DetectionScheme</span> <span class=\"keyword\">implements</span> <span class=\"title class_\">Serializable</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"type\">long</span> <span class=\"variable\">serialVersionUID</span> <span class=\"operator\">=</span> <span class=\"number\">1L</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 检测方案id</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"meta\">@TableId(type = IdType.ASSIGN_UUID)</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> String id;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 方案名称</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> String name;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 检测语言</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"meta\">@TableField(typeHandler = JsonTypeHandler.class)</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> List&lt;String&gt; language;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 描述</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> String description;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 创建时间</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"meta\">@TableField(fill = FieldFill.INSERT)</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> LocalDateTime createTime;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 更新时间</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"meta\">@TableField(fill = FieldFill.UPDATE)</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> LocalDateTime updateTime;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 逻辑删除</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"type\">Integer</span> <span class=\"variable\">deleted</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 创建人id</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> String createBy;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 规则包id</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"meta\">@TableField(typeHandler = JsonTypeHandler.class)</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> List&lt;String&gt; rulePackageId;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 项目id</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> String projectId;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 是否是规则维护接口</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"meta\">@NotBlank(message = &quot;接口区分参数不可为空&quot;)</span></span><br><span class=\"line\">    <span class=\"meta\">@TableField(exist = false)</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> Boolean ruleMaintenance;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"2、【Mybatis-Plus】【PostgreSQL】List＜T＞-类型数据如何存数据库\"><a href=\"#2、【Mybatis-Plus】【PostgreSQL】List＜T＞-类型数据如何存数据库\" class=\"headerlink\" title=\"2、【Mybatis-Plus】【PostgreSQL】List＜T＞ 类型数据如何存数据库\"></a>2、【Mybatis-Plus】【PostgreSQL】List＜T＞ 类型数据如何存数据库</h3><p>1、核心原理<br>是将<code>List＜T＞</code>转为<code>JSONArray</code>类型，数据库对应字段为<code>json</code>类型，即可完成存储。<br>2、建表<br>建表<code>sql</code>：  </p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">create</span> <span class=\"keyword\">table</span> test.image_info (</span><br><span class=\"line\">   id serial <span class=\"keyword\">PRIMARY</span> key <span class=\"keyword\">NOT</span> <span class=\"keyword\">null</span>,</span><br><span class=\"line\">   image_address text    <span class=\"keyword\">NOT</span> <span class=\"keyword\">NULL</span>,</span><br><span class=\"line\">   image_owner text    <span class=\"keyword\">NOT</span> <span class=\"keyword\">NULL</span>,</span><br><span class=\"line\">   download_times int8  <span class=\"keyword\">default</span> <span class=\"number\">10</span>,</span><br><span class=\"line\">   authorized_user json,</span><br><span class=\"line\">   is_deleted int8 <span class=\"keyword\">NOT</span> <span class=\"keyword\">null</span></span><br><span class=\"line\">);</span><br></pre></td></tr></table></figure>\n<ul>\n<li><code>id</code>：<br>数据类型为<code>serial</code>，这意味着它是一个自动递增的整数类型。<br>设置为主键<code>（PRIMARY KEY）</code>，这意味着每一行的<code>id</code>值必须是唯一的，不能有重复。<br>设置为<code>NOT NULL</code>，这意味着这一列的值不能为空。  </li>\n<li><code>image_address</code>：<br>数据类型为<code>text</code>，这意味着它可以存储任意长度的文本字符串。<br>设置为<code>NOT NULL</code>，这意味着这一列的值不能为空。  </li>\n<li><code>image_owner</code>：<br>数据类型为<code>text</code>，这意味着它可以存储任意长度的文本字符串。<br>设置为<code>NOT NULL</code>，这意味着这一列的值不能为空。  </li>\n<li><code>download_times</code>：<br>数据类型为<code>int8</code>，这意味着它可以存储<code>8</code>字节的整数。<br>设置了默认值为<code>10（default 10）</code>，这意味着如果插入数据时没有为这一列提供值，那么它的值将默认为<code>10</code>。  </li>\n<li><code>authorized_user</code>：<br>数据类型为<code>json</code>，这意味着它可以存储<code>JSON</code>格式的字符串。<br>这一列可以用来存储有权访问该图片的用户信息，这些信息是以<code>JSON</code>格式存储的。  </li>\n<li><code>is_deleted</code>：<br>数据类型为<code>int8</code>，这意味着它可以存储<code>8</code>字节的整数。<br>设置为<code>NOT NULL</code>，这意味着这一列的值不能为空。<br>这一列通常用于标记该记录是否已被删除。例如，<code>1</code>可以表示已删除，<code>0</code>可以表示未删除。</li>\n</ul>\n<p>3、创建<code>List</code>处理器，<code>ArrayTypeHandler.java</code>  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> org.apache.ibatis.type.BaseTypeHandler;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.apache.ibatis.type.JdbcType;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.apache.ibatis.type.MappedJdbcTypes;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.apache.ibatis.type.MappedTypes;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.sql.*;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Arrays;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.List;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 自定义的 MyBatis 类型处理器 ArrayTypeHandler，它继承自 BaseTypeHandler。</span></span><br><span class=\"line\"><span class=\"comment\"> * 这个类型处理器主要用于处理 Java 数组或 List 与数据库中的数组类型（如 PostgreSQL 的 ARRAY 类型）。</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@MappedJdbcTypes</span>(JdbcType.ARRAY)：表示这个类型处理器用于处理 JdbcType.ARRAY 类型的数据。</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@MappedTypes</span>(Object.class)：表示这个类型处理器可以处理 Object 类型的数据。</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"meta\">@MappedJdbcTypes(JdbcType.ARRAY)</span></span><br><span class=\"line\"><span class=\"meta\">@MappedTypes(Object.class)</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">ArrayTypeHandler</span> <span class=\"keyword\">extends</span> <span class=\"title class_\">BaseTypeHandler</span>&lt;Object&gt; &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"type\">String</span> <span class=\"variable\">TYPE_NAME_VARCHAR</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;varchar&quot;</span>;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"type\">String</span> <span class=\"variable\">TYPE_NAME_INTEGER</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;integer&quot;</span>;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"type\">String</span> <span class=\"variable\">TYPE_NAME_BOOLEAN</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;boolean&quot;</span>;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"type\">String</span> <span class=\"variable\">TYPE_NAME_NUMERIC</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;numeric&quot;</span>;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"type\">String</span> <span class=\"variable\">TYPE_NAME_LONG</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;bigint&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">// 这个方法在插入或更新数据时被调用，将 Java 数组或 List 转换为数据库中的 ARRAY 类型。</span></span><br><span class=\"line\">\t<span class=\"comment\">// 首先判断传入的参数 parameter 是 List 还是数组，并将其转换为 Object[] 类型的 arrayObject。</span></span><br><span class=\"line\">\t<span class=\"comment\">// 根据 arrayObject[0] 的类型确定数据库中 ARRAY 类型的元素类型，并创建一个对应类型的 Array 对象。</span></span><br><span class=\"line\">\t<span class=\"comment\">// 使用 PreparedStatement 的 setArray 方法将 Array 对象设置到 SQL 语句的相应位置。</span></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">setNonNullParameter</span><span class=\"params\">(PreparedStatement ps, <span class=\"type\">int</span> i, Object parameter, JdbcType jdbcType)</span> <span class=\"keyword\">throws</span> SQLException &#123;</span><br><span class=\"line\">        Object[] arrayObject;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (parameter <span class=\"keyword\">instanceof</span> List) &#123;</span><br><span class=\"line\">            arrayObject = ((List) parameter).toArray();</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            arrayObject = (Object[]) parameter;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"type\">Connection</span> <span class=\"variable\">conn</span> <span class=\"operator\">=</span> ps.getConnection();</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (arrayObject.length &gt; <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">            <span class=\"type\">String</span> <span class=\"variable\">typeName</span> <span class=\"operator\">=</span> TYPE_NAME_VARCHAR;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (arrayObject[<span class=\"number\">0</span>] <span class=\"keyword\">instanceof</span> Integer) &#123;</span><br><span class=\"line\">                typeName = TYPE_NAME_INTEGER;</span><br><span class=\"line\">            &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (arrayObject[<span class=\"number\">0</span>] <span class=\"keyword\">instanceof</span> String) &#123;</span><br><span class=\"line\">                typeName = TYPE_NAME_VARCHAR;</span><br><span class=\"line\">            &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (arrayObject[<span class=\"number\">0</span>] <span class=\"keyword\">instanceof</span> Boolean) &#123;</span><br><span class=\"line\">                typeName = TYPE_NAME_BOOLEAN;</span><br><span class=\"line\">            &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (arrayObject[<span class=\"number\">0</span>] <span class=\"keyword\">instanceof</span> Double) &#123;</span><br><span class=\"line\">                typeName = TYPE_NAME_NUMERIC;</span><br><span class=\"line\">            &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (arrayObject[<span class=\"number\">0</span>] <span class=\"keyword\">instanceof</span> Long) &#123;</span><br><span class=\"line\">                typeName = TYPE_NAME_LONG;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"type\">Array</span> <span class=\"variable\">array</span> <span class=\"operator\">=</span> conn.createArrayOf(typeName, arrayObject);</span><br><span class=\"line\">            ps.setArray(i, array);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            ps.setArray(i, <span class=\"literal\">null</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">// 这些getNullableResult方法在查询数据时被调用，将数据库中的 ARRAY 类型转换为 Java 数组或 List。</span></span><br><span class=\"line\">\t<span class=\"comment\">// 分别针对 ResultSet 和 CallableStatement 提供了三个重载版本的 getNullableResult 方法。</span></span><br><span class=\"line\">\t<span class=\"comment\">//所有这些方法都调用了私有方法 getArray，并将返回的数组转换为 List。</span></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> List&lt;Object&gt; <span class=\"title function_\">getNullableResult</span><span class=\"params\">(ResultSet resultSet, String s)</span> <span class=\"keyword\">throws</span> SQLException &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> getArray(resultSet.getArray(s));</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> List&lt;Object&gt; <span class=\"title function_\">getNullableResult</span><span class=\"params\">(ResultSet resultSet, <span class=\"type\">int</span> i)</span> <span class=\"keyword\">throws</span> SQLException &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> getArray(resultSet.getArray(i));</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> List&lt;Object&gt; <span class=\"title function_\">getNullableResult</span><span class=\"params\">(CallableStatement callableStatement, <span class=\"type\">int</span> i)</span> <span class=\"keyword\">throws</span> SQLException &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> getArray(callableStatement.getArray(i));</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">// 这个私有方法负责从给定的 Array 对象中获取实际的数组数据</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> List&lt;Object&gt; <span class=\"title function_\">getArray</span><span class=\"params\">(Array array)</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (array == <span class=\"literal\">null</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">null</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> Arrays.asList((Object[]) array.getArray());</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">null</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>说明：<br><code>ArrayTypeHandler</code>类主要用于在<code>MyBatis</code>中处理<code>Java</code>数组或<code>List</code>与数据库中的<code>ARRAY</code>类型之间的转换，使得<code>MyBatis</code>能够正确地将数组或<code>List</code>数据存入数据库以及从数据库中读取数组或<code>List</code>数据。<br>4、创建实体类<code>ImageInfo</code>  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Data</span></span><br><span class=\"line\"><span class=\"meta\">@NoArgsConstructor</span></span><br><span class=\"line\"><span class=\"meta\">@AllArgsConstructor</span></span><br><span class=\"line\"><span class=\"meta\">@EqualsAndHashCode(callSuper = false)</span></span><br><span class=\"line\"><span class=\"meta\">@TableName(value = &quot;test.image_info &quot;)</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">ImageInfo</span> <span class=\"keyword\">implements</span> <span class=\"title class_\">Serializable</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * ID</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"meta\">@TableId(value = &quot;id&quot;, type = IdType.AUTO)</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> Long id;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@TableField(value = &quot;image_address&quot;)</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> String imageAddress;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@TableField(value = &quot;image_owner&quot;)</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> String imageOwner;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@TableField(value = &quot;download_times&quot;)</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"type\">int</span> downloadTimes;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@TableField(value = &quot;authorized_user&quot;, typeHandler = ArrayTypeHandler.class)</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> JSON authorizedUser;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@TableField(value = &quot;is_deleted&quot;)</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"type\">int</span> isDeleted;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>5、测试  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 创建entity</span></span><br><span class=\"line\">List&lt;String&gt; finalAuthorizedUsers = authorizedUsers;</span><br><span class=\"line\"><span class=\"type\">ImageInfo</span> <span class=\"variable\">imageInfo</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">ImageInfo</span>();</span><br><span class=\"line\">imageInfo.setId(<span class=\"number\">0L</span>);</span><br><span class=\"line\">imageInfo.setImageOwner(username);</span><br><span class=\"line\">imageInfo.setAllowDownloadTimes(imageDownloadTimes);</span><br><span class=\"line\">imageInfo.setAuthorizedUser(finalAuthorizedUsers);</span><br><span class=\"line\">imageInfo.setIsDeleted(IsDeletedEnum.NO.getCode());</span><br><span class=\"line\">imageInfo.setCreateTime(<span class=\"keyword\">new</span> <span class=\"title class_\">Timestamp</span>(System.currentTimeMillis()));</span><br><span class=\"line\">imageInfo.setCreateUser(username);</span><br><span class=\"line\">imageInfo.setUpdateUser(username)</span><br><span class=\"line\"><span class=\"comment\">// 插入数据库</span></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"variable\">insert</span> <span class=\"operator\">=</span> imageInfoServiceMapper.insert(imageInfo);</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"3、【Mybatis-Plus】【PostgreSQL】List＜T＞-类型数据如何局部更新\"><a href=\"#3、【Mybatis-Plus】【PostgreSQL】List＜T＞-类型数据如何局部更新\" class=\"headerlink\" title=\"3、【Mybatis-Plus】【PostgreSQL】List＜T＞ 类型数据如何局部更新\"></a>3、【Mybatis-Plus】【PostgreSQL】List＜T＞ 类型数据如何局部更新</h3><p><strong>注意</strong>：这里讲解的是更新，上面第<code>2</code>点是插入！<br>1、说明：如果使用的是<code>VO</code>实体类接收前端传的参数，参数中存在<code>List</code>类型属性，直接更新数据库，也需要使用<code>JsonTypeHandler</code>自定义处理类。<br>2、使用方式<br>（1）VO实体类  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Data</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">ImageScanningSchemeVO</span> <span class=\"keyword\">implements</span> <span class=\"title class_\">Serializable</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">final</span> <span class=\"keyword\">static</span> <span class=\"type\">long</span> <span class=\"variable\">serialVersionUID</span> <span class=\"operator\">=</span> <span class=\"number\">1L</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 镜像扫描方案id</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"meta\">@NotNull(message = &quot;镜像扫描方案id不能为空&quot;)</span></span><br><span class=\"line\">    <span class=\"meta\">@NotBlank(message = &quot;镜像扫描方案id不能为空&quot;)</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> String id;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 镜像扫描方案名称</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> String name;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 镜像扫描方案描述</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> String description;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 镜像扫描方案扫描规则</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> List&lt;String&gt; rule;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>（2）VO实体类对应的Java实体类，也就是对应的数据库表（这里没有实际意义，只是看下和VO实体类的区别）  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Data</span></span><br><span class=\"line\"><span class=\"meta\">@TableName(value = &quot;t_image_scanning_scheme&quot;, autoResultMap = true)</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">ImageScanningScheme</span> <span class=\"keyword\">implements</span> <span class=\"title class_\">Serializable</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"type\">long</span> <span class=\"variable\">serialVersionUID</span> <span class=\"operator\">=</span> <span class=\"number\">1L</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 镜像扫描方案id</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"meta\">@TableId(type = IdType.ASSIGN_UUID)</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> String id;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 镜像扫描方案名称</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> String name;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 镜像扫描方案类型</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> String type;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 镜像扫描方案描述</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> String description;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 镜像扫描方案扫描规则</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"meta\">@TableField(typeHandler = JsonTypeHandler.class)</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> List&lt;String&gt; rule;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 低危漏洞数</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"type\">Integer</span> <span class=\"variable\">lowNum</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 高危漏洞数</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"type\">Integer</span> <span class=\"variable\">highNum</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 中危漏洞数</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"type\">Integer</span> <span class=\"variable\">mediumNum</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 严重漏洞数</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"type\">Integer</span> <span class=\"variable\">criticalNum</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 最近扫描时间</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> LocalDateTime scanningTime;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 项目id</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"meta\">@NotNull(message = &quot;项目不能为空&quot;)</span></span><br><span class=\"line\">    <span class=\"meta\">@NotBlank(message = &quot;项目不能为空&quot;)</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> String projectId;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>（3）使用  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@PutMapping</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> R&lt;ImageScanningSchemeVO&gt; <span class=\"title function_\">update</span><span class=\"params\">(<span class=\"meta\">@Validated</span> <span class=\"meta\">@RequestBody</span> ImageScanningSchemeVO imageScanningSchemeVO)</span> &#123;</span><br><span class=\"line\">        <span class=\"type\">boolean</span> <span class=\"variable\">update</span> <span class=\"operator\">=</span> imageScanningSchemeService.update(<span class=\"literal\">null</span>, <span class=\"keyword\">new</span> <span class=\"title class_\">UpdateWrapper</span>&lt;ImageScanningScheme&gt;().eq(<span class=\"string\">&quot;id&quot;</span>, imageScanningSchemeVO.getId())</span><br><span class=\"line\">                .set(<span class=\"string\">&quot;name&quot;</span>, imageScanningSchemeVO.getName())</span><br><span class=\"line\">\t\t\t\t<span class=\"comment\">// 更新时，必须这样设置，它才能调用类型自定义处理类</span></span><br><span class=\"line\">                .set(<span class=\"string\">&quot;rule&quot;</span>, imageScanningSchemeVO.getRule(), <span class=\"string\">&quot;typeHandler=com.bzhcloud.handler.JsonTypeHandler&quot;</span>)</span><br><span class=\"line\">                .set(<span class=\"string\">&quot;description&quot;</span>, imageScanningSchemeVO.getDescription()));</span><br><span class=\"line\">        IFUtils.isTure(!update).throwMessage(<span class=\"string\">&quot;镜像扫描方案设置失败&quot;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> R.success(imageScanningSchemeVO);</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>\n\n<br/>\n\n\n<hr>\n<br/>\n\n\n\n<h1 id=\"五、详细教程\"><a href=\"#五、详细教程\" class=\"headerlink\" title=\"五、详细教程\"></a>五、详细教程</h1><p><a href=\"https://zhuanlan.zhihu.com/p/646946752\">请点击跳转</a></p>\n","more":"<hr>\n<h1 id=\"一、Postgresql在linux（虚拟环境中）中安装教程\"><a href=\"#一、Postgresql在linux（虚拟环境中）中安装教程\" class=\"headerlink\" title=\"一、Postgresql在linux（虚拟环境中）中安装教程\"></a>一、Postgresql在linux（虚拟环境中）中安装教程</h1><p>1、官网下载地址：<br><a href=\"https://www.postgresql.org/download/\">https://www.postgresql.org/download/</a></p>\n<img src=\"/2023/10/17/Postgresql%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/postgresql1.jpg\" class=\"\">\n\n<p><strong>注意</strong>：Postgresql15的版本，navicat连接不了，会报错误，原因自查。  </p>\n<p>2、安装教程官网会给出  </p>\n<img src=\"/2023/10/17/Postgresql%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/postgresql2.jpg\" class=\"\">\n<figure class=\"highlight cmd\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 下载安装rpm仓库（sudo表示使用root用户权限来进行操作）</span><br><span class=\"line\">sudo yum install -y https://download.postgresql.org/pub/repos/yum/reporpms/EL-<span class=\"number\">7</span>-x86_64/pgdg-redhat-repo-latest.noarch.rpm</span><br><span class=\"line\"># 安装</span><br><span class=\"line\">sudo yum install -y postgresql14-server</span><br><span class=\"line\"># 初始化数据库</span><br><span class=\"line\">sudo /usr/pgsql-<span class=\"number\">15</span>/bin/postgresql-<span class=\"number\">14</span>-setup initdb</span><br><span class=\"line\"># 允许自启</span><br><span class=\"line\">sudo systemctl enable postgresql-<span class=\"number\">14</span></span><br><span class=\"line\"># 启动服务</span><br><span class=\"line\">sudo systemctl <span class=\"built_in\">start</span> postgresql-<span class=\"number\">14</span></span><br></pre></td></tr></table></figure>\n\n<p>3、初始化（初始化后会创建一个用户postgres，我们需要重新给它设置密码）<br><strong>注意</strong>：这里的postgres用户就是linux中的用户，属于PostgreSQL Server的用户组。  </p>\n<figure class=\"highlight cmd\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#删除密码</span><br><span class=\"line\">sudo passwd -d postgres</span><br><span class=\"line\">#设置密码</span><br><span class=\"line\">sudo passwd postgres</span><br><span class=\"line\">#切换成postgres用户（如果报权限不够就使用：su -postgres）</span><br><span class=\"line\">su postgres</span><br><span class=\"line\">#进入postgresql client</span><br><span class=\"line\">psql</span><br><span class=\"line\">#或者使用这个命令直接从别的用户进入postgresql client</span><br><span class=\"line\">sudo -u postgres psql</span><br><span class=\"line\">#修改数据库中postgres用户密码</span><br><span class=\"line\">ALTER USER postgres WITH PASSWORD &#x27;root&#x27;;</span><br><span class=\"line\">#退出</span><br><span class=\"line\">\\q</span><br></pre></td></tr></table></figure>\n\n<p>4、因为我们想通过本地的navicat来进行连接，所以需要关闭防火墙或者打开5432端口<br><strong>注意</strong>：下面的命令可能会让你输入root密码来进行验证，如果不想可以在命令前面加上 sudo，如果出现“postgres 不在 sudoers 文件中。此事将被报告。”，<a href=\"https://blog.csdn.net/m0_59133441/article/details/121511380\">可点击此处来解决</a>。<br>（1）查看防火墙状态</p>\n<figure class=\"highlight ada\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">firewall-cmd <span class=\"comment\">--state</span></span><br></pre></td></tr></table></figure>\n<p>（2）停止firewall</p>\n<figure class=\"highlight arduino\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">systemctl stop firewalld.service</span><br></pre></td></tr></table></figure>\n<p>（3）禁止firewall开机启动</p>\n<figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">systemctl <span class=\"built_in\">disable</span> firewalld.service</span><br></pre></td></tr></table></figure>\n<p>或者<br>（1）开放指定端口</p>\n<figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">firewall-cmd <span class=\"attribute\">--zone</span>=public <span class=\"attribute\">--add-port</span>=5432/tcp --permanent</span><br></pre></td></tr></table></figure>\n<p>（2）关闭指定端口</p>\n<figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">firewall-cmd <span class=\"attribute\">--zone</span>=public <span class=\"attribute\">--remove-port</span>=5672/tcp --permanent</span><br></pre></td></tr></table></figure>\n<p>（3）重启防火墙</p>\n<figure class=\"highlight ada\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">firewall-cmd <span class=\"comment\">--reloadl</span></span><br></pre></td></tr></table></figure>\n\n<p>5、修改配置文件<br>（1）用root用户打开配置文件或者在下面命令前加上 sudo  </p>\n<figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"regexp\">//</span> 注意先看自己的版本是几，然后把下面路径中的<span class=\"number\">14</span>改为自己的版本</span><br><span class=\"line\">vim <span class=\"regexp\">/var/</span>lib<span class=\"regexp\">/pgsql/</span><span class=\"number\">14</span><span class=\"regexp\">/data/</span>postgresql.conf</span><br></pre></td></tr></table></figure>\n<p>在 postgresql.conf 文件中取消注释，修改listen_addresses为’*’表示监听任意地址</p>\n<img src=\"/2023/10/17/Postgresql%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/postgresql3.jpg\" class=\"\">\n<p>（2）同样修改另一个配置文件</p>\n<figure class=\"highlight pgsql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// 注意先看自己的版本是几，然后把下面路径中的<span class=\"number\">14</span>改为自己的版本</span><br><span class=\"line\">vim /var/lib/pgsql/<span class=\"number\">14</span>/data/pg_hba.conf</span><br></pre></td></tr></table></figure>\n<p>在 IPv4 local connections下面新增一行：</p>\n<figure class=\"highlight apache\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">host</span>  <span class=\"literal\">all</span>  <span class=\"literal\">all</span> <span class=\"number\">0.0.0.0</span>/<span class=\"number\">0</span> scram-sha-<span class=\"number\">256</span></span><br></pre></td></tr></table></figure>\n<img src=\"/2023/10/17/Postgresql%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/postgresql4.jpg\" class=\"\">\n<p>（3）重启服务（ 需要查看自己的版本号，<a href=\"https://dandelioncloud.cn/article/details/1597226823283064833\">查看方法请点击</a> ）</p>\n<figure class=\"highlight apache\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">sudo</span> systemctl restart postgresql-<span class=\"number\">14</span></span><br></pre></td></tr></table></figure>\n\n<p>6、然后就可以用navicat等工具连接了  </p>\n<p>7、卸载Postgresql的方法，<a href=\"https://www.cnblogs.com/june-/articles/14276416.html\">请点击这里。</a></p>\n<p>8、注意事项<br>（1）postgresql，它不支持单引号和反引号，只支持双引号，比如关键字在mysql中可以用反引号包裹，但在postgresql中得用双引号包裹；<br>（2）关键字后面的as不能省略；</p>\n<br/>\n\n<hr>\n<br/>\n\n\n<h1 id=\"二、Postgresql使用方法\"><a href=\"#二、Postgresql使用方法\" class=\"headerlink\" title=\"二、Postgresql使用方法\"></a>二、Postgresql使用方法</h1><h3 id=\"1、登录命令\"><a href=\"#1、登录命令\" class=\"headerlink\" title=\"1、登录命令\"></a>1、登录命令</h3><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#连接指定服务器上的数据库</span><br><span class=\"line\">psql <span class=\"operator\">-</span>h IP <span class=\"operator\">-</span>p 端口 <span class=\"operator\">-</span>U 用户名 <span class=\"operator\">-</span>d 数据库名 <span class=\"operator\">-</span>W</span><br></pre></td></tr></table></figure>\n<p>说明：<br><code>-h</code>：数据库所在的IP地址；<br><code>-p</code>：（默认5432）数据库的监听端口；<br><code>-U</code>：用户名；<br><code>-d</code>：数据库名称；<br><code>-W</code>：提示输入密码；</p>\n<h3 id=\"2、常用命令说明\"><a href=\"#2、常用命令说明\" class=\"headerlink\" title=\"2、常用命令说明\"></a>2、常用命令说明</h3><p><code>\\?</code>：所有命令帮助；<br><code>\\l</code>：列出所有数据库；<br><code>\\d</code>：列出数据库中所有表；<br><code>\\dt</code>：列出数据库中所有表；<br><code>\\d [table_name]</code>：显示指定表的结构；<br><code>\\di</code>：列出数据库中所有 index；<br><code>\\dv</code>：列出数据库中所有 view；<br><code>\\h</code>：sql命令帮助；<br><code>\\q</code>：退出连接；<br><code>\\c [database_name]</code>：切换到指定的数据库；<br><code>\\c</code>：显示当前数据库名称和用户；<br><code>\\conninfo</code>：显示客户端的连接信息；<br><code>\\du</code>：显示所有用户；<br><code>\\dn</code>：显示数据库中的schema；<br><code>\\encoding</code>：显示字符集；<br><code>select version();</code>：显示版本信息；<br><code>\\i testdb.sql</code>：执行sql文件；<br><code>\\x</code>：扩展展示结果信息，相当于MySQL的\\G；<br><code>\\o /tmp/test.txt</code>：将下一条sql执行结果导入文件中。</p>\n<h3 id=\"3、关于对表的操作\"><a href=\"#3、关于对表的操作\" class=\"headerlink\" title=\"3、关于对表的操作\"></a>3、关于对表的操作</h3><p>1、向表中新增一列属性：  </p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">ALTER</span> <span class=\"keyword\">TABLE</span> table_name <span class=\"keyword\">ADD</span> <span class=\"keyword\">COLUMN</span>  column_name1 data_type;</span><br></pre></td></tr></table></figure>\n\n\n<br/>\n\n<hr>\n<br/>\n\n\n<h1 id=\"三、JDBC连接和数据库对应说明\"><a href=\"#三、JDBC连接和数据库对应说明\" class=\"headerlink\" title=\"三、JDBC连接和数据库对应说明\"></a>三、JDBC连接和数据库对应说明</h1><p><code>jdbc:postgresql://192.168.126.130:5432/sonarqube?currentSchema=public</code>  </p>\n<img src=\"/2023/10/17/Postgresql%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/postgresql5.png\" class=\"\">\n\n\n<br/>\n\n<hr>\n<br/>\n\n\n<h1 id=\"四、使用MybatisPlus过程中出现的问题\"><a href=\"#四、使用MybatisPlus过程中出现的问题\" class=\"headerlink\" title=\"四、使用MybatisPlus过程中出现的问题\"></a>四、使用MybatisPlus过程中出现的问题</h1><h3 id=\"1、关于json类型的存储\"><a href=\"#1、关于json类型的存储\" class=\"headerlink\" title=\"1、关于json类型的存储\"></a>1、关于json类型的存储</h3><p>1、说明<br>如果<code>java</code>类型是<code>List</code>，怎么存到数据库中，首先将数据库中的属性设为<code>json</code>格式，大小为0。<br>2、操作<br>（1）创建<code>json</code>处理类<code>JsonTypeHandler</code>  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> com.fasterxml.jackson.core.JsonProcessingException;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.fasterxml.jackson.core.type.TypeReference;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.fasterxml.jackson.databind.ObjectMapper;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.apache.ibatis.type.BaseTypeHandler;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.apache.ibatis.type.JdbcType;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.IOException;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.lang.reflect.Type;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.sql.*;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">JsonTypeHandler</span>&lt;T&gt; <span class=\"keyword\">extends</span> <span class=\"title class_\">BaseTypeHandler</span>&lt;T&gt; &#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"type\">ObjectMapper</span> <span class=\"variable\">objectMapper</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">ObjectMapper</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">setNonNullParameter</span><span class=\"params\">(PreparedStatement preparedStatement, <span class=\"type\">int</span> i, T t, JdbcType jdbcType)</span> <span class=\"keyword\">throws</span> SQLException &#123;</span><br><span class=\"line\">        String jsonString;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            jsonString = objectMapper.writeValueAsString(t);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (JsonProcessingException e) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"title class_\">RuntimeException</span>(<span class=\"string\">&quot;Failed to convert Java object to JSON string&quot;</span>, e);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        preparedStatement.setObject(i, jsonString, Types.OTHER);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> T <span class=\"title function_\">getNullableResult</span><span class=\"params\">(ResultSet resultSet, String s)</span> <span class=\"keyword\">throws</span> SQLException &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> deserializeFromDb(resultSet.getString(s));</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> T <span class=\"title function_\">getNullableResult</span><span class=\"params\">(ResultSet resultSet, <span class=\"type\">int</span> i)</span> <span class=\"keyword\">throws</span> SQLException &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> deserializeFromDb(resultSet.getString(i));</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> T <span class=\"title function_\">getNullableResult</span><span class=\"params\">(CallableStatement callableStatement, <span class=\"type\">int</span> i)</span> <span class=\"keyword\">throws</span> SQLException &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> deserializeFromDb(callableStatement.getString(i));</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> T <span class=\"title function_\">deserializeFromDb</span><span class=\"params\">(String dbData)</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (dbData == <span class=\"literal\">null</span> || <span class=\"string\">&quot;&quot;</span>.equals(dbData)) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">null</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> objectMapper.readValue(dbData, <span class=\"keyword\">new</span> <span class=\"title class_\">TypeReference</span>&lt;T&gt;() &#123;</span><br><span class=\"line\">                <span class=\"meta\">@Override</span></span><br><span class=\"line\">                <span class=\"keyword\">public</span> Type <span class=\"title function_\">getType</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">return</span> <span class=\"built_in\">super</span>.getType();</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (IOException e) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"title class_\">RuntimeException</span>(<span class=\"string\">&quot;Failed to parse JSON data from database&quot;</span>, e);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>（2）将实体类中的<code>List</code>属性上面添加注解<code>@TableField(typeHandler = JsonTypeHandler.class)</code>以及在类上面添加注解<code>@TableName(value = &quot;t_detection_scheme&quot;, autoResultMap = true)</code>，一定要加<code>autoResultMap = true</code>，不然查询的时候<code>List</code>属性会为<code>null</code>。  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@JsonIgnoreProperties(ignoreUnknown = true)</span></span><br><span class=\"line\"><span class=\"meta\">@Data</span></span><br><span class=\"line\"><span class=\"meta\">@TableName(value = &quot;t_detection_scheme&quot;, autoResultMap = true)</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">DetectionScheme</span> <span class=\"keyword\">implements</span> <span class=\"title class_\">Serializable</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"type\">long</span> <span class=\"variable\">serialVersionUID</span> <span class=\"operator\">=</span> <span class=\"number\">1L</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 检测方案id</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"meta\">@TableId(type = IdType.ASSIGN_UUID)</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> String id;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 方案名称</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> String name;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 检测语言</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"meta\">@TableField(typeHandler = JsonTypeHandler.class)</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> List&lt;String&gt; language;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 描述</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> String description;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 创建时间</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"meta\">@TableField(fill = FieldFill.INSERT)</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> LocalDateTime createTime;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 更新时间</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"meta\">@TableField(fill = FieldFill.UPDATE)</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> LocalDateTime updateTime;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 逻辑删除</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"type\">Integer</span> <span class=\"variable\">deleted</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 创建人id</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> String createBy;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 规则包id</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"meta\">@TableField(typeHandler = JsonTypeHandler.class)</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> List&lt;String&gt; rulePackageId;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 项目id</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> String projectId;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 是否是规则维护接口</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"meta\">@NotBlank(message = &quot;接口区分参数不可为空&quot;)</span></span><br><span class=\"line\">    <span class=\"meta\">@TableField(exist = false)</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> Boolean ruleMaintenance;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"2、【Mybatis-Plus】【PostgreSQL】List＜T＞-类型数据如何存数据库\"><a href=\"#2、【Mybatis-Plus】【PostgreSQL】List＜T＞-类型数据如何存数据库\" class=\"headerlink\" title=\"2、【Mybatis-Plus】【PostgreSQL】List＜T＞ 类型数据如何存数据库\"></a>2、【Mybatis-Plus】【PostgreSQL】List＜T＞ 类型数据如何存数据库</h3><p>1、核心原理<br>是将<code>List＜T＞</code>转为<code>JSONArray</code>类型，数据库对应字段为<code>json</code>类型，即可完成存储。<br>2、建表<br>建表<code>sql</code>：  </p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">create</span> <span class=\"keyword\">table</span> test.image_info (</span><br><span class=\"line\">   id serial <span class=\"keyword\">PRIMARY</span> key <span class=\"keyword\">NOT</span> <span class=\"keyword\">null</span>,</span><br><span class=\"line\">   image_address text    <span class=\"keyword\">NOT</span> <span class=\"keyword\">NULL</span>,</span><br><span class=\"line\">   image_owner text    <span class=\"keyword\">NOT</span> <span class=\"keyword\">NULL</span>,</span><br><span class=\"line\">   download_times int8  <span class=\"keyword\">default</span> <span class=\"number\">10</span>,</span><br><span class=\"line\">   authorized_user json,</span><br><span class=\"line\">   is_deleted int8 <span class=\"keyword\">NOT</span> <span class=\"keyword\">null</span></span><br><span class=\"line\">);</span><br></pre></td></tr></table></figure>\n<ul>\n<li><code>id</code>：<br>数据类型为<code>serial</code>，这意味着它是一个自动递增的整数类型。<br>设置为主键<code>（PRIMARY KEY）</code>，这意味着每一行的<code>id</code>值必须是唯一的，不能有重复。<br>设置为<code>NOT NULL</code>，这意味着这一列的值不能为空。  </li>\n<li><code>image_address</code>：<br>数据类型为<code>text</code>，这意味着它可以存储任意长度的文本字符串。<br>设置为<code>NOT NULL</code>，这意味着这一列的值不能为空。  </li>\n<li><code>image_owner</code>：<br>数据类型为<code>text</code>，这意味着它可以存储任意长度的文本字符串。<br>设置为<code>NOT NULL</code>，这意味着这一列的值不能为空。  </li>\n<li><code>download_times</code>：<br>数据类型为<code>int8</code>，这意味着它可以存储<code>8</code>字节的整数。<br>设置了默认值为<code>10（default 10）</code>，这意味着如果插入数据时没有为这一列提供值，那么它的值将默认为<code>10</code>。  </li>\n<li><code>authorized_user</code>：<br>数据类型为<code>json</code>，这意味着它可以存储<code>JSON</code>格式的字符串。<br>这一列可以用来存储有权访问该图片的用户信息，这些信息是以<code>JSON</code>格式存储的。  </li>\n<li><code>is_deleted</code>：<br>数据类型为<code>int8</code>，这意味着它可以存储<code>8</code>字节的整数。<br>设置为<code>NOT NULL</code>，这意味着这一列的值不能为空。<br>这一列通常用于标记该记录是否已被删除。例如，<code>1</code>可以表示已删除，<code>0</code>可以表示未删除。</li>\n</ul>\n<p>3、创建<code>List</code>处理器，<code>ArrayTypeHandler.java</code>  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> org.apache.ibatis.type.BaseTypeHandler;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.apache.ibatis.type.JdbcType;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.apache.ibatis.type.MappedJdbcTypes;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.apache.ibatis.type.MappedTypes;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.sql.*;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Arrays;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.List;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 自定义的 MyBatis 类型处理器 ArrayTypeHandler，它继承自 BaseTypeHandler。</span></span><br><span class=\"line\"><span class=\"comment\"> * 这个类型处理器主要用于处理 Java 数组或 List 与数据库中的数组类型（如 PostgreSQL 的 ARRAY 类型）。</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@MappedJdbcTypes</span>(JdbcType.ARRAY)：表示这个类型处理器用于处理 JdbcType.ARRAY 类型的数据。</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@MappedTypes</span>(Object.class)：表示这个类型处理器可以处理 Object 类型的数据。</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"meta\">@MappedJdbcTypes(JdbcType.ARRAY)</span></span><br><span class=\"line\"><span class=\"meta\">@MappedTypes(Object.class)</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">ArrayTypeHandler</span> <span class=\"keyword\">extends</span> <span class=\"title class_\">BaseTypeHandler</span>&lt;Object&gt; &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"type\">String</span> <span class=\"variable\">TYPE_NAME_VARCHAR</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;varchar&quot;</span>;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"type\">String</span> <span class=\"variable\">TYPE_NAME_INTEGER</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;integer&quot;</span>;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"type\">String</span> <span class=\"variable\">TYPE_NAME_BOOLEAN</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;boolean&quot;</span>;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"type\">String</span> <span class=\"variable\">TYPE_NAME_NUMERIC</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;numeric&quot;</span>;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"type\">String</span> <span class=\"variable\">TYPE_NAME_LONG</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;bigint&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">// 这个方法在插入或更新数据时被调用，将 Java 数组或 List 转换为数据库中的 ARRAY 类型。</span></span><br><span class=\"line\">\t<span class=\"comment\">// 首先判断传入的参数 parameter 是 List 还是数组，并将其转换为 Object[] 类型的 arrayObject。</span></span><br><span class=\"line\">\t<span class=\"comment\">// 根据 arrayObject[0] 的类型确定数据库中 ARRAY 类型的元素类型，并创建一个对应类型的 Array 对象。</span></span><br><span class=\"line\">\t<span class=\"comment\">// 使用 PreparedStatement 的 setArray 方法将 Array 对象设置到 SQL 语句的相应位置。</span></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">setNonNullParameter</span><span class=\"params\">(PreparedStatement ps, <span class=\"type\">int</span> i, Object parameter, JdbcType jdbcType)</span> <span class=\"keyword\">throws</span> SQLException &#123;</span><br><span class=\"line\">        Object[] arrayObject;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (parameter <span class=\"keyword\">instanceof</span> List) &#123;</span><br><span class=\"line\">            arrayObject = ((List) parameter).toArray();</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            arrayObject = (Object[]) parameter;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"type\">Connection</span> <span class=\"variable\">conn</span> <span class=\"operator\">=</span> ps.getConnection();</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (arrayObject.length &gt; <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">            <span class=\"type\">String</span> <span class=\"variable\">typeName</span> <span class=\"operator\">=</span> TYPE_NAME_VARCHAR;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (arrayObject[<span class=\"number\">0</span>] <span class=\"keyword\">instanceof</span> Integer) &#123;</span><br><span class=\"line\">                typeName = TYPE_NAME_INTEGER;</span><br><span class=\"line\">            &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (arrayObject[<span class=\"number\">0</span>] <span class=\"keyword\">instanceof</span> String) &#123;</span><br><span class=\"line\">                typeName = TYPE_NAME_VARCHAR;</span><br><span class=\"line\">            &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (arrayObject[<span class=\"number\">0</span>] <span class=\"keyword\">instanceof</span> Boolean) &#123;</span><br><span class=\"line\">                typeName = TYPE_NAME_BOOLEAN;</span><br><span class=\"line\">            &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (arrayObject[<span class=\"number\">0</span>] <span class=\"keyword\">instanceof</span> Double) &#123;</span><br><span class=\"line\">                typeName = TYPE_NAME_NUMERIC;</span><br><span class=\"line\">            &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (arrayObject[<span class=\"number\">0</span>] <span class=\"keyword\">instanceof</span> Long) &#123;</span><br><span class=\"line\">                typeName = TYPE_NAME_LONG;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"type\">Array</span> <span class=\"variable\">array</span> <span class=\"operator\">=</span> conn.createArrayOf(typeName, arrayObject);</span><br><span class=\"line\">            ps.setArray(i, array);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            ps.setArray(i, <span class=\"literal\">null</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">// 这些getNullableResult方法在查询数据时被调用，将数据库中的 ARRAY 类型转换为 Java 数组或 List。</span></span><br><span class=\"line\">\t<span class=\"comment\">// 分别针对 ResultSet 和 CallableStatement 提供了三个重载版本的 getNullableResult 方法。</span></span><br><span class=\"line\">\t<span class=\"comment\">//所有这些方法都调用了私有方法 getArray，并将返回的数组转换为 List。</span></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> List&lt;Object&gt; <span class=\"title function_\">getNullableResult</span><span class=\"params\">(ResultSet resultSet, String s)</span> <span class=\"keyword\">throws</span> SQLException &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> getArray(resultSet.getArray(s));</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> List&lt;Object&gt; <span class=\"title function_\">getNullableResult</span><span class=\"params\">(ResultSet resultSet, <span class=\"type\">int</span> i)</span> <span class=\"keyword\">throws</span> SQLException &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> getArray(resultSet.getArray(i));</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> List&lt;Object&gt; <span class=\"title function_\">getNullableResult</span><span class=\"params\">(CallableStatement callableStatement, <span class=\"type\">int</span> i)</span> <span class=\"keyword\">throws</span> SQLException &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> getArray(callableStatement.getArray(i));</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">// 这个私有方法负责从给定的 Array 对象中获取实际的数组数据</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> List&lt;Object&gt; <span class=\"title function_\">getArray</span><span class=\"params\">(Array array)</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (array == <span class=\"literal\">null</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">null</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> Arrays.asList((Object[]) array.getArray());</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">null</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>说明：<br><code>ArrayTypeHandler</code>类主要用于在<code>MyBatis</code>中处理<code>Java</code>数组或<code>List</code>与数据库中的<code>ARRAY</code>类型之间的转换，使得<code>MyBatis</code>能够正确地将数组或<code>List</code>数据存入数据库以及从数据库中读取数组或<code>List</code>数据。<br>4、创建实体类<code>ImageInfo</code>  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Data</span></span><br><span class=\"line\"><span class=\"meta\">@NoArgsConstructor</span></span><br><span class=\"line\"><span class=\"meta\">@AllArgsConstructor</span></span><br><span class=\"line\"><span class=\"meta\">@EqualsAndHashCode(callSuper = false)</span></span><br><span class=\"line\"><span class=\"meta\">@TableName(value = &quot;test.image_info &quot;)</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">ImageInfo</span> <span class=\"keyword\">implements</span> <span class=\"title class_\">Serializable</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * ID</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"meta\">@TableId(value = &quot;id&quot;, type = IdType.AUTO)</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> Long id;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@TableField(value = &quot;image_address&quot;)</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> String imageAddress;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@TableField(value = &quot;image_owner&quot;)</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> String imageOwner;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@TableField(value = &quot;download_times&quot;)</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"type\">int</span> downloadTimes;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@TableField(value = &quot;authorized_user&quot;, typeHandler = ArrayTypeHandler.class)</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> JSON authorizedUser;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@TableField(value = &quot;is_deleted&quot;)</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"type\">int</span> isDeleted;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>5、测试  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 创建entity</span></span><br><span class=\"line\">List&lt;String&gt; finalAuthorizedUsers = authorizedUsers;</span><br><span class=\"line\"><span class=\"type\">ImageInfo</span> <span class=\"variable\">imageInfo</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">ImageInfo</span>();</span><br><span class=\"line\">imageInfo.setId(<span class=\"number\">0L</span>);</span><br><span class=\"line\">imageInfo.setImageOwner(username);</span><br><span class=\"line\">imageInfo.setAllowDownloadTimes(imageDownloadTimes);</span><br><span class=\"line\">imageInfo.setAuthorizedUser(finalAuthorizedUsers);</span><br><span class=\"line\">imageInfo.setIsDeleted(IsDeletedEnum.NO.getCode());</span><br><span class=\"line\">imageInfo.setCreateTime(<span class=\"keyword\">new</span> <span class=\"title class_\">Timestamp</span>(System.currentTimeMillis()));</span><br><span class=\"line\">imageInfo.setCreateUser(username);</span><br><span class=\"line\">imageInfo.setUpdateUser(username)</span><br><span class=\"line\"><span class=\"comment\">// 插入数据库</span></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"variable\">insert</span> <span class=\"operator\">=</span> imageInfoServiceMapper.insert(imageInfo);</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"3、【Mybatis-Plus】【PostgreSQL】List＜T＞-类型数据如何局部更新\"><a href=\"#3、【Mybatis-Plus】【PostgreSQL】List＜T＞-类型数据如何局部更新\" class=\"headerlink\" title=\"3、【Mybatis-Plus】【PostgreSQL】List＜T＞ 类型数据如何局部更新\"></a>3、【Mybatis-Plus】【PostgreSQL】List＜T＞ 类型数据如何局部更新</h3><p><strong>注意</strong>：这里讲解的是更新，上面第<code>2</code>点是插入！<br>1、说明：如果使用的是<code>VO</code>实体类接收前端传的参数，参数中存在<code>List</code>类型属性，直接更新数据库，也需要使用<code>JsonTypeHandler</code>自定义处理类。<br>2、使用方式<br>（1）VO实体类  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Data</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">ImageScanningSchemeVO</span> <span class=\"keyword\">implements</span> <span class=\"title class_\">Serializable</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">final</span> <span class=\"keyword\">static</span> <span class=\"type\">long</span> <span class=\"variable\">serialVersionUID</span> <span class=\"operator\">=</span> <span class=\"number\">1L</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 镜像扫描方案id</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"meta\">@NotNull(message = &quot;镜像扫描方案id不能为空&quot;)</span></span><br><span class=\"line\">    <span class=\"meta\">@NotBlank(message = &quot;镜像扫描方案id不能为空&quot;)</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> String id;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 镜像扫描方案名称</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> String name;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 镜像扫描方案描述</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> String description;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 镜像扫描方案扫描规则</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> List&lt;String&gt; rule;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>（2）VO实体类对应的Java实体类，也就是对应的数据库表（这里没有实际意义，只是看下和VO实体类的区别）  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Data</span></span><br><span class=\"line\"><span class=\"meta\">@TableName(value = &quot;t_image_scanning_scheme&quot;, autoResultMap = true)</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">ImageScanningScheme</span> <span class=\"keyword\">implements</span> <span class=\"title class_\">Serializable</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"type\">long</span> <span class=\"variable\">serialVersionUID</span> <span class=\"operator\">=</span> <span class=\"number\">1L</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 镜像扫描方案id</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"meta\">@TableId(type = IdType.ASSIGN_UUID)</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> String id;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 镜像扫描方案名称</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> String name;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 镜像扫描方案类型</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> String type;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 镜像扫描方案描述</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> String description;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 镜像扫描方案扫描规则</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"meta\">@TableField(typeHandler = JsonTypeHandler.class)</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> List&lt;String&gt; rule;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 低危漏洞数</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"type\">Integer</span> <span class=\"variable\">lowNum</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 高危漏洞数</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"type\">Integer</span> <span class=\"variable\">highNum</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 中危漏洞数</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"type\">Integer</span> <span class=\"variable\">mediumNum</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 严重漏洞数</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"type\">Integer</span> <span class=\"variable\">criticalNum</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 最近扫描时间</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> LocalDateTime scanningTime;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 项目id</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"meta\">@NotNull(message = &quot;项目不能为空&quot;)</span></span><br><span class=\"line\">    <span class=\"meta\">@NotBlank(message = &quot;项目不能为空&quot;)</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> String projectId;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>（3）使用  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@PutMapping</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> R&lt;ImageScanningSchemeVO&gt; <span class=\"title function_\">update</span><span class=\"params\">(<span class=\"meta\">@Validated</span> <span class=\"meta\">@RequestBody</span> ImageScanningSchemeVO imageScanningSchemeVO)</span> &#123;</span><br><span class=\"line\">        <span class=\"type\">boolean</span> <span class=\"variable\">update</span> <span class=\"operator\">=</span> imageScanningSchemeService.update(<span class=\"literal\">null</span>, <span class=\"keyword\">new</span> <span class=\"title class_\">UpdateWrapper</span>&lt;ImageScanningScheme&gt;().eq(<span class=\"string\">&quot;id&quot;</span>, imageScanningSchemeVO.getId())</span><br><span class=\"line\">                .set(<span class=\"string\">&quot;name&quot;</span>, imageScanningSchemeVO.getName())</span><br><span class=\"line\">\t\t\t\t<span class=\"comment\">// 更新时，必须这样设置，它才能调用类型自定义处理类</span></span><br><span class=\"line\">                .set(<span class=\"string\">&quot;rule&quot;</span>, imageScanningSchemeVO.getRule(), <span class=\"string\">&quot;typeHandler=com.bzhcloud.handler.JsonTypeHandler&quot;</span>)</span><br><span class=\"line\">                .set(<span class=\"string\">&quot;description&quot;</span>, imageScanningSchemeVO.getDescription()));</span><br><span class=\"line\">        IFUtils.isTure(!update).throwMessage(<span class=\"string\">&quot;镜像扫描方案设置失败&quot;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> R.success(imageScanningSchemeVO);</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>\n\n<br/>\n\n\n<hr>\n<br/>\n\n\n\n<h1 id=\"五、详细教程\"><a href=\"#五、详细教程\" class=\"headerlink\" title=\"五、详细教程\"></a>五、详细教程</h1><p><a href=\"https://zhuanlan.zhihu.com/p/646946752\">请点击跳转</a></p>\n","categories":[{"name":"工作技能","path":"api/categories/工作技能.json"}],"tags":[{"name":"工作技能","path":"api/tags/工作技能.json"},{"name":"数据库","path":"api/tags/数据库.json"},{"name":"Postgresql","path":"api/tags/Postgresql.json"}]}