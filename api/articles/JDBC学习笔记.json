{"title":"JDBC学习笔记","slug":"JDBC学习笔记","date":"2024-05-26T12:06:47.000Z","updated":"2024-07-12T07:43:37.661Z","comments":true,"path":"api/articles/JDBC学习笔记.json","realPath":null,"excerpt":null,"covers":["/2024/05/26/JDBC%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/1.png","/2024/05/26/JDBC%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/2.png"],"cover":null,"content":"<br/>\n\n\n<hr>\n<br/>\n\n\n<h1 id=\"一、JDBC概述\"><a href=\"#一、JDBC概述\" class=\"headerlink\" title=\"一、JDBC概述\"></a>一、JDBC概述</h1><p>1、JDBC（Java DataBase Connectivity），就是使用java语言操作关系型数据库的一套API（Application Programming Interface，应用程序编程接口）。<br>2、本质：官方（sun公司）定义的一套操作所有关系型数据库的规则（接口），然后各个数据库厂商去实现这套接口，提供数据库驱动<code>jar</code>包，我们可以使用这套接口（<code>JDBC</code>）编程，真正执行的代码是驱动<code>jar</code>包中的实现类。<br>3、好处：各数据库厂商使用相同的接口，Java程序员一套代码就可以访问所有数据库，也就是说，想更换数据库的话直接更换数据库驱动，不用去修改代码。<br>4、图解：  </p>\n<img src=\"/2024/05/26/JDBC%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/1.png\" class=\"\">\n\n\n\n<br/>\n\n\n<hr>\n<br/>\n\n\n\n<h1 id=\"二、JDBC快速入门\"><a href=\"#二、JDBC快速入门\" class=\"headerlink\" title=\"二、JDBC快速入门\"></a>二、JDBC快速入门</h1><p>1、导入驱动jar包，<code>mysql-connector-java-5.1.37.jar</code>；<br>2、代码：  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">JDBCDemo</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> <span class=\"keyword\">throws</span> ClassNotFoundException, SQLException &#123;</span><br><span class=\"line\">        <span class=\"comment\">//1.加载驱动</span></span><br><span class=\"line\">        Class.forName(<span class=\"string\">&quot;com.mysql.jdbc.Driver&quot;</span>);</span><br><span class=\"line\">        <span class=\"comment\">//2.用户信息和url</span></span><br><span class=\"line\">\t\t<span class=\"comment\">// 如果连接的是本机mysql并且端口是默认的3306，url可以简写为：</span></span><br><span class=\"line\">        <span class=\"comment\">// String url = &quot;jdbc:mysql:///test&quot;;</span></span><br><span class=\"line\">        <span class=\"type\">String</span> <span class=\"variable\">url</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;jdbc:mysql://localhost:3306/test&quot;</span>;</span><br><span class=\"line\">        <span class=\"type\">String</span> <span class=\"variable\">username</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;root&quot;</span>;</span><br><span class=\"line\">        <span class=\"type\">String</span> <span class=\"variable\">password</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;123456&quot;</span>;</span><br><span class=\"line\">        <span class=\"comment\">//3.连接成功，数据库对象，代表数据库</span></span><br><span class=\"line\">        <span class=\"type\">Connection</span> <span class=\"variable\">conn</span> <span class=\"operator\">=</span> DriverManager.getConnection(url, username, password);</span><br><span class=\"line\">        <span class=\"comment\">//4.执行SQL的对象</span></span><br><span class=\"line\">        <span class=\"type\">Statement</span> <span class=\"variable\">statement</span> <span class=\"operator\">=</span> conn.createStatement();</span><br><span class=\"line\">        <span class=\"comment\">//5.执行SQL的对象去执行SQL，可能存在结果，查看返回结果</span></span><br><span class=\"line\">        <span class=\"type\">String</span> <span class=\"variable\">sql</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;update account set balance = 500 where id = 1&quot;</span>;</span><br><span class=\"line\">        <span class=\"type\">int</span> <span class=\"variable\">count</span> <span class=\"operator\">=</span> statement.executeUpdate(sql);</span><br><span class=\"line\">        System.out.println(count);</span><br><span class=\"line\">        <span class=\"comment\">//6.关闭资源</span></span><br><span class=\"line\">        statement.close();</span><br><span class=\"line\">        conn.close();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<br/>\n\n\n<hr>\n<br/>\n\n\n\n<h1 id=\"三、JDBC-API介绍\"><a href=\"#三、JDBC-API介绍\" class=\"headerlink\" title=\"三、JDBC API介绍\"></a>三、JDBC API介绍</h1><p>都是位于<code>java.sql</code>包下的。  </p>\n<h3 id=\"1、DriverManager（驱动管理类）\"><a href=\"#1、DriverManager（驱动管理类）\" class=\"headerlink\" title=\"1、DriverManager（驱动管理类）\"></a>1、DriverManager（驱动管理类）</h3><p>1、作用<br>（1）注册驱动；<br>（2）获取数据库连接。<br>2、分析<br>（1）注册驱动  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//1.加载驱动</span></span><br><span class=\"line\">Class.forName(<span class=\"string\">&quot;com.mysql.jdbc.Driver&quot;</span>);</span><br></pre></td></tr></table></figure>\n<p>是执行上面这行代码进行注册驱动的，为什么这段代码可以注册驱动呢？<br>我们查看这个<code>com.mysql.jdbc.Driver</code>类查看源码，发现它实现了<code>java.sql.Driver</code>接口，然后有一个静态代码块，在静态代码块中，执行了<code>DriverManager.registerDriver(new Driver());</code>，也就是说，<code>com.mysql.jdbc.Driver</code>类在加载的时候，会执行静态代码块中的代码，然后就注册了驱动。  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.mysql.jdbc;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Driver</span> <span class=\"keyword\">extends</span> <span class=\"title class_\">NonRegisteringDriver</span> <span class=\"keyword\">implements</span> <span class=\"title class_\">java</span>.sql.Driver &#123;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"keyword\">public</span> <span class=\"title function_\">Driver</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> SQLException &#123;&#125;</span><br><span class=\"line\">\t</span><br><span class=\"line\">    <span class=\"comment\">//静态代码块</span></span><br><span class=\"line\">    <span class=\"keyword\">static</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            <span class=\"comment\">//DriverManager 是 java.sql包下的类</span></span><br><span class=\"line\">            DriverManager.registerDriver(<span class=\"keyword\">new</span> <span class=\"title class_\">Driver</span>());</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (SQLException e) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"title class_\">RuntimeException</span>(<span class=\"string\">&quot;Can&#x27;t register driver!&quot;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>在<code>mysql 5</code>以后的驱动包，可以不用写<code>Class.forName(&quot;com.mysql.jdbc.Driver&quot;);</code>这行代码了，因为在jar包中<code>META-INF/services/java.sql.Driver</code>文件中，它帮我们写好了<code>com.mysql.jdbc.Driver</code>，会自动帮我们加载。<br>（2）获取数据库连接  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 如果连接的是本机mysql并且端口是默认的3306，url可以简写为：</span></span><br><span class=\"line\"><span class=\"comment\">// String url = &quot;jdbc:mysql:///test&quot;;</span></span><br><span class=\"line\"><span class=\"comment\">// 配置 useSSL=false 参数，禁用安全连接方式，可以解决警告提示：</span></span><br><span class=\"line\"><span class=\"type\">String</span> <span class=\"variable\">url</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;jdbc:mysql://localhost:3306/test&quot;</span>;</span><br><span class=\"line\"><span class=\"type\">String</span> <span class=\"variable\">username</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;root&quot;</span>;</span><br><span class=\"line\"><span class=\"type\">String</span> <span class=\"variable\">password</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;123456&quot;</span>;</span><br><span class=\"line\"><span class=\"comment\">//获取数据库连接</span></span><br><span class=\"line\"><span class=\"type\">Connection</span> <span class=\"variable\">conn</span> <span class=\"operator\">=</span> DriverManager.getConnection(url, username, password);</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"2、Connection（数据库连接对象）\"><a href=\"#2、Connection（数据库连接对象）\" class=\"headerlink\" title=\"2、Connection（数据库连接对象）\"></a>2、Connection（数据库连接对象）</h3><p>1、作用<br>（1）获取执行sql的对象；<br>（2）管理事务。<br>2、分析<br>（1）获取执行sql的对象<br><code>Statement</code>：普通执行sql对象，无法防止sql注入；<br><code>PreparedStatement</code>：预编译sql对象，防止sql注入，效率更高；<br><code>CallableStatement</code>：执行存储过程的sql对象。  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 获取数据库连接对象</span></span><br><span class=\"line\"><span class=\"type\">Connection</span> <span class=\"variable\">conn</span> <span class=\"operator\">=</span> DriverManager.getConnection(url, username, password);</span><br><span class=\"line\"><span class=\"comment\">// 获取执行SQL的对象</span></span><br><span class=\"line\"><span class=\"type\">Statement</span> <span class=\"variable\">statement</span> <span class=\"operator\">=</span> conn.createStatement();</span><br><span class=\"line\"><span class=\"comment\">// 执行SQL的对象去执行SQL，可能存在结果，查看返回结果</span></span><br><span class=\"line\"><span class=\"type\">String</span> <span class=\"variable\">sql</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;update account set balance = 500 where id = 1&quot;</span>;</span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"variable\">count</span> <span class=\"operator\">=</span> statement.executeUpdate(sql);</span><br></pre></td></tr></table></figure>\n<p>（2）管理事务  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 假设已经获取了连接对象</span></span><br><span class=\"line\"><span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">\t<span class=\"comment\">// 这里需要 try...catch 捕获异常，因为开启事务之后，如果捕获到异常就回滚</span></span><br><span class=\"line\">\t<span class=\"comment\">// 开启事务</span></span><br><span class=\"line\">\tconn.setAutoCommit(<span class=\"literal\">false</span>);</span><br><span class=\"line\">\t<span class=\"comment\">// 执行sql1</span></span><br><span class=\"line\">\t<span class=\"type\">String</span> <span class=\"variable\">sql1</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;update account set balance = balance - 100 where id = 1&quot;</span>;</span><br><span class=\"line\">\tstatement.executeUpdate(sql1);</span><br><span class=\"line\">\t<span class=\"comment\">// 执行sql2</span></span><br><span class=\"line\">\t<span class=\"type\">String</span> <span class=\"variable\">sql2</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;update account set balance = balance + 100 where id = 2&quot;</span>;</span><br><span class=\"line\">\tstatement.executeUpdate(sql2);</span><br><span class=\"line\">\t<span class=\"comment\">// 提交事务</span></span><br><span class=\"line\">\tconn.commit();</span><br><span class=\"line\">&#125; <span class=\"keyword\">catch</span>(Exception e) &#123;</span><br><span class=\"line\">\t<span class=\"comment\">// 回滚事务</span></span><br><span class=\"line\">\tconn.rollback();</span><br><span class=\"line\">&#125; <span class=\"keyword\">finally</span> &#123;</span><br><span class=\"line\">\t<span class=\"comment\">// 关闭资源</span></span><br><span class=\"line\">\tstatement.close();</span><br><span class=\"line\">\tconn.close();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"3、Statement（执行sql的对象）\"><a href=\"#3、Statement（执行sql的对象）\" class=\"headerlink\" title=\"3、Statement（执行sql的对象）\"></a>3、Statement（执行sql的对象）</h3><p>1、作用<br>（1）使用<code>int executeUpdate(sql)</code>执行<code>DML</code>、<code>DDL</code>语句；<br>（2）使用<code>ResultSet executeQuery(sql)</code>执行<code>DQL</code>语句。<br>2、分析  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// executeUpdate：执行新增、删除、修改语句</span></span><br><span class=\"line\"><span class=\"type\">String</span> <span class=\"variable\">sql1</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;update account set balance = balance - 100 where id = 1&quot;</span>;</span><br><span class=\"line\">statement.executeUpdate(sql1);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// executeQuery：执行查询语句</span></span><br><span class=\"line\"><span class=\"type\">String</span> <span class=\"variable\">sql2</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;select * from account&quot;</span>;</span><br><span class=\"line\"><span class=\"type\">ResultSet</span> <span class=\"variable\">rs</span> <span class=\"operator\">=</span> statement.executeQuery(sql2);</span><br></pre></td></tr></table></figure>\n<p><code>PreparedStatement</code>使用方法：  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">String</span> <span class=\"variable\">sql</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;select * from account where username = ? and id = ?&quot;</span>;</span><br><span class=\"line\"><span class=\"type\">PreparedStatement</span> <span class=\"variable\">pst</span> <span class=\"operator\">=</span> conn.prepareStatement(sql);</span><br><span class=\"line\">pst.setString(<span class=\"number\">1</span>, <span class=\"string\">&quot;zhangsan&quot;</span>);</span><br><span class=\"line\">pst.setInt(<span class=\"number\">2</span>, <span class=\"number\">1</span>);</span><br><span class=\"line\"><span class=\"type\">ResultSet</span> <span class=\"variable\">rs</span> <span class=\"operator\">=</span> pst.executeQuery();</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"4、ResultSet（结果集对象）\"><a href=\"#4、ResultSet（结果集对象）\" class=\"headerlink\" title=\"4、ResultSet（结果集对象）\"></a>4、ResultSet（结果集对象）</h3><p>1、作用<br>封装了<code>select</code>查询语句的结果集。<br><code>boolean next()</code>：跳转到下一行数据，判断当前行是否有数据，下面为图解：  </p>\n<img src=\"/2024/05/26/JDBC%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/2.png\" class=\"\">\n<p>2、分析  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">JDBCDemo</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> <span class=\"keyword\">throws</span> ClassNotFoundException, SQLException &#123;</span><br><span class=\"line\">        <span class=\"comment\">//1.加载驱动</span></span><br><span class=\"line\">        Class.forName(<span class=\"string\">&quot;com.mysql.jdbc.Driver&quot;</span>);</span><br><span class=\"line\">        <span class=\"comment\">//2.用户信息和url</span></span><br><span class=\"line\">\t\t<span class=\"comment\">// 如果连接的是本机mysql并且端口是默认的3306，url可以简写为：</span></span><br><span class=\"line\">        <span class=\"comment\">// String url = &quot;jdbc:mysql:///test&quot;;</span></span><br><span class=\"line\">        <span class=\"type\">String</span> <span class=\"variable\">url</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;jdbc:mysql://localhost:3306/test&quot;</span>;</span><br><span class=\"line\">        <span class=\"type\">String</span> <span class=\"variable\">username</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;root&quot;</span>;</span><br><span class=\"line\">        <span class=\"type\">String</span> <span class=\"variable\">password</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;123456&quot;</span>;</span><br><span class=\"line\">        <span class=\"comment\">//3.连接成功，数据库对象，代表数据库</span></span><br><span class=\"line\">        <span class=\"type\">Connection</span> <span class=\"variable\">conn</span> <span class=\"operator\">=</span> DriverManager.getConnection(url, username, password);</span><br><span class=\"line\">        <span class=\"comment\">//4.执行SQL的对象</span></span><br><span class=\"line\">        <span class=\"type\">Statement</span> <span class=\"variable\">statement</span> <span class=\"operator\">=</span> conn.createStatement();</span><br><span class=\"line\">        <span class=\"comment\">//5.执行SQL的对象去执行SQL，可能存在结果，查看返回结果</span></span><br><span class=\"line\">        <span class=\"type\">String</span> <span class=\"variable\">sql2</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;select * from account&quot;</span>;</span><br><span class=\"line\">        <span class=\"type\">ResultSet</span> <span class=\"variable\">rs</span> <span class=\"operator\">=</span> statement.executeQuery(sql2);</span><br><span class=\"line\">        <span class=\"keyword\">while</span>(rs.next()) &#123;</span><br><span class=\"line\">\t\t\t<span class=\"type\">int</span> <span class=\"variable\">id</span> <span class=\"operator\">=</span> rs.getInt(<span class=\"string\">&quot;id&quot;</span>);</span><br><span class=\"line\">\t\t\t<span class=\"type\">String</span> <span class=\"variable\">name</span> <span class=\"operator\">=</span> rs.getString(<span class=\"string\">&quot;name&quot;</span>);</span><br><span class=\"line\">\t\t\t<span class=\"type\">String</span> <span class=\"variable\">sex</span> <span class=\"operator\">=</span> rs.getString(<span class=\"string\">&quot;sex&quot;</span>);</span><br><span class=\"line\">\t\t\t<span class=\"type\">int</span> <span class=\"variable\">age</span> <span class=\"operator\">=</span> rs.getInt(<span class=\"string\">&quot;age&quot;</span>);</span><br><span class=\"line\">\t\t\tSystem.out.println(id + <span class=\"string\">&quot;---&quot;</span> + name + <span class=\"string\">&quot;---&quot;</span> + sex + <span class=\"string\">&quot;---&quot;</span> + age);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">        <span class=\"comment\">//6.关闭资源</span></span><br><span class=\"line\">        statement.close();</span><br><span class=\"line\">        conn.close();</span><br><span class=\"line\">\t\trs.close();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<br/>\n\n\n<hr>\n<br/>\n\n\n\n<h1 id=\"四、数据库连接池\"><a href=\"#四、数据库连接池\" class=\"headerlink\" title=\"四、数据库连接池\"></a>四、数据库连接池</h1><h3 id=\"1、Driud\"><a href=\"#1、Driud\" class=\"headerlink\" title=\"1、Driud\"></a>1、Driud</h3><p>1、导入<code>druid-1.1.12.jar</code>包<br>2、配置文件<br>创建一个文件，名字叫做：<code>db.properties</code>。  </p>\n<figure class=\"highlight properties\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">driverClassName</span>=<span class=\"string\">com.mysql.jdbc.Driver</span></span><br><span class=\"line\"><span class=\"attr\">url</span>=<span class=\"string\">jdbc:mysql://localhost:3306/test</span></span><br><span class=\"line\"><span class=\"attr\">username</span>=<span class=\"string\">root</span></span><br><span class=\"line\"><span class=\"attr\">password</span>=<span class=\"string\">123456</span></span><br><span class=\"line\"><span class=\"comment\"># 初始化连接数量</span></span><br><span class=\"line\"><span class=\"attr\">initialSize</span>=<span class=\"string\">5</span></span><br><span class=\"line\"><span class=\"comment\"># 最大连接数量</span></span><br><span class=\"line\"><span class=\"attr\">maxActive</span>=<span class=\"string\">20</span></span><br><span class=\"line\"><span class=\"comment\"># 最大等待时间</span></span><br><span class=\"line\"><span class=\"attr\">maxWait</span>=<span class=\"string\">6000</span></span><br></pre></td></tr></table></figure>\n<p>3、代码测试  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Demo</span> &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"comment\">// 加载配置文件</span></span><br><span class=\"line\">\t\t<span class=\"type\">Properties</span> <span class=\"variable\">pro</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Properties</span>();</span><br><span class=\"line\">\t\tpro.load(<span class=\"keyword\">new</span> <span class=\"title class_\">FileInputStream</span>(<span class=\"string\">&quot;项目名称/src/db.properties&quot;</span>));</span><br><span class=\"line\">\t\t<span class=\"comment\">// 获取连接池对象</span></span><br><span class=\"line\">\t\t<span class=\"type\">DataSource</span> <span class=\"variable\">ds</span> <span class=\"operator\">=</span> DruidDataSourceFactory.createDataSource(pro);</span><br><span class=\"line\">\t\t<span class=\"comment\">// 获取连接对象</span></span><br><span class=\"line\">\t\t<span class=\"type\">Connection</span> <span class=\"variable\">conn</span> <span class=\"operator\">=</span> ds.getConnection();</span><br><span class=\"line\">\t&#125;\t</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>","more":"<br/>\n\n\n<hr>\n<br/>\n\n\n<h1 id=\"一、JDBC概述\"><a href=\"#一、JDBC概述\" class=\"headerlink\" title=\"一、JDBC概述\"></a>一、JDBC概述</h1><p>1、JDBC（Java DataBase Connectivity），就是使用java语言操作关系型数据库的一套API（Application Programming Interface，应用程序编程接口）。<br>2、本质：官方（sun公司）定义的一套操作所有关系型数据库的规则（接口），然后各个数据库厂商去实现这套接口，提供数据库驱动<code>jar</code>包，我们可以使用这套接口（<code>JDBC</code>）编程，真正执行的代码是驱动<code>jar</code>包中的实现类。<br>3、好处：各数据库厂商使用相同的接口，Java程序员一套代码就可以访问所有数据库，也就是说，想更换数据库的话直接更换数据库驱动，不用去修改代码。<br>4、图解：  </p>\n<img src=\"/2024/05/26/JDBC%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/1.png\" class=\"\">\n\n\n\n<br/>\n\n\n<hr>\n<br/>\n\n\n\n<h1 id=\"二、JDBC快速入门\"><a href=\"#二、JDBC快速入门\" class=\"headerlink\" title=\"二、JDBC快速入门\"></a>二、JDBC快速入门</h1><p>1、导入驱动jar包，<code>mysql-connector-java-5.1.37.jar</code>；<br>2、代码：  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">JDBCDemo</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> <span class=\"keyword\">throws</span> ClassNotFoundException, SQLException &#123;</span><br><span class=\"line\">        <span class=\"comment\">//1.加载驱动</span></span><br><span class=\"line\">        Class.forName(<span class=\"string\">&quot;com.mysql.jdbc.Driver&quot;</span>);</span><br><span class=\"line\">        <span class=\"comment\">//2.用户信息和url</span></span><br><span class=\"line\">\t\t<span class=\"comment\">// 如果连接的是本机mysql并且端口是默认的3306，url可以简写为：</span></span><br><span class=\"line\">        <span class=\"comment\">// String url = &quot;jdbc:mysql:///test&quot;;</span></span><br><span class=\"line\">        <span class=\"type\">String</span> <span class=\"variable\">url</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;jdbc:mysql://localhost:3306/test&quot;</span>;</span><br><span class=\"line\">        <span class=\"type\">String</span> <span class=\"variable\">username</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;root&quot;</span>;</span><br><span class=\"line\">        <span class=\"type\">String</span> <span class=\"variable\">password</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;123456&quot;</span>;</span><br><span class=\"line\">        <span class=\"comment\">//3.连接成功，数据库对象，代表数据库</span></span><br><span class=\"line\">        <span class=\"type\">Connection</span> <span class=\"variable\">conn</span> <span class=\"operator\">=</span> DriverManager.getConnection(url, username, password);</span><br><span class=\"line\">        <span class=\"comment\">//4.执行SQL的对象</span></span><br><span class=\"line\">        <span class=\"type\">Statement</span> <span class=\"variable\">statement</span> <span class=\"operator\">=</span> conn.createStatement();</span><br><span class=\"line\">        <span class=\"comment\">//5.执行SQL的对象去执行SQL，可能存在结果，查看返回结果</span></span><br><span class=\"line\">        <span class=\"type\">String</span> <span class=\"variable\">sql</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;update account set balance = 500 where id = 1&quot;</span>;</span><br><span class=\"line\">        <span class=\"type\">int</span> <span class=\"variable\">count</span> <span class=\"operator\">=</span> statement.executeUpdate(sql);</span><br><span class=\"line\">        System.out.println(count);</span><br><span class=\"line\">        <span class=\"comment\">//6.关闭资源</span></span><br><span class=\"line\">        statement.close();</span><br><span class=\"line\">        conn.close();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<br/>\n\n\n<hr>\n<br/>\n\n\n\n<h1 id=\"三、JDBC-API介绍\"><a href=\"#三、JDBC-API介绍\" class=\"headerlink\" title=\"三、JDBC API介绍\"></a>三、JDBC API介绍</h1><p>都是位于<code>java.sql</code>包下的。  </p>\n<h3 id=\"1、DriverManager（驱动管理类）\"><a href=\"#1、DriverManager（驱动管理类）\" class=\"headerlink\" title=\"1、DriverManager（驱动管理类）\"></a>1、DriverManager（驱动管理类）</h3><p>1、作用<br>（1）注册驱动；<br>（2）获取数据库连接。<br>2、分析<br>（1）注册驱动  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//1.加载驱动</span></span><br><span class=\"line\">Class.forName(<span class=\"string\">&quot;com.mysql.jdbc.Driver&quot;</span>);</span><br></pre></td></tr></table></figure>\n<p>是执行上面这行代码进行注册驱动的，为什么这段代码可以注册驱动呢？<br>我们查看这个<code>com.mysql.jdbc.Driver</code>类查看源码，发现它实现了<code>java.sql.Driver</code>接口，然后有一个静态代码块，在静态代码块中，执行了<code>DriverManager.registerDriver(new Driver());</code>，也就是说，<code>com.mysql.jdbc.Driver</code>类在加载的时候，会执行静态代码块中的代码，然后就注册了驱动。  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.mysql.jdbc;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Driver</span> <span class=\"keyword\">extends</span> <span class=\"title class_\">NonRegisteringDriver</span> <span class=\"keyword\">implements</span> <span class=\"title class_\">java</span>.sql.Driver &#123;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"keyword\">public</span> <span class=\"title function_\">Driver</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> SQLException &#123;&#125;</span><br><span class=\"line\">\t</span><br><span class=\"line\">    <span class=\"comment\">//静态代码块</span></span><br><span class=\"line\">    <span class=\"keyword\">static</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            <span class=\"comment\">//DriverManager 是 java.sql包下的类</span></span><br><span class=\"line\">            DriverManager.registerDriver(<span class=\"keyword\">new</span> <span class=\"title class_\">Driver</span>());</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (SQLException e) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"title class_\">RuntimeException</span>(<span class=\"string\">&quot;Can&#x27;t register driver!&quot;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>在<code>mysql 5</code>以后的驱动包，可以不用写<code>Class.forName(&quot;com.mysql.jdbc.Driver&quot;);</code>这行代码了，因为在jar包中<code>META-INF/services/java.sql.Driver</code>文件中，它帮我们写好了<code>com.mysql.jdbc.Driver</code>，会自动帮我们加载。<br>（2）获取数据库连接  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 如果连接的是本机mysql并且端口是默认的3306，url可以简写为：</span></span><br><span class=\"line\"><span class=\"comment\">// String url = &quot;jdbc:mysql:///test&quot;;</span></span><br><span class=\"line\"><span class=\"comment\">// 配置 useSSL=false 参数，禁用安全连接方式，可以解决警告提示：</span></span><br><span class=\"line\"><span class=\"type\">String</span> <span class=\"variable\">url</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;jdbc:mysql://localhost:3306/test&quot;</span>;</span><br><span class=\"line\"><span class=\"type\">String</span> <span class=\"variable\">username</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;root&quot;</span>;</span><br><span class=\"line\"><span class=\"type\">String</span> <span class=\"variable\">password</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;123456&quot;</span>;</span><br><span class=\"line\"><span class=\"comment\">//获取数据库连接</span></span><br><span class=\"line\"><span class=\"type\">Connection</span> <span class=\"variable\">conn</span> <span class=\"operator\">=</span> DriverManager.getConnection(url, username, password);</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"2、Connection（数据库连接对象）\"><a href=\"#2、Connection（数据库连接对象）\" class=\"headerlink\" title=\"2、Connection（数据库连接对象）\"></a>2、Connection（数据库连接对象）</h3><p>1、作用<br>（1）获取执行sql的对象；<br>（2）管理事务。<br>2、分析<br>（1）获取执行sql的对象<br><code>Statement</code>：普通执行sql对象，无法防止sql注入；<br><code>PreparedStatement</code>：预编译sql对象，防止sql注入，效率更高；<br><code>CallableStatement</code>：执行存储过程的sql对象。  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 获取数据库连接对象</span></span><br><span class=\"line\"><span class=\"type\">Connection</span> <span class=\"variable\">conn</span> <span class=\"operator\">=</span> DriverManager.getConnection(url, username, password);</span><br><span class=\"line\"><span class=\"comment\">// 获取执行SQL的对象</span></span><br><span class=\"line\"><span class=\"type\">Statement</span> <span class=\"variable\">statement</span> <span class=\"operator\">=</span> conn.createStatement();</span><br><span class=\"line\"><span class=\"comment\">// 执行SQL的对象去执行SQL，可能存在结果，查看返回结果</span></span><br><span class=\"line\"><span class=\"type\">String</span> <span class=\"variable\">sql</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;update account set balance = 500 where id = 1&quot;</span>;</span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"variable\">count</span> <span class=\"operator\">=</span> statement.executeUpdate(sql);</span><br></pre></td></tr></table></figure>\n<p>（2）管理事务  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 假设已经获取了连接对象</span></span><br><span class=\"line\"><span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">\t<span class=\"comment\">// 这里需要 try...catch 捕获异常，因为开启事务之后，如果捕获到异常就回滚</span></span><br><span class=\"line\">\t<span class=\"comment\">// 开启事务</span></span><br><span class=\"line\">\tconn.setAutoCommit(<span class=\"literal\">false</span>);</span><br><span class=\"line\">\t<span class=\"comment\">// 执行sql1</span></span><br><span class=\"line\">\t<span class=\"type\">String</span> <span class=\"variable\">sql1</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;update account set balance = balance - 100 where id = 1&quot;</span>;</span><br><span class=\"line\">\tstatement.executeUpdate(sql1);</span><br><span class=\"line\">\t<span class=\"comment\">// 执行sql2</span></span><br><span class=\"line\">\t<span class=\"type\">String</span> <span class=\"variable\">sql2</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;update account set balance = balance + 100 where id = 2&quot;</span>;</span><br><span class=\"line\">\tstatement.executeUpdate(sql2);</span><br><span class=\"line\">\t<span class=\"comment\">// 提交事务</span></span><br><span class=\"line\">\tconn.commit();</span><br><span class=\"line\">&#125; <span class=\"keyword\">catch</span>(Exception e) &#123;</span><br><span class=\"line\">\t<span class=\"comment\">// 回滚事务</span></span><br><span class=\"line\">\tconn.rollback();</span><br><span class=\"line\">&#125; <span class=\"keyword\">finally</span> &#123;</span><br><span class=\"line\">\t<span class=\"comment\">// 关闭资源</span></span><br><span class=\"line\">\tstatement.close();</span><br><span class=\"line\">\tconn.close();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"3、Statement（执行sql的对象）\"><a href=\"#3、Statement（执行sql的对象）\" class=\"headerlink\" title=\"3、Statement（执行sql的对象）\"></a>3、Statement（执行sql的对象）</h3><p>1、作用<br>（1）使用<code>int executeUpdate(sql)</code>执行<code>DML</code>、<code>DDL</code>语句；<br>（2）使用<code>ResultSet executeQuery(sql)</code>执行<code>DQL</code>语句。<br>2、分析  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// executeUpdate：执行新增、删除、修改语句</span></span><br><span class=\"line\"><span class=\"type\">String</span> <span class=\"variable\">sql1</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;update account set balance = balance - 100 where id = 1&quot;</span>;</span><br><span class=\"line\">statement.executeUpdate(sql1);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// executeQuery：执行查询语句</span></span><br><span class=\"line\"><span class=\"type\">String</span> <span class=\"variable\">sql2</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;select * from account&quot;</span>;</span><br><span class=\"line\"><span class=\"type\">ResultSet</span> <span class=\"variable\">rs</span> <span class=\"operator\">=</span> statement.executeQuery(sql2);</span><br></pre></td></tr></table></figure>\n<p><code>PreparedStatement</code>使用方法：  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">String</span> <span class=\"variable\">sql</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;select * from account where username = ? and id = ?&quot;</span>;</span><br><span class=\"line\"><span class=\"type\">PreparedStatement</span> <span class=\"variable\">pst</span> <span class=\"operator\">=</span> conn.prepareStatement(sql);</span><br><span class=\"line\">pst.setString(<span class=\"number\">1</span>, <span class=\"string\">&quot;zhangsan&quot;</span>);</span><br><span class=\"line\">pst.setInt(<span class=\"number\">2</span>, <span class=\"number\">1</span>);</span><br><span class=\"line\"><span class=\"type\">ResultSet</span> <span class=\"variable\">rs</span> <span class=\"operator\">=</span> pst.executeQuery();</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"4、ResultSet（结果集对象）\"><a href=\"#4、ResultSet（结果集对象）\" class=\"headerlink\" title=\"4、ResultSet（结果集对象）\"></a>4、ResultSet（结果集对象）</h3><p>1、作用<br>封装了<code>select</code>查询语句的结果集。<br><code>boolean next()</code>：跳转到下一行数据，判断当前行是否有数据，下面为图解：  </p>\n<img src=\"/2024/05/26/JDBC%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/2.png\" class=\"\">\n<p>2、分析  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">JDBCDemo</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> <span class=\"keyword\">throws</span> ClassNotFoundException, SQLException &#123;</span><br><span class=\"line\">        <span class=\"comment\">//1.加载驱动</span></span><br><span class=\"line\">        Class.forName(<span class=\"string\">&quot;com.mysql.jdbc.Driver&quot;</span>);</span><br><span class=\"line\">        <span class=\"comment\">//2.用户信息和url</span></span><br><span class=\"line\">\t\t<span class=\"comment\">// 如果连接的是本机mysql并且端口是默认的3306，url可以简写为：</span></span><br><span class=\"line\">        <span class=\"comment\">// String url = &quot;jdbc:mysql:///test&quot;;</span></span><br><span class=\"line\">        <span class=\"type\">String</span> <span class=\"variable\">url</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;jdbc:mysql://localhost:3306/test&quot;</span>;</span><br><span class=\"line\">        <span class=\"type\">String</span> <span class=\"variable\">username</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;root&quot;</span>;</span><br><span class=\"line\">        <span class=\"type\">String</span> <span class=\"variable\">password</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;123456&quot;</span>;</span><br><span class=\"line\">        <span class=\"comment\">//3.连接成功，数据库对象，代表数据库</span></span><br><span class=\"line\">        <span class=\"type\">Connection</span> <span class=\"variable\">conn</span> <span class=\"operator\">=</span> DriverManager.getConnection(url, username, password);</span><br><span class=\"line\">        <span class=\"comment\">//4.执行SQL的对象</span></span><br><span class=\"line\">        <span class=\"type\">Statement</span> <span class=\"variable\">statement</span> <span class=\"operator\">=</span> conn.createStatement();</span><br><span class=\"line\">        <span class=\"comment\">//5.执行SQL的对象去执行SQL，可能存在结果，查看返回结果</span></span><br><span class=\"line\">        <span class=\"type\">String</span> <span class=\"variable\">sql2</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;select * from account&quot;</span>;</span><br><span class=\"line\">        <span class=\"type\">ResultSet</span> <span class=\"variable\">rs</span> <span class=\"operator\">=</span> statement.executeQuery(sql2);</span><br><span class=\"line\">        <span class=\"keyword\">while</span>(rs.next()) &#123;</span><br><span class=\"line\">\t\t\t<span class=\"type\">int</span> <span class=\"variable\">id</span> <span class=\"operator\">=</span> rs.getInt(<span class=\"string\">&quot;id&quot;</span>);</span><br><span class=\"line\">\t\t\t<span class=\"type\">String</span> <span class=\"variable\">name</span> <span class=\"operator\">=</span> rs.getString(<span class=\"string\">&quot;name&quot;</span>);</span><br><span class=\"line\">\t\t\t<span class=\"type\">String</span> <span class=\"variable\">sex</span> <span class=\"operator\">=</span> rs.getString(<span class=\"string\">&quot;sex&quot;</span>);</span><br><span class=\"line\">\t\t\t<span class=\"type\">int</span> <span class=\"variable\">age</span> <span class=\"operator\">=</span> rs.getInt(<span class=\"string\">&quot;age&quot;</span>);</span><br><span class=\"line\">\t\t\tSystem.out.println(id + <span class=\"string\">&quot;---&quot;</span> + name + <span class=\"string\">&quot;---&quot;</span> + sex + <span class=\"string\">&quot;---&quot;</span> + age);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">        <span class=\"comment\">//6.关闭资源</span></span><br><span class=\"line\">        statement.close();</span><br><span class=\"line\">        conn.close();</span><br><span class=\"line\">\t\trs.close();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<br/>\n\n\n<hr>\n<br/>\n\n\n\n<h1 id=\"四、数据库连接池\"><a href=\"#四、数据库连接池\" class=\"headerlink\" title=\"四、数据库连接池\"></a>四、数据库连接池</h1><h3 id=\"1、Driud\"><a href=\"#1、Driud\" class=\"headerlink\" title=\"1、Driud\"></a>1、Driud</h3><p>1、导入<code>druid-1.1.12.jar</code>包<br>2、配置文件<br>创建一个文件，名字叫做：<code>db.properties</code>。  </p>\n<figure class=\"highlight properties\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">driverClassName</span>=<span class=\"string\">com.mysql.jdbc.Driver</span></span><br><span class=\"line\"><span class=\"attr\">url</span>=<span class=\"string\">jdbc:mysql://localhost:3306/test</span></span><br><span class=\"line\"><span class=\"attr\">username</span>=<span class=\"string\">root</span></span><br><span class=\"line\"><span class=\"attr\">password</span>=<span class=\"string\">123456</span></span><br><span class=\"line\"><span class=\"comment\"># 初始化连接数量</span></span><br><span class=\"line\"><span class=\"attr\">initialSize</span>=<span class=\"string\">5</span></span><br><span class=\"line\"><span class=\"comment\"># 最大连接数量</span></span><br><span class=\"line\"><span class=\"attr\">maxActive</span>=<span class=\"string\">20</span></span><br><span class=\"line\"><span class=\"comment\"># 最大等待时间</span></span><br><span class=\"line\"><span class=\"attr\">maxWait</span>=<span class=\"string\">6000</span></span><br></pre></td></tr></table></figure>\n<p>3、代码测试  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Demo</span> &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"comment\">// 加载配置文件</span></span><br><span class=\"line\">\t\t<span class=\"type\">Properties</span> <span class=\"variable\">pro</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Properties</span>();</span><br><span class=\"line\">\t\tpro.load(<span class=\"keyword\">new</span> <span class=\"title class_\">FileInputStream</span>(<span class=\"string\">&quot;项目名称/src/db.properties&quot;</span>));</span><br><span class=\"line\">\t\t<span class=\"comment\">// 获取连接池对象</span></span><br><span class=\"line\">\t\t<span class=\"type\">DataSource</span> <span class=\"variable\">ds</span> <span class=\"operator\">=</span> DruidDataSourceFactory.createDataSource(pro);</span><br><span class=\"line\">\t\t<span class=\"comment\">// 获取连接对象</span></span><br><span class=\"line\">\t\t<span class=\"type\">Connection</span> <span class=\"variable\">conn</span> <span class=\"operator\">=</span> ds.getConnection();</span><br><span class=\"line\">\t&#125;\t</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>","categories":[{"name":"工作技能","path":"api/categories/工作技能.json"}],"tags":[{"name":"工作技能","path":"api/tags/工作技能.json"},{"name":"后端","path":"api/tags/后端.json"},{"name":"Java","path":"api/tags/Java.json"}]}