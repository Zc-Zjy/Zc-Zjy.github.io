{"title":"SpringSecurity学习笔记","slug":"SpringSecurity学习笔记","date":"2024-09-03T03:03:26.000Z","updated":"2024-09-09T16:41:33.161Z","comments":true,"path":"api/articles/SpringSecurity学习笔记.json","realPath":null,"excerpt":null,"covers":["/2024/09/03/SpringSecurity%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/0.jpg","/2024/09/03/SpringSecurity%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/1.jpg","/2024/09/03/SpringSecurity%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/2.jpg","/2024/09/03/SpringSecurity%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/3.png","/2024/09/03/SpringSecurity%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/4.png"],"cover":null,"content":"<p>完整的项目地址：<a href=\"https://gitee.com/zuo-junyuan/zjy-security\">gitee地址</a><br><br/></p>\n<hr>\n<br/>\n  \n<h1 id=\"一、快速体验（基于JDK8）\"><a href=\"#一、快速体验（基于JDK8）\" class=\"headerlink\" title=\"一、快速体验（基于JDK8）\"></a>一、快速体验（基于JDK8）</h1><p>1、先创建一个springboot项目  </p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">parent</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework.boot<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-boot-starter-parent<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>2.5.0<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">parent</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependencies</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework.boot<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-boot-starter-web<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependencies</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework.boot<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-boot-starter-test<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">scope</span>&gt;</span>test<span class=\"tag\">&lt;/<span class=\"name\">scope</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>2、创建一个controller类  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@RestController</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">HelloController</span> &#123;</span><br><span class=\"line\">    <span class=\"meta\">@GetMapping(&quot;/hello&quot;)</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> String <span class=\"title function_\">hello</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">&quot;hello&quot;</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>3、启动项目，访问<a href=\"http://localhost:8080/hello%EF%BC%8C%E8%BF%94%E5%9B%9Ehello\">http://localhost:8080/hello，返回hello</a><br>4、整合springSecurity，引入springSecurity所需依赖  </p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework.boot<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-boot-starter-security<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>5、重新启动项目，刷新页面，会自动跳转到springSecurity帮我们自动生成的登陆页面，用户名为：<code>user</code>，密码在控制台。<br>6、登录之后需要退出，可以在浏览器输入：<code>http://localhost:8080/logout</code>，这个退出页面也是springSecurity帮我们自动生成的。  </p>\n<br/>\n\n\n<hr>\n<br/>\n\n\n<h1 id=\"二、原理讲解\"><a href=\"#二、原理讲解\" class=\"headerlink\" title=\"二、原理讲解\"></a>二、原理讲解</h1><p>这是针对<code>一、快速体验</code>的原理讲解！！！<br>1、先看springSecurity提供的比较重要的几个过滤器，下图为过滤器链。  </p>\n<img src=\"/2024/09/03/SpringSecurity%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/0.jpg\" class=\"\">  \n<ol>\n<li><code>UsernamePasswordAuthenticationFilter</code>：在这个过滤器里面判断用户名和密码是否正确。  </li>\n<li><code>ExceptionTranslationFilter</code>：主要处理在登录认证过程中出现的异常。  </li>\n<li><code>FilterSecurityInterceptor</code>：主要是去判断当前用户是谁。</li>\n</ol>\n<p>2、怎么查看完整的过滤器链呢？  </p>\n<ol>\n<li>在启动类的main方法中打个断点，像下面这样  <img src=\"/2024/09/03/SpringSecurity%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/1.jpg\" class=\"\">  </li>\n<li>选择断点中的计算机图标  <img src=\"/2024/09/03/SpringSecurity%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/2.jpg\" class=\"\">  </li>\n<li>在Expression输入框中执行：<code>run.getBean(DefaultSecurityFilterChain.class)</code>  <img src=\"/2024/09/03/SpringSecurity%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/3.png\" class=\"\">  \n<code>DefaultSecurityFilterChain</code>这个是springSecurity默认实现的过滤器链。<br>其中第<code>5</code>、<code>13</code>和<code>14</code>个过滤器上面已经介绍了，然后它的过滤器的顺序就是从上往下的。<br>我们可以看到第<code>6</code>和<code>7</code>个过滤器就是用来帮助我们自动生成登录页面和退出页面的。<br>3、将总的流程转换为图就是下面的图  <img src=\"/2024/09/03/SpringSecurity%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/4.png\" class=\"\">  \n（1）图中部分名词解释  </li>\n<li><code>Authentication</code>接口: 它的实现类，表示当前访问系统的用户，封装了用户相关信息。  </li>\n<li><code>AuthenticationManager</code>接口:定义了认证Authentication的方法。  </li>\n<li><code>UserDetailsservice</code>接口:加载用户特定数据的核心接口。里面定义了一个根据用户名查询用户信息的方法。  </li>\n<li><code>UserDetails</code>接口:提供核心用户信息。通过UserDetailsservice根据用户名获取处理的用户信息要封装成UserDetails对象返回。然后将这些信息封装到Authentication对象中。</li>\n</ol>\n<p>（2）讲解（针对<code>一、快速体验</code>的原理讲解）  </p>\n<ol>\n<li>首先前端登录，输入用户名和密码，请求达到<code>UsernamePasswordAuthenticationFilter</code>这个过滤器，从图上我们可以知道这个过滤器封装<code>Authentication</code>对象，因为此时我们只有用户名和密码，没有权限。  </li>\n<li>然后会将封装好的<code>Authentication</code>对象传给<code>ProviderManager</code>、<code>DaoAuthenticationProvider</code>和<code>InMemoryUserDetailsManager</code>进行认证。  </li>\n<li>在<code>InMemoryUserDetailsManager</code>中，它会去内存中根据用户名查询用户对应的信息（不是去数据库查，是内存），把对应的用户信息封装成<code>UserDetails</code>对象，返回给<code>DaoAuthenticationProvider</code>。  </li>\n<li>在<code>DaoAuthenticationProvider</code>中，通过<code>PasswordEncoder</code>对比<code>UserDetails</code>对象中的用户密码和<code>Authentication</code>对象中用户密码是否正确，如果正确，就把<code>UserDetails</code>对象中的权限信息设置到<code>Authentication</code>对象中。</li>\n</ol>\n<p>从讲解中我们可以看到，我们要想自定义，就需要把<code>InMemoryUserDetailsManager</code>替换掉，因为它是从内存中去查的，我们需要自己写去数据库查，然后也封装成<code>UserDetails</code>对象返回给<code>DaoAuthenticationProvider</code>。<br>除了这个，我们再看<code>UsernamePasswordAuthenticationFilter</code>这个过滤器，因为我们还需要将token返回去，而这个过滤器是没有的，所以我们也需要把这个过滤器替换了。<br>然后我们再看，就是用户登录成功之后，后续每个请求也得去认证这个token，所以我们还得自己写个过滤器，去判断这个token是否正确，然后这里有个重点，就是认证的时候，是不是得去查询数据中的用户信息，如果每个请求都去查数据库，那数据库的压力就很大，所以可以考虑使用<code>redis</code>，那什么时候往<code>redis</code>中存用户信息呢？可以在第一次登录的时候，在我们替换掉的<code>UsernamePasswordAuthenticationFilter</code>那个controller中操作。  </p>\n<br/>\n\n\n<hr>\n<br/>\n\n\n<h1 id=\"三、自定义登录接口\"><a href=\"#三、自定义登录接口\" class=\"headerlink\" title=\"三、自定义登录接口\"></a>三、自定义登录接口</h1><p><strong>说明：</strong><br>在第<code>二、原理讲解</code>篇说过，要想自定义登录页面，那我们就得自定义登录接口，得把springSecurity默认的<code>UsernamePasswordAuthenticationFilter</code>和<code>InMemoryUserDetailsManager</code>替换：  </p>\n<ol>\n<li><code>UsernamePasswordAuthenticationFilter</code>替换为<code>controller</code>登录接口；  </li>\n<li><code>InMemoryUserDetailsManager</code>替换为<code>UserDetailsService</code>（springSecurity中的接口）的实现类，去数据库中查询用户信息。</li>\n</ol>\n<p>现在我们基于<code>一、快速体验</code>来修改：<br>1、先创建和初始化数据库<br>因为<code>SpringSecurity</code>是不推荐明文密码存储的，所以如果需要明文密码存储，密码前面加<code>&#123;noop&#125;</code>。  </p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">create</span> database if <span class=\"keyword\">not</span> <span class=\"keyword\">exists</span> test;</span><br><span class=\"line\">use test;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">create</span> <span class=\"keyword\">table</span> `sys_user` (</span><br><span class=\"line\">\t`id` <span class=\"type\">bigint</span>(<span class=\"number\">20</span>) <span class=\"keyword\">not</span> <span class=\"keyword\">null</span> auto_increment comment <span class=\"string\">&#x27;主键&#x27;</span>,</span><br><span class=\"line\">\t`user_name` <span class=\"type\">varchar</span>(<span class=\"number\">64</span>) <span class=\"keyword\">not</span> <span class=\"keyword\">null</span> comment <span class=\"string\">&#x27;用户名&#x27;</span>,</span><br><span class=\"line\">\t`nick_name` <span class=\"type\">varchar</span>(<span class=\"number\">64</span>) <span class=\"keyword\">not</span> <span class=\"keyword\">null</span> comment <span class=\"string\">&#x27;用户昵称&#x27;</span>,</span><br><span class=\"line\">\t`password` <span class=\"type\">varchar</span>(<span class=\"number\">64</span>) <span class=\"keyword\">not</span> <span class=\"keyword\">null</span> comment <span class=\"string\">&#x27;密码&#x27;</span>,</span><br><span class=\"line\">\t`status` <span class=\"type\">char</span>(<span class=\"number\">1</span>) <span class=\"keyword\">default</span> <span class=\"string\">&#x27;0&#x27;</span> comment <span class=\"string\">&#x27;账号状态（0正常，1停用）&#x27;</span>,</span><br><span class=\"line\">\t`email` <span class=\"type\">varchar</span>(<span class=\"number\">64</span>) <span class=\"keyword\">not</span> <span class=\"keyword\">null</span> comment <span class=\"string\">&#x27;邮箱&#x27;</span>,</span><br><span class=\"line\">\t`phonenumber` <span class=\"type\">varchar</span>(<span class=\"number\">32</span>) <span class=\"keyword\">not</span> <span class=\"keyword\">null</span> comment <span class=\"string\">&#x27;手机号&#x27;</span>,</span><br><span class=\"line\">\t`sex` <span class=\"type\">char</span>(<span class=\"number\">1</span>) <span class=\"keyword\">default</span> <span class=\"string\">&#x27;2&#x27;</span> comment <span class=\"string\">&#x27;用户性别（0男，1女，2未知）&#x27;</span>,</span><br><span class=\"line\">\t`avatar` <span class=\"type\">varchar</span>(<span class=\"number\">128</span>) <span class=\"keyword\">default</span> <span class=\"keyword\">null</span> comment <span class=\"string\">&#x27;头像&#x27;</span>,</span><br><span class=\"line\">\t`user_type` <span class=\"type\">char</span>(<span class=\"number\">1</span>) <span class=\"keyword\">default</span> <span class=\"string\">&#x27;1&#x27;</span> comment <span class=\"string\">&#x27;用户类型（0管理员，1普通用户）&#x27;</span>,</span><br><span class=\"line\">\t`create_by` <span class=\"type\">bigint</span>(<span class=\"number\">20</span>) <span class=\"keyword\">default</span> <span class=\"keyword\">null</span> comment <span class=\"string\">&#x27;创建人的用户id&#x27;</span>,</span><br><span class=\"line\">\t`create_time` datetime <span class=\"keyword\">not</span> <span class=\"keyword\">null</span> comment <span class=\"string\">&#x27;创建时间&#x27;</span>,</span><br><span class=\"line\">\t`update_by` <span class=\"type\">bigint</span>(<span class=\"number\">20</span>) <span class=\"keyword\">default</span> <span class=\"keyword\">null</span> comment <span class=\"string\">&#x27;更新人的用户id&#x27;</span>,</span><br><span class=\"line\">\t`update_time` datetime <span class=\"keyword\">not</span> <span class=\"keyword\">null</span> comment <span class=\"string\">&#x27;更新时间&#x27;</span>,</span><br><span class=\"line\">\t`del_flag` <span class=\"type\">int</span>(<span class=\"number\">2</span>) <span class=\"keyword\">default</span> <span class=\"string\">&#x27;0&#x27;</span> comment <span class=\"string\">&#x27;删除标志（0代表未删除，1代表已删除）&#x27;</span>,</span><br><span class=\"line\">\t<span class=\"keyword\">primary</span> key (`id`)</span><br><span class=\"line\">) engine<span class=\"operator\">=</span>innodb auto_increment<span class=\"operator\">=</span><span class=\"number\">2</span> <span class=\"keyword\">default</span> charset<span class=\"operator\">=</span>utf8mb4 comment<span class=\"operator\">=</span><span class=\"string\">&#x27;用户表&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">insert</span> <span class=\"keyword\">into</span> `sys_user` <span class=\"keyword\">values</span> (<span class=\"number\">1</span>, <span class=\"string\">&#x27;admin&#x27;</span>, <span class=\"string\">&#x27;管理员&#x27;</span>, <span class=\"string\">&#x27;&#123;noop&#125;admin123&#x27;</span>, <span class=\"string\">&#x27;0&#x27;</span>, <span class=\"string\">&#x27;admin@qq.com&#x27;</span>, <span class=\"string\">&#x27;15888888888&#x27;</span>, <span class=\"string\">&#x27;2&#x27;</span>, <span class=\"string\">&#x27;&#x27;</span>, <span class=\"string\">&#x27;0&#x27;</span>, <span class=\"keyword\">null</span>, <span class=\"string\">&#x27;2022-01-01 00:00:00&#x27;</span>, <span class=\"keyword\">null</span>, <span class=\"string\">&#x27;2022-01-01 00:00:00&#x27;</span>, <span class=\"number\">0</span>);</span><br></pre></td></tr></table></figure>\n<p>2、引入相关依赖  </p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- redis依赖，如果有prent标签，已经继承了springboot，version版本标签就可以省略 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework.boot<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-boot-starter-data-redis<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>com.alibaba<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>fastjson<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>1.2.83<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>io.jsonwebtoken<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>jjwt<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>0.9.1<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>com.baomidou<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>mybatis-plus-boot-starter<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>3.5.2<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- 这里继承了springboot parent标签，所以不用version --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>mysql<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>mysql-connector-java<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>3、创建一个工具类包<code>utils</code><br>（1）创建redis序列化工具类  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.zjysecurity.utils;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> com.alibaba.fastjson.JSON;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.alibaba.fastjson.parser.ParserConfig;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.alibaba.fastjson.serializer.SerializerFeature;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.fasterxml.jackson.databind.JavaType;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.fasterxml.jackson.databind.type.TypeFactory;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.data.redis.serializer.RedisSerializer;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.data.redis.serializer.SerializationException;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.nio.charset.Charset;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@ClassName</span> FastJsonRdisSerializer</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@Author</span> zjy</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@Date</span> 2024/9/5 11:02</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@Description</span> Redis使用FastJson序列化</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@Version</span> 1.0</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">FastJsonRedisSerializer</span>&lt;T&gt; <span class=\"keyword\">implements</span> <span class=\"title class_\">RedisSerializer</span>&lt;T&gt; &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"type\">Charset</span> <span class=\"variable\">DEFAULT_CHARSET</span> <span class=\"operator\">=</span> Charset.forName(<span class=\"string\">&quot;UTF-8&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> Class&lt;T&gt; clazz;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">static</span> &#123;</span><br><span class=\"line\">        ParserConfig.getGlobalInstance().setAsmEnable(<span class=\"literal\">true</span>);</span><br><span class=\"line\">\t\tParserConfig.getGlobalInstance().setAutoTypeSupport(<span class=\"literal\">true</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"title function_\">FastJsonRedisSerializer</span><span class=\"params\">(Class&lt;T&gt; clazz)</span> &#123;</span><br><span class=\"line\">        <span class=\"built_in\">super</span>();</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.clazz = clazz;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"type\">byte</span>[] serialize(T t) <span class=\"keyword\">throws</span> SerializationException &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (t == <span class=\"literal\">null</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"title class_\">byte</span>[<span class=\"number\">0</span>];</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> JSON.toJSONString(t, SerializerFeature.WriteClassName).getBytes(DEFAULT_CHARSET);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> T <span class=\"title function_\">deserialize</span><span class=\"params\">(<span class=\"type\">byte</span>[] bytes)</span> <span class=\"keyword\">throws</span> SerializationException &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (bytes == <span class=\"literal\">null</span> || bytes.length &lt;= <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">null</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"type\">String</span> <span class=\"variable\">str</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">String</span>(bytes, DEFAULT_CHARSET);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> JSON.parseObject(str, clazz);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">protected</span> JavaType <span class=\"title function_\">getJavaType</span><span class=\"params\">(Class&lt;?&gt; clazz)</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> TypeFactory.defaultInstance().constructType(clazz);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>（2）创建Jwt工具类  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.zjysecurity.utils;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> io.jsonwebtoken.Claims;</span><br><span class=\"line\"><span class=\"keyword\">import</span> io.jsonwebtoken.JwtBuilder;</span><br><span class=\"line\"><span class=\"keyword\">import</span> io.jsonwebtoken.Jwts;</span><br><span class=\"line\"><span class=\"keyword\">import</span> io.jsonwebtoken.SignatureAlgorithm;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.crypto.SecretKey;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.crypto.spec.SecretKeySpec;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Base64;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Date;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.UUID;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@ClassName</span> JwtUtil</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@Author</span> zjy</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@Date</span> 2024/9/5 12:46</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@Description</span> Jwt工具类</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@Version</span> 1.0</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">JwtUtil</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 有效期，60 * 60 * 1000  一个小时</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"type\">long</span> <span class=\"variable\">JWT_TTL</span> <span class=\"operator\">=</span> <span class=\"number\">60</span> * <span class=\"number\">60</span> * <span class=\"number\">1000L</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 设置密钥明文，注意长度必须大于等于6位</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"type\">String</span> <span class=\"variable\">JWT_KEY</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;zjy&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> String <span class=\"title function_\">getUUID</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"type\">String</span> <span class=\"variable\">token</span> <span class=\"operator\">=</span> UUID.randomUUID().toString().replaceAll(<span class=\"string\">&quot;-&quot;</span>, <span class=\"string\">&quot;&quot;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> token;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 生成JWT</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> subject token中要存放的数据（json格式）</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span></span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> String <span class=\"title function_\">createJWT</span><span class=\"params\">(String subject)</span> &#123;</span><br><span class=\"line\">        <span class=\"type\">JwtBuilder</span> <span class=\"variable\">builder</span> <span class=\"operator\">=</span> getJwtBuilder(subject, <span class=\"literal\">null</span>, getUUID());</span><br><span class=\"line\">        <span class=\"keyword\">return</span> builder.compact();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 生成JWT</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> subject token中要存放的数据（json格式）</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> ttlMillis token超时时间</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span></span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> String <span class=\"title function_\">createJWT</span><span class=\"params\">(String subject, Long ttlMillis)</span> &#123;</span><br><span class=\"line\">        <span class=\"type\">JwtBuilder</span> <span class=\"variable\">builder</span> <span class=\"operator\">=</span> getJwtBuilder(subject, ttlMillis, getUUID());</span><br><span class=\"line\">        <span class=\"keyword\">return</span> builder.compact();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> JwtBuilder <span class=\"title function_\">getJwtBuilder</span><span class=\"params\">(String subject, Long ttlMillis, String uuid)</span> &#123;</span><br><span class=\"line\">        <span class=\"type\">SignatureAlgorithm</span> <span class=\"variable\">signatureAlgorithm</span> <span class=\"operator\">=</span> SignatureAlgorithm.HS256;</span><br><span class=\"line\">        <span class=\"type\">SecretKey</span> <span class=\"variable\">secretKey</span> <span class=\"operator\">=</span> generalKey();</span><br><span class=\"line\">        <span class=\"type\">long</span> <span class=\"variable\">nowMillis</span> <span class=\"operator\">=</span> System.currentTimeMillis();</span><br><span class=\"line\">        <span class=\"type\">Date</span> <span class=\"variable\">now</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Date</span>(nowMillis);</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (ttlMillis == <span class=\"literal\">null</span>) &#123;</span><br><span class=\"line\">            ttlMillis = JwtUtil.JWT_TTL;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"type\">long</span> <span class=\"variable\">expMillis</span> <span class=\"operator\">=</span> nowMillis + ttlMillis;</span><br><span class=\"line\">        <span class=\"type\">Date</span> <span class=\"variable\">exp</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Date</span>(expMillis);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> Jwts.builder()</span><br><span class=\"line\">                .setId(uuid)              <span class=\"comment\">// 唯一ID</span></span><br><span class=\"line\">                .setSubject(subject)      <span class=\"comment\">// 主题</span></span><br><span class=\"line\">                .setIssuer(<span class=\"string\">&quot;zjy&quot;</span>)         <span class=\"comment\">// 签发者</span></span><br><span class=\"line\">                .setIssuedAt(now)        <span class=\"comment\">// 签发时间</span></span><br><span class=\"line\">                .signWith(signatureAlgorithm, secretKey) <span class=\"comment\">// 使用HS256对称加密算法签名，第二个参数为密钥</span></span><br><span class=\"line\">                .setExpiration(exp);      <span class=\"comment\">// 过期时间</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 生成JWT</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> id</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> subject</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> ttlMillis</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span></span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> String <span class=\"title function_\">createJWT</span><span class=\"params\">(String id, String subject, Long ttlMillis)</span> &#123;</span><br><span class=\"line\">        <span class=\"type\">JwtBuilder</span> <span class=\"variable\">builder</span> <span class=\"operator\">=</span> getJwtBuilder(subject, ttlMillis, id);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> builder.compact();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 生成加密后的密钥 secretKey</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span></span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> SecretKey <span class=\"title function_\">generalKey</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"type\">byte</span>[] encodedKey = Base64.getDecoder().decode(JwtUtil.JWT_KEY);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"title class_\">SecretKeySpec</span>(encodedKey, <span class=\"number\">0</span>, encodedKey.length, <span class=\"string\">&quot;AES&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 解析JWT</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> jwt</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span></span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@throws</span> Exception</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> Claims <span class=\"title function_\">parseJWT</span><span class=\"params\">(String jwt)</span> <span class=\"keyword\">throws</span> Exception&#123;</span><br><span class=\"line\">        <span class=\"type\">SecretKey</span> <span class=\"variable\">secretKey</span> <span class=\"operator\">=</span> generalKey();</span><br><span class=\"line\">        <span class=\"keyword\">return</span> Jwts.parser()</span><br><span class=\"line\">                .setSigningKey(secretKey)</span><br><span class=\"line\">                .parseClaimsJws(jwt)</span><br><span class=\"line\">                .getBody();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>（3）创建redis工具类  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.zjysecurity.utils;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.data.redis.core.BoundSetOperations;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.data.redis.core.HashOperations;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.data.redis.core.RedisTemplate;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.stereotype.Component;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.*;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.concurrent.TimeUnit;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@ClassName</span> RedisCache</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@Author</span> zjy</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@Date</span> 2024/9/5 13:23</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@Description</span> redis工具类</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@Version</span> 1.0</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"meta\">@SuppressWarnings(value = &#123;&quot;unchecked&quot;, &quot;rawtypes&quot;&#125;)</span></span><br><span class=\"line\"><span class=\"meta\">@Component</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">RedisCache</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Autowired</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> RedisTemplate redisTemplate;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 缓存基本的对象，Integer、String、实体类等</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> key 缓存的键值</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> value 缓存的值</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> &lt;T&gt; <span class=\"keyword\">void</span> <span class=\"title function_\">setCacheObject</span><span class=\"params\">(<span class=\"keyword\">final</span> String key, <span class=\"keyword\">final</span> T value)</span> &#123;</span><br><span class=\"line\">        redisTemplate.opsForValue().set(key, value);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 缓存基本的对象，Integer、String、实体类等</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> key 缓存的键值</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> value 缓存的值</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> expireTime 过期时间</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> timeUnit 时间单位</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> &lt;T&gt;</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> &lt;T&gt; <span class=\"keyword\">void</span> <span class=\"title function_\">setCacheObject</span><span class=\"params\">(<span class=\"keyword\">final</span> String key, <span class=\"keyword\">final</span> T value, <span class=\"keyword\">final</span> Integer expireTime, <span class=\"keyword\">final</span> TimeUnit timeUnit)</span> &#123;</span><br><span class=\"line\">        redisTemplate.opsForValue().set(key, value, expireTime, timeUnit);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 设置有效时间</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> key 缓存的键值</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> expireTime 过期时间</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span> true：设置成功，false：设置失败</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"type\">boolean</span> <span class=\"title function_\">expire</span><span class=\"params\">(<span class=\"keyword\">final</span> String key, <span class=\"keyword\">final</span> <span class=\"type\">long</span> expireTime)</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> expire(key, expireTime, TimeUnit.SECONDS);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 设置有效时间</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> key 缓存的键值</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> expireTime 过期时间</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> timeUnit 时间单位</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span> true：设置成功，false：设置失败</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"type\">boolean</span> <span class=\"title function_\">expire</span><span class=\"params\">(<span class=\"keyword\">final</span> String key, <span class=\"keyword\">final</span> <span class=\"type\">long</span> expireTime, <span class=\"keyword\">final</span> TimeUnit timeUnit)</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> redisTemplate.expire(key, expireTime, timeUnit);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 获得缓存的基本对象</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> key 缓存的键值</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span> 缓存键值对应的数据</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> &lt;T&gt; T <span class=\"title function_\">getCacheObject</span><span class=\"params\">(<span class=\"keyword\">final</span> String key)</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> (T) redisTemplate.opsForValue().get(key);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 获得缓存的list对象</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> key 缓存的键值</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span> 缓存键值对应的数据</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> &lt;T&gt; List&lt;T&gt; <span class=\"title function_\">getCacheList</span><span class=\"params\">(<span class=\"keyword\">final</span> String key)</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> redisTemplate.opsForList().range(key, <span class=\"number\">0</span>, -<span class=\"number\">1</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 获得缓存的set</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> key 缓存的键值</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span> 缓存键值对应的数据</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> &lt;T&gt; Set&lt;T&gt; <span class=\"title function_\">getCacheSet</span><span class=\"params\">(<span class=\"keyword\">final</span> String key)</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> redisTemplate.opsForSet().members(key);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 获得缓存的map</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> key 缓存的键值</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span> 缓存键值对应的数据</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> &lt;T&gt; Map&lt;String, T&gt; <span class=\"title function_\">getCacheMap</span><span class=\"params\">(<span class=\"keyword\">final</span> String key)</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> (Map&lt;String, T&gt;) redisTemplate.opsForHash().entries(key);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 获取hash中的数据</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> key 缓存的键值</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> hKey hash的key</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span> hash中的对象</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> &lt;T&gt; T <span class=\"title function_\">getCacheMapValue</span><span class=\"params\">(<span class=\"keyword\">final</span> String key, <span class=\"keyword\">final</span> String hKey)</span> &#123;</span><br><span class=\"line\">        HashOperations&lt;String, String, T&gt; hashOperations = redisTemplate.opsForHash();</span><br><span class=\"line\">        <span class=\"keyword\">return</span> hashOperations.get(key, hKey);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 获得多个hash中的数据</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> key 缓存的键值</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> hKeys hash的key集合</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span> hash对象集合</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> &lt;T&gt; List&lt;T&gt; <span class=\"title function_\">getMultiCacheMapValue</span><span class=\"params\">(<span class=\"keyword\">final</span> String key, <span class=\"keyword\">final</span> Collection&lt;Object&gt; hKeys)</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> redisTemplate.opsForHash().multiGet(key, hKeys);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 获得缓存的基本对象列表</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> pattern 字符串前缀</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span> 对象列表</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> Collection&lt;String&gt; <span class=\"title function_\">keys</span><span class=\"params\">(<span class=\"keyword\">final</span> String pattern)</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> redisTemplate.keys(pattern);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 缓存List数据</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> key 缓存的键值</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> dataList 待缓存的list数据</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span> 缓存的对象</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> &lt;T&gt; <span class=\"type\">long</span> <span class=\"title function_\">setCacheList</span><span class=\"params\">(<span class=\"keyword\">final</span> String key, <span class=\"keyword\">final</span> List&lt;T&gt; dataList)</span> &#123;</span><br><span class=\"line\">        <span class=\"type\">Long</span> <span class=\"variable\">count</span> <span class=\"operator\">=</span> redisTemplate.opsForList().rightPushAll(key, dataList);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> count == <span class=\"literal\">null</span> ? <span class=\"number\">0</span> : count;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 缓存set数据</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> key 缓存的键值</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> dataSet 缓存的数据</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span> 缓存数据的对象</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> &lt;T&gt; BoundSetOperations&lt;String, T&gt; <span class=\"title function_\">setCacheSet</span><span class=\"params\">(<span class=\"keyword\">final</span> String key, <span class=\"keyword\">final</span> Set&lt;T&gt; dataSet)</span> &#123;</span><br><span class=\"line\">        BoundSetOperations&lt;String, T&gt; setOperation = redisTemplate.boundSetOps(key);</span><br><span class=\"line\">        Iterator&lt;T&gt; iterator = dataSet.iterator();</span><br><span class=\"line\">        <span class=\"keyword\">while</span> (iterator.hasNext()) &#123;</span><br><span class=\"line\">            setOperation.add(iterator.next());</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> setOperation;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 缓存Map数据</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> key 缓存的键值</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> dataMap 缓存的Map数据</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> &lt;T&gt; <span class=\"keyword\">void</span>  <span class=\"title function_\">setCacheMap</span><span class=\"params\">(<span class=\"keyword\">final</span> String key, <span class=\"keyword\">final</span> Map&lt;String, T&gt; dataMap)</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!Objects.isNull(dataMap)) &#123;</span><br><span class=\"line\">            redisTemplate.opsForHash().putAll(key, dataMap);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 往hash中存入数据</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> key 缓存的键值</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> hKey hash的key</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> value 存储的值</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> &lt;T&gt; <span class=\"keyword\">void</span> <span class=\"title function_\">setCacheMapValue</span><span class=\"params\">(<span class=\"keyword\">final</span> String key, <span class=\"keyword\">final</span> String hKey, <span class=\"keyword\">final</span> T value)</span> &#123;</span><br><span class=\"line\">        redisTemplate.opsForHash().put(key, hKey, value);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 删除单个对象</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> key</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span></span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"type\">boolean</span> <span class=\"title function_\">deleteObject</span><span class=\"params\">(<span class=\"keyword\">final</span> String key)</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> redisTemplate.delete(key);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 删除集合对象</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> collection 多个对象</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span></span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"type\">long</span> <span class=\"title function_\">deleteObject</span><span class=\"params\">(<span class=\"keyword\">final</span> Collection collection)</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> redisTemplate.delete(collection);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 删除hash中的数据</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> key</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> hKey</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">delCacheMapValue</span><span class=\"params\">(<span class=\"keyword\">final</span> String key, <span class=\"keyword\">final</span> String hKey)</span> &#123;</span><br><span class=\"line\">        <span class=\"type\">HashOperations</span> <span class=\"variable\">hashOperations</span> <span class=\"operator\">=</span> redisTemplate.opsForHash();</span><br><span class=\"line\">        hashOperations.delete(key, hKey);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>（4）创建web字符串渲染工具类  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.zjysecurity.utils;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@ClassName</span> WebUtil</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@Author</span> zjy</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@Date</span> 2024/9/5 13:57</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@Description</span> TODO</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@Version</span> 1.0</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">WebUtil</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 将字符串渲染到客户端</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> response 渲染对象</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> string 待渲染的字符串</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span></span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> String <span class=\"title function_\">renderString</span><span class=\"params\">(HttpServletResponse response, String string)</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            response.setStatus(<span class=\"number\">200</span>);</span><br><span class=\"line\">            response.setContentType(<span class=\"string\">&quot;application/json&quot;</span>);</span><br><span class=\"line\">            response.setCharacterEncoding(<span class=\"string\">&quot;UTF-8&quot;</span>);</span><br><span class=\"line\">            response.getWriter().print(string);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</span><br><span class=\"line\">            e.printStackTrace();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">null</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>4、创建一个配置类包<code>config</code><br>（1）创建redis配置类  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.zjysecurity.config;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> com.zjysecurity.utils.FastJsonRedisSerializer;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.context.annotation.Bean;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.context.annotation.Configuration;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.data.redis.connection.RedisConnectionFactory;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.data.redis.core.RedisTemplate;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@ClassName</span> RedisConfig</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@Author</span> zjy</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@Date</span> 2024/9/5 11:13</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@Description</span> redis配置类</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@Version</span> 1.0</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"meta\">@Configuration</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">RedisConfig</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Bean</span></span><br><span class=\"line\">    <span class=\"meta\">@SuppressWarnings(value = &#123;&quot;unchecked&quot;, &quot;rawtypes&quot;&#125;)</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> RedisTemplate&lt;Object, Object&gt; <span class=\"title function_\">redisTemplate</span><span class=\"params\">(RedisConnectionFactory redisConnectionFactory)</span> &#123;</span><br><span class=\"line\">        RedisTemplate&lt;Object, Object&gt; template = <span class=\"keyword\">new</span> <span class=\"title class_\">RedisTemplate</span>();</span><br><span class=\"line\">        template.setConnectionFactory(redisConnectionFactory);</span><br><span class=\"line\"></span><br><span class=\"line\">        FastJsonRedisSerializer&lt;Object&gt; serializer = <span class=\"keyword\">new</span> <span class=\"title class_\">FastJsonRedisSerializer</span>&lt;&gt;(Object.class);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// 使用StringRedisSerializer来序列化和反序列化redis的key值</span></span><br><span class=\"line\">        template.setKeySerializer(serializer);</span><br><span class=\"line\">        template.setValueSerializer(serializer);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// Hash的key也采用StringRedisSerializer的序列化方式</span></span><br><span class=\"line\">        template.setHashKeySerializer(serializer);</span><br><span class=\"line\">        template.setHashValueSerializer(serializer);</span><br><span class=\"line\"></span><br><span class=\"line\">        template.afterPropertiesSet();</span><br><span class=\"line\">        <span class=\"keyword\">return</span> template;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>5、创建一个公共类包<code>common</code><br>（1）创建一个返回结果类  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.zjysecurity.common;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> com.fasterxml.jackson.annotation.JsonInclude;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@ClassName</span> ResponseResult</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@Author</span> zjy</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@Date</span> 2024/9/5 12:40</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@Description</span> 响应类</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@Version</span> 1.0</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"meta\">@JsonInclude(JsonInclude.Include.NON_NULL)</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">ResponseResult</span>&lt;T&gt; &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 状态码</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> Integer code;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 响应信息</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> String msg;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 响应数据</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> T data;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"title function_\">ResponseResult</span><span class=\"params\">(Integer code, String msg)</span> &#123;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.code = code;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.msg = msg;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"title function_\">ResponseResult</span><span class=\"params\">(Integer code, T data)</span> &#123;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.code = code;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.data = data;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> Integer <span class=\"title function_\">getCode</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> code;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">setCode</span><span class=\"params\">(Integer code)</span> &#123;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.code = code;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> String <span class=\"title function_\">getMsg</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> msg;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">setMsg</span><span class=\"params\">(String msg)</span> &#123;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.msg = msg;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> T <span class=\"title function_\">getData</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> data;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">setData</span><span class=\"params\">(T data)</span> &#123;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.data = data;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"title function_\">ResponseResult</span><span class=\"params\">(Integer code, String msg, T data)</span> &#123;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.code = code;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.msg = msg;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.data = data;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>6、创建一个实体类<code>pojo</code>（对应数据库）  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.zjysecurity.pojo;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> com.baomidou.mybatisplus.annotation.TableName;</span><br><span class=\"line\"><span class=\"keyword\">import</span> lombok.AllArgsConstructor;</span><br><span class=\"line\"><span class=\"keyword\">import</span> lombok.Data;</span><br><span class=\"line\"><span class=\"keyword\">import</span> lombok.NoArgsConstructor;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.Serializable;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Date;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@ClassName</span> User</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@Author</span> zjy</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@Date</span> 2024/9/5 14:05</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@Description</span> 用户实体类，对应数据库sys_user表</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@Version</span> 1.0</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"meta\">@Data</span></span><br><span class=\"line\"><span class=\"meta\">@AllArgsConstructor</span></span><br><span class=\"line\"><span class=\"meta\">@NoArgsConstructor</span></span><br><span class=\"line\"><span class=\"meta\">@TableName(&quot;sys_user&quot;)</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">User</span> <span class=\"keyword\">implements</span> <span class=\"title class_\">Serializable</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"type\">long</span> <span class=\"variable\">serialVersionUID</span> <span class=\"operator\">=</span> <span class=\"number\">1L</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// id</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> Long id;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 用户名</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> String userName;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 用户昵称</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> String nickName;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 密码</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> String password;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 账号状态（0正常，1停用）</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> String status;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 邮箱</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> String email;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 手机号</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> String phonenumber;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 性别（0男，1女，2未知）</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> String sex;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 头像</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> String avatar;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 用户类型（0管理员，1普通用户）</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> String userType;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 创建人id</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> Long createBy;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 创建时间</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> Date createTime;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 更新人id</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> Long updateBy;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 更新时间</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> Date updateTime;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 删除标志（0代表存在，1代表删除）</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> Integer delFlag;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>7、创建一个<code>mapper</code>包和<code>mapper</code>接口  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.zjysecurity.mapper;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> com.baomidou.mybatisplus.core.mapper.BaseMapper;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.zjysecurity.pojo.User;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.stereotype.Service;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@InterfaceName</span> UserMapper</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@Author</span> zjy</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@Date</span> 2024/9/5 14:46</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@Description</span> TODO</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@Version</span> 1.0</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">interface</span> <span class=\"title class_\">UserMapper</span> <span class=\"keyword\">extends</span> <span class=\"title class_\">BaseMapper</span>&lt;User&gt; &#123;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>8、创建<code>resources</code>目录，与<code>java</code>目录同级，并在<code>resources</code>下创建<code>application.yml</code>配置文件  </p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">spring:</span></span><br><span class=\"line\">  <span class=\"attr\">datasource:</span></span><br><span class=\"line\">    <span class=\"attr\">url:</span> <span class=\"string\">jdbc:mysql://localhost:3306/test?useUnicode=true&amp;characterEncoding=utf8&amp;useSSL=false&amp;serverTimezone=UTC</span></span><br><span class=\"line\">    <span class=\"attr\">username:</span> <span class=\"string\">root</span></span><br><span class=\"line\">    <span class=\"attr\">password:</span> <span class=\"string\">root</span></span><br><span class=\"line\">    <span class=\"attr\">driver-class-name:</span> <span class=\"string\">com.mysql.cj.jdbc.Driver</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">server:</span></span><br><span class=\"line\">  <span class=\"attr\">port:</span> <span class=\"number\">8080</span></span><br></pre></td></tr></table></figure>\n<p>测试：  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.zjysecurity;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> com.zjysecurity.mapper.UserMapper;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.zjysecurity.pojo.User;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.junit.jupiter.api.Test;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.boot.test.context.SpringBootTest;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.List;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@SpringBootTest</span></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">ZjySecurityApplicationTests</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Autowired</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> UserMapper userMapper;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Test</span></span><br><span class=\"line\">    <span class=\"keyword\">void</span> <span class=\"title function_\">contextLoads</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        List&lt;User&gt; users = userMapper.selectList(<span class=\"literal\">null</span>);</span><br><span class=\"line\">        System.out.println(users);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>9、替换<code>InMemoryUserDetailsManager</code>，将去内存查询用户信息改为去数据库查询用户信息，需要我们创建一个类，去实现<code>SpringSecurity</code>提供的<code>UserDetailsService</code>接口，并重写<code>loadUserByUsername</code>方法，代码如下：  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.zjysecurity.service;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> com.baomidou.mybatisplus.core.conditions.query.LambdaQueryWrapper;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.zjysecurity.common.LoginUser;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.zjysecurity.mapper.UserMapper;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.zjysecurity.pojo.User;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.security.core.userdetails.UserDetails;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.security.core.userdetails.UserDetailsService;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.security.core.userdetails.UsernameNotFoundException;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.stereotype.Service;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Objects;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@ClassName</span> MyUserDetailServiceImpl</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@Author</span> zjy</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@Date</span> 2024/9/5 15:06</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@Description</span> TODO</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@Version</span> 1.0</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"meta\">@Service</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">MyUserDetailServiceImpl</span> <span class=\"keyword\">implements</span> <span class=\"title class_\">UserDetailsService</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Autowired</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> UserMapper userMapper;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> UserDetails <span class=\"title function_\">loadUserByUsername</span><span class=\"params\">(String s)</span> &#123;</span><br><span class=\"line\">        <span class=\"comment\">// 根据用户名去数据库查询用户信息</span></span><br><span class=\"line\">        LambdaQueryWrapper&lt;User&gt; wrapper = <span class=\"keyword\">new</span> <span class=\"title class_\">LambdaQueryWrapper</span>&lt;&gt;();</span><br><span class=\"line\">        wrapper.eq(User::getUserName, s);</span><br><span class=\"line\">        <span class=\"type\">User</span> <span class=\"variable\">user</span> <span class=\"operator\">=</span> userMapper.selectOne(wrapper);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// 判断用户是否存在</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (Objects.isNull(user)) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"title class_\">UsernameNotFoundException</span>(<span class=\"string\">&quot;用户不存在&quot;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// 把查询到的用户信息封装到UserDetails接口中</span></span><br><span class=\"line\">\t\t<span class=\"comment\">// todo 权限</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"title class_\">LoginUser</span>(user);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>10、因为<code>UserDetailsService</code>接口中的<code>loadUserByUsername</code>方法返回值是<code>UserDetails</code>接口，所以我们需要创建一个类，去实现<code>UserDetails</code>接口（这个接口就是专门封装登录信息的接口），并重写其中的方法，代码如下：<br>在<code>common</code>包下创建<code>LoginUser</code>类  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.zjysecurity.common;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> com.zjysecurity.pojo.User;</span><br><span class=\"line\"><span class=\"keyword\">import</span> lombok.AllArgsConstructor;</span><br><span class=\"line\"><span class=\"keyword\">import</span> lombok.Data;</span><br><span class=\"line\"><span class=\"keyword\">import</span> lombok.NoArgsConstructor;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.security.core.GrantedAuthority;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.security.core.userdetails.UserDetails;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Collection;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Collections;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@ClassName</span> LoginUser</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@Author</span> zjy</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@Date</span> 2024/9/5 14:57</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@Description</span> 用户登录信息类</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@Version</span> 1.0</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"meta\">@Data</span></span><br><span class=\"line\"><span class=\"meta\">@NoArgsConstructor</span></span><br><span class=\"line\"><span class=\"meta\">@AllArgsConstructor</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">LoginUser</span> <span class=\"keyword\">implements</span> <span class=\"title class_\">UserDetails</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> User user;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@Author</span>: zjy</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@Date</span>: 2024/9/5 15:00</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@Version</span>: 1.0</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span>: []</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span>: java.util.Collection&lt;? extends org.springframework.security.core.GrantedAuthority&gt;</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@Description</span>: 用于返回权限信息</span></span><br><span class=\"line\"><span class=\"comment\">     **/</span></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> Collection&lt;? <span class=\"keyword\">extends</span> <span class=\"title class_\">GrantedAuthority</span>&gt; getAuthorities() &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> Collections.emptyList();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@Author</span>: zjy</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@Date</span>: 2024/9/5 15:00</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@Version</span>: 1.0</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span>: []</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span>: java.lang.String</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@Description</span>: 获取用户密码</span></span><br><span class=\"line\"><span class=\"comment\">     **/</span></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> String <span class=\"title function_\">getPassword</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> user.getPassword();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@Author</span>: zjy</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@Date</span>: 2024/9/5 15:01</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@Version</span>: 1.0</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span>: []</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span>: java.lang.String</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@Description</span>: 获取用户名</span></span><br><span class=\"line\"><span class=\"comment\">     **/</span></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> String <span class=\"title function_\">getUsername</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> user.getUserName();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@Author</span>: zjy</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@Date</span>: 2024/9/5 15:01</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@Version</span>: 1.0</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span>: []</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span>: boolean</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@Description</span>: 判断登录状态是否过期，为true表示永不过期</span></span><br><span class=\"line\"><span class=\"comment\">     **/</span></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"type\">boolean</span> <span class=\"title function_\">isAccountNonExpired</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@Author</span>: zjy</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@Date</span>: 2024/9/5 15:02</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@Version</span>: 1.0</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span>: []</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span>: boolean</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@Description</span>: 判断账号是否被锁定，为true为锁定，如果为false登录的时候不让登录</span></span><br><span class=\"line\"><span class=\"comment\">     **/</span></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"type\">boolean</span> <span class=\"title function_\">isAccountNonLocked</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@Author</span>: zjy</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@Date</span>: 2024/9/5 15:03</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@Version</span>: 1.0</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span>: []</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span>: boolean</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@Description</span>: 判断登录凭证是否过期，为true表示永不过期</span></span><br><span class=\"line\"><span class=\"comment\">     **/</span></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"type\">boolean</span> <span class=\"title function_\">isCredentialsNonExpired</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@Author</span>: zjy</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@Date</span>: 2024/9/5 15:03</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@Version</span>: 1.0</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span>: []</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span>: boolean</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@Description</span>: 判断用户是否可用</span></span><br><span class=\"line\"><span class=\"comment\">     **/</span></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"type\">boolean</span> <span class=\"title function_\">isEnabled</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">&quot;0&quot;</span>.equals(user.getStatus());</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>11、启动项目，访问<code>http://localhost:8080/hello</code>，现在登录就是去数据库查询了。<br>12、目前还有一个问题，就是数据库存入的用户密码是<code>&#123;noop&#125;</code>+明文形式，这是因为SpringSecurity默认使用的加密方式为<code>PasswordEncoder</code>，它要求数据库中的密码格式为：<code>&#123;加密方式&#125;密码</code>，例如：密码为：123，存入数据库就是：<code>&#123;noop&#125;123</code>，所以我们需要修改密码的加密方式。<br>13、推荐使用SpringSecurity提供的<code>BCryptPasswordEncoder</code>加密方式，创建一个SpringSecurity配置类，继承<code>WebSecurityConfigurerAdapter</code>，将<code>PasswordEncoder</code>注入spring容器。  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.zjysecurity.config;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.context.annotation.Bean;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.context.annotation.Configuration;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.security.config.annotation.web.configuration.WebSecurityConfiguration;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.security.crypto.password.PasswordEncoder;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@ClassName</span> SpringSecurityConfig</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@Author</span> zjy</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@Date</span> 2024/9/5 23:37</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@Description</span> 实现SpringSecurity提供的WebSecurityConfigurerAdapter，修改加密方式</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@Version</span> 1.0</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"meta\">@Configuration</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">SpringSecurityConfig</span> <span class=\"keyword\">extends</span> <span class=\"title class_\">WebSecurityConfigurerAdapter</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@Author</span>: zjy</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@Date</span>: 2024/9/5 23:41</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@Version</span>: 1.0</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span>: []</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span>: org.springframework.security.crypto.password.PasswordEncoder</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@Description</span>: 把BCryptPasswordEncoder对象注入spring容器中，SpringSecurity就会使用该PasswordEncoder来进行密码校验</span></span><br><span class=\"line\"><span class=\"comment\">     **/</span></span><br><span class=\"line\">    <span class=\"comment\">// 注意下面使用了PasswordEncoder，也是可以的，因为PasswordEncoder是BCryptPasswordEncoder的父类</span></span><br><span class=\"line\">    <span class=\"meta\">@Bean</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> PasswordEncoder <span class=\"title function_\">passwordEncoder</span><span class=\"params\">()</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"title class_\">BCryptPasswordEncoder</span>();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>测试：  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Test</span></span><br><span class=\"line\"><span class=\"keyword\">void</span> <span class=\"title function_\">test</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">    <span class=\"type\">BCryptPasswordEncoder</span> <span class=\"variable\">bCryptPasswordEncoder</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">BCryptPasswordEncoder</span>();</span><br><span class=\"line\">\t<span class=\"comment\">// 加密</span></span><br><span class=\"line\">    <span class=\"type\">String</span> <span class=\"variable\">encode</span> <span class=\"operator\">=</span> bCryptPasswordEncoder.encode(<span class=\"string\">&quot;123456&quot;</span>);</span><br><span class=\"line\">    System.out.println(encode);</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"comment\">// 校验</span></span><br><span class=\"line\">\t<span class=\"type\">boolean</span> <span class=\"variable\">matches</span> <span class=\"operator\">=</span> bCryptPasswordEncoder.matches(<span class=\"string\">&quot;123456&quot;</span>, encode);</span><br><span class=\"line\">    System.out.println(matches);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>14、自定义登录接口，在<code>controller</code>包下新增登录接口  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.zjysecurity.controller;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> com.zjysecurity.common.LoginUser;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.zjysecurity.common.ResponseResult;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.zjysecurity.pojo.User;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.zjysecurity.service.LoginService;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.web.bind.annotation.PostMapping;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.web.bind.annotation.RequestBody;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.web.bind.annotation.RestController;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@RestController</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">LoginController</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Autowired</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> LoginService loginService;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@PostMapping(&quot;/login&quot;)</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> ResponseResult&lt;String&gt; <span class=\"title function_\">login</span><span class=\"params\">(<span class=\"meta\">@RequestBody</span> User user)</span>&#123;</span><br><span class=\"line\">        <span class=\"type\">String</span> <span class=\"variable\">token</span> <span class=\"operator\">=</span> loginService.login(user);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"title class_\">ResponseResult</span>&lt;&gt;(<span class=\"number\">200</span>, <span class=\"string\">&quot;登录成功&quot;</span>, token);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>15、在<code>SpringSecurityConfig</code>配置类中添加  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">  * <span class=\"doctag\">@Author</span>: zjy</span></span><br><span class=\"line\"><span class=\"comment\">  * <span class=\"doctag\">@Date</span>: 2024/9/6 13:21</span></span><br><span class=\"line\"><span class=\"comment\">  * <span class=\"doctag\">@Version</span>: 1.0</span></span><br><span class=\"line\"><span class=\"comment\">  * <span class=\"doctag\">@param</span>: []</span></span><br><span class=\"line\"><span class=\"comment\">  * <span class=\"doctag\">@return</span>: org.springframework.security.authentication.AuthenticationManager</span></span><br><span class=\"line\"><span class=\"comment\">  * <span class=\"doctag\">@Description</span>: 登录认证</span></span><br><span class=\"line\"><span class=\"comment\">  **/</span></span><br><span class=\"line\"><span class=\"meta\">@Bean</span></span><br><span class=\"line\"><span class=\"meta\">@Override</span></span><br><span class=\"line\"><span class=\"keyword\">protected</span> AuthenticationManager <span class=\"title function_\">authenticationManager</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> Exception &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"built_in\">super</span>.authenticationManager();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">\t</span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">  * anyRequest          |   匹配所有请求路径</span></span><br><span class=\"line\"><span class=\"comment\">  * access              |   SpringEl表达式结果为true时可以访问</span></span><br><span class=\"line\"><span class=\"comment\">  * anonymous           |   匿名可以访问，和permitAll的区别就是，anonymous只要登录之后就不能访问，只能匿名访问，permitAll登录还是不登陆都可以访问</span></span><br><span class=\"line\"><span class=\"comment\">  * denyAll             |   用户不能访问</span></span><br><span class=\"line\"><span class=\"comment\">  * fullyAuthenticated  |   用户完全认证可以访问（非remember-me下自动登录）</span></span><br><span class=\"line\"><span class=\"comment\">  * hasAnyAuthority     |   如果有参数，参数表示权限，则其中任何一个权限可以访问</span></span><br><span class=\"line\"><span class=\"comment\">  * hasAnyRole          |   如果有参数，参数表示角色，则其中任何一个角色可以访问</span></span><br><span class=\"line\"><span class=\"comment\">  * hasAuthority        |   如果有参数，参数表示权限，则其权限可以访问</span></span><br><span class=\"line\"><span class=\"comment\">  * hasIpAddress        |   如果有参数，参数表示IP地址，如果用户IP和参数匹配，则可以访问</span></span><br><span class=\"line\"><span class=\"comment\">  * hasRole             |   如果有参数，参数表示角色，则其角色可以访问</span></span><br><span class=\"line\"><span class=\"comment\">  * permitAll           |   用户可以任意访问</span></span><br><span class=\"line\"><span class=\"comment\">  * rememberMe          |   允许通过remember-me登录的用户访问</span></span><br><span class=\"line\"><span class=\"comment\">  * authenticated       |   用户登录后可访问</span></span><br><span class=\"line\"><span class=\"comment\">  */</span></span><br><span class=\"line\"><span class=\"meta\">@Override</span></span><br><span class=\"line\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title function_\">configure</span><span class=\"params\">(HttpSecurity http)</span> <span class=\"keyword\">throws</span> Exception &#123;</span><br><span class=\"line\">    http.</span><br><span class=\"line\">        <span class=\"comment\">// 由于是前后端分离项目，所以要关闭csrf</span></span><br><span class=\"line\">        csrf().disable()</span><br><span class=\"line\">        <span class=\"comment\">// 由于是前后端分离项目，所以session是失效的，我们就不能通过Session获取SecurityContext</span></span><br><span class=\"line\">        .sessionManagement().sessionCreationPolicy(SessionCreationPolicy.STATELESS)</span><br><span class=\"line\">        .and()</span><br><span class=\"line\">        <span class=\"comment\">// 指定springSecurity放行登录接口规则</span></span><br><span class=\"line\">        .authorizeRequests()</span><br><span class=\"line\">        <span class=\"comment\">// 对于登录接口 anonymous表示允许匿名访问</span></span><br><span class=\"line\">        .antMatchers(<span class=\"string\">&quot;/login&quot;</span>).anonymous()</span><br><span class=\"line\">        <span class=\"comment\">// 除上面外的所有请求都需要鉴权认证</span></span><br><span class=\"line\">        .anyRequest().authenticated();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>16、创建<code>LoginService</code>接口和<code>LoginServiceImpl</code>实现类<br><code>LoginService</code>接口：  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">interface</span> <span class=\"title class_\">LoginService</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@Author</span>: zjy</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@Date</span>: 2024/9/6 21:28</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@Version</span>: 1.0</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span>: [user]</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span>: java.lang.String</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@Description</span>: 登录</span></span><br><span class=\"line\"><span class=\"comment\">     **/</span></span><br><span class=\"line\">    String <span class=\"title function_\">login</span><span class=\"params\">(User user)</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><code>LoginServiceImpl</code>实现类：  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Service</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">LoginServiceImpl</span> <span class=\"keyword\">implements</span> <span class=\"title class_\">LoginService</span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Autowired</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> AuthenticationManager authenticationManager;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Autowired</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> RedisCache redisCache;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> String <span class=\"title function_\">login</span><span class=\"params\">(User user)</span> &#123;</span><br><span class=\"line\">        <span class=\"type\">String</span> <span class=\"variable\">jwt</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;&quot;</span>;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            <span class=\"comment\">//根据那个流程图，因为默认的UsernamePasswordAuthenticationFilter调用了AuthenticationManager接口的authenticate()方法进行认证，所以我们这里也要调用它</span></span><br><span class=\"line\">            <span class=\"comment\">//调用这个方法，首先我们得去SpringSecurityConfig配置类中将AuthenticationManager接口注入到spring容器中</span></span><br><span class=\"line\">            <span class=\"comment\">//因为authenticate()方法需要Authentication接口参数，我们查看Authentication接口的实现，选择使用UsernamePasswordAuthenticationToken实现类</span></span><br><span class=\"line\">            <span class=\"type\">UsernamePasswordAuthenticationToken</span> <span class=\"variable\">authenticationToken</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">UsernamePasswordAuthenticationToken</span>(user.getUserName(), user.getPassword());</span><br><span class=\"line\">            <span class=\"type\">Authentication</span> <span class=\"variable\">authenticate</span> <span class=\"operator\">=</span> authenticationManager.authenticate(authenticationToken);</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"comment\">// 判断上面authenticate是否为null，如果认证没通过，就抛出异常</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (Objects.isNull(authenticate)) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"title class_\">RuntimeException</span>(<span class=\"string\">&quot;登录失败&quot;</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"comment\">// 如果认证通过，就使用userId生成一个jwt，并将jwt返回给前端</span></span><br><span class=\"line\">            <span class=\"type\">LoginUser</span> <span class=\"variable\">loginUserInfo</span> <span class=\"operator\">=</span> (LoginUser) authenticate.getPrincipal();</span><br><span class=\"line\">            <span class=\"type\">String</span> <span class=\"variable\">userId</span> <span class=\"operator\">=</span> loginUserInfo.getUser().getId().toString();</span><br><span class=\"line\">            jwt = JwtUtil.createJWT(userId);</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"comment\">// 为了减少数据库压力，采用redis</span></span><br><span class=\"line\">            <span class=\"comment\">// 将完整的用户信息存入redis，将userId作为key</span></span><br><span class=\"line\">            redisCache.setCacheObject(userId, loginUserInfo);</span><br><span class=\"line\"></span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (e <span class=\"keyword\">instanceof</span> BadCredentialsException) &#123;</span><br><span class=\"line\">                 <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"title class_\">RuntimeException</span>(<span class=\"string\">&quot;用户名或密码错误&quot;</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"title class_\">RuntimeException</span>(e.getMessage());</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> jwt;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>17、去数据库修改用户密码，使用第<code>13</code>中的测试生成加密密码，然后启动redis服务，再使用postman发送请求测试。<br>18、在<code>二、原理讲解</code>的最后说还需要创建一个过滤器，来处理每个请求的jwt认证  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.zjysecurity.filter;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> com.zjysecurity.common.LoginUser;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.zjysecurity.utils.JwtUtil;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.zjysecurity.utils.RedisCache;</span><br><span class=\"line\"><span class=\"keyword\">import</span> io.jsonwebtoken.Claims;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.security.authentication.UsernamePasswordAuthenticationToken;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.security.core.context.SecurityContextHolder;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.stereotype.Component;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.util.StringUtils;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.web.filter.OncePerRequestFilter;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.servlet.FilterChain;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.servlet.ServletException;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.IOException;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Objects;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@ClassName</span> JwtAuthenticationTokenFilter</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@Author</span> zjy</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@Date</span> 2024/9/6 20:52</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@Description</span> jwt认证过滤器，可以实现Filter过滤器接口，但是会有问题，使用OncePerRequestFilter，保证在一次请求中只通过一次</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@Version</span> 1.0</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"meta\">@Component</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">JwtAuthenticationTokenFilter</span> <span class=\"keyword\">extends</span> <span class=\"title class_\">OncePerRequestFilter</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Autowired</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> RedisCache redisCache;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title function_\">doFilterInternal</span><span class=\"params\">(HttpServletRequest httpServletRequest, HttpServletResponse httpServletResponse, FilterChain filterChain)</span> <span class=\"keyword\">throws</span> ServletException, IOException &#123;</span><br><span class=\"line\">        <span class=\"comment\">// 获取token，指定你的token名称</span></span><br><span class=\"line\">        <span class=\"type\">String</span> <span class=\"variable\">token</span> <span class=\"operator\">=</span> httpServletRequest.getHeader(<span class=\"string\">&quot;token&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// 判空，不一定所有的请求都有token请求头，比如登录页面请求和登录请求就没有</span></span><br><span class=\"line\">        <span class=\"comment\">// StringUtils.hasText()方法用于检查给定的字符串是否为空或仅包含空格字符</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!StringUtils.hasText(token)) &#123;</span><br><span class=\"line\">            <span class=\"comment\">// 如果请求没有携带token，直接放行</span></span><br><span class=\"line\">            filterChain.doFilter(httpServletRequest, httpServletResponse);</span><br><span class=\"line\">            <span class=\"keyword\">return</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// 解析token</span></span><br><span class=\"line\">        String userId;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            <span class=\"type\">Claims</span> <span class=\"variable\">claims</span> <span class=\"operator\">=</span> JwtUtil.parseJWT(token);</span><br><span class=\"line\">            userId = claims.getSubject();</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</span><br><span class=\"line\">            e.printStackTrace();</span><br><span class=\"line\">            <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"title class_\">RuntimeException</span>(<span class=\"string\">&quot;token非法&quot;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// 从redis中获取用户信息</span></span><br><span class=\"line\">        <span class=\"type\">String</span> <span class=\"variable\">key</span> <span class=\"operator\">=</span> userId;</span><br><span class=\"line\">        <span class=\"type\">LoginUser</span> <span class=\"variable\">loginUser</span> <span class=\"operator\">=</span> redisCache.getCacheObject(key);</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (Objects.isNull(loginUser)) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"title class_\">RuntimeException</span>(<span class=\"string\">&quot;用户未登录&quot;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// 将用户信息存入SecurityContextHolder</span></span><br><span class=\"line\">        <span class=\"comment\">// 为什么使用UsernamePasswordAuthenticationToken，我们使用有三个参数的UsernamePasswordAuthenticationToken构造函数</span></span><br><span class=\"line\">        <span class=\"comment\">// 点进去查看这个构造函数，可以看到super.setAuthenticated(true);，这个表示已经认证过的用户，不用在认证了，只是用来获取用户信息</span></span><br><span class=\"line\">        <span class=\"comment\">// 第一个参数是LoginUser用户信息，第二个参数为null不用管，第三个参数是权限信息，有的话就得填</span></span><br><span class=\"line\">\t\t<span class=\"comment\">// TODO 权限</span></span><br><span class=\"line\">        <span class=\"type\">UsernamePasswordAuthenticationToken</span> <span class=\"variable\">authenticationToken</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">UsernamePasswordAuthenticationToken</span>(loginUser, <span class=\"literal\">null</span>, <span class=\"literal\">null</span>);</span><br><span class=\"line\">        <span class=\"comment\">// 将authenticationToken存入SecurityContextHolder</span></span><br><span class=\"line\">        SecurityContextHolder.getContext().setAuthentication(authenticationToken);</span><br><span class=\"line\">        <span class=\"comment\">// 放行</span></span><br><span class=\"line\">        filterChain.doFilter(httpServletRequest, httpServletResponse);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>19、在<code>SpringSecurityConfig</code>配置类中添加  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Autowired</span></span><br><span class=\"line\"><span class=\"keyword\">private</span> JwtAuthenticationTokenFilter jwtAuthenticationTokenFilter;</span><br></pre></td></tr></table></figure>\n<p>在<code>SpringSecurityConfig</code>配置类的<code>configure(HttpSecurity http)</code>方法中添加  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 把自定义的过滤器添加到过滤器链中</span></span><br><span class=\"line\"><span class=\"comment\">// 第一个参数是注入我们在filter目录中自定义的过滤器，第二个参数表示想要在哪个过滤器之前添加</span></span><br><span class=\"line\">http.addFilterBefore(jwtAuthenticationTokenFilter, UsernamePasswordAuthenticationFilter.class);</span><br></pre></td></tr></table></figure>\n\n\n\n<br/>\n\n\n<hr>\n<br/>\n\n\n<h1 id=\"四、自定义退出登录接口\"><a href=\"#四、自定义退出登录接口\" class=\"headerlink\" title=\"四、自定义退出登录接口\"></a>四、自定义退出登录接口</h1><p>1、关闭SpringSecurity默认的注销功能，在在<code>SpringSecurityConfig</code>配置类的<code>configure(HttpSecurity http)</code>方法中添加  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 关闭SpringSecurity默认的注销请求</span></span><br><span class=\"line\">http.logout().disable();</span><br></pre></td></tr></table></figure>\n<p>2、在<code>LoginService</code>接口和<code>LoginServiceImpl</code>实现类中添加注销方法<br><code>LoginService</code>接口：  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">  * <span class=\"doctag\">@Author</span>: zjy</span></span><br><span class=\"line\"><span class=\"comment\">  * <span class=\"doctag\">@Date</span>: 2024/9/6 21:29</span></span><br><span class=\"line\"><span class=\"comment\">  * <span class=\"doctag\">@Version</span>: 1.0</span></span><br><span class=\"line\"><span class=\"comment\">  * <span class=\"doctag\">@param</span>: []</span></span><br><span class=\"line\"><span class=\"comment\">  * <span class=\"doctag\">@return</span>: java.lang.String</span></span><br><span class=\"line\"><span class=\"comment\">  * <span class=\"doctag\">@Description</span>: 退出登录</span></span><br><span class=\"line\"><span class=\"comment\">  **/</span></span><br><span class=\"line\">String <span class=\"title function_\">logout</span><span class=\"params\">()</span>;</span><br></pre></td></tr></table></figure>\n<p><code>LoginServiceImpl</code>实现类：  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Override</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> String <span class=\"title function_\">logout</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 获取在JwtAuthenticationTokenFilter过滤器中设置的SecurityContextHolder用户信息</span></span><br><span class=\"line\">    <span class=\"type\">Authentication</span> <span class=\"variable\">authentication</span> <span class=\"operator\">=</span> SecurityContextHolder.getContext().getAuthentication();</span><br><span class=\"line\">    <span class=\"type\">LoginUser</span> <span class=\"variable\">loginUser</span> <span class=\"operator\">=</span> (LoginUser) authentication.getPrincipal();</span><br><span class=\"line\">    <span class=\"type\">Long</span> <span class=\"variable\">userId</span> <span class=\"operator\">=</span> loginUser.getUser().getId();</span><br><span class=\"line\">    <span class=\"comment\">// 删除redis中的用户信息</span></span><br><span class=\"line\">    redisCache.deleteObject(userId.toString());</span><br><span class=\"line\">    <span class=\"comment\">// 删除SecurityContextHolder中的用户信息</span></span><br><span class=\"line\">    SecurityContextHolder.clearContext();</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"string\">&quot;退出成功&quot;</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>3、在<code>LoginController</code>类中添加注销方法  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@GetMapping(&quot;/logout&quot;)</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> ResponseResult&lt;String&gt; <span class=\"title function_\">logout</span><span class=\"params\">()</span>&#123;</span><br><span class=\"line\">    <span class=\"type\">String</span> <span class=\"variable\">logout</span> <span class=\"operator\">=</span> loginService.logout();</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"title class_\">ResponseResult</span>&lt;&gt;(<span class=\"number\">200</span>, logout);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n\n<br/>\n\n\n\n<hr>\n<br/>\n\n\n\n\n<h1 id=\"五、权限\"><a href=\"#五、权限\" class=\"headerlink\" title=\"五、权限\"></a>五、权限</h1><p>说明一：在<code>SpringSecurity</code>中，会使用默认的<code>FilterSecurityInterceptor</code>来进行权限校验，在<code>FileSecurityInterceptor</code>中会从<code>SecurityContexrHolder</code>获取其中的<code>Authentication</code>，然后获取其中的权限信息，判断当前用户是否拥有访问当前资源所需的权限。<br>说明二：对于权限我们采用经典模型<code>RBAC权限模型</code>，该模型由下面五个部分组成：  </p>\n<ol>\n<li>用户：用户是系统操作者，用户可以拥有自己的用户名和密码，用户可以登录系统。  </li>\n<li>角色：角色是权限的集合，角色可以拥有自己的名字和描述信息。  </li>\n<li>权限：权限是系统中的最小单元，权限可以拥有自己的名字和描述信息。  </li>\n<li>用户-角色映射：用户与角色是多对多的关系，用户可以拥有多个角色，角色也可以被多个用户拥有。  </li>\n<li>角色-权限映射：角色与权限是多对多的关系，角色可以拥有多个权限，权限也可以被多个角色拥有。</li>\n</ol>\n<p>1、根据权限模型创建表<br>用户表我们上面已经创建过了。<br>（1）角色表  </p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">create</span> <span class=\"keyword\">table</span> `sys_role` (</span><br><span class=\"line\">  `id` <span class=\"type\">bigint</span>(<span class=\"number\">20</span>) <span class=\"keyword\">not</span> <span class=\"keyword\">null</span> auto_increment comment <span class=\"string\">&#x27;id&#x27;</span>,</span><br><span class=\"line\">  `name` <span class=\"type\">varchar</span>(<span class=\"number\">128</span>) comment <span class=\"string\">&#x27;角色名称&#x27;</span>,</span><br><span class=\"line\">  `role_key` <span class=\"type\">varchar</span>(<span class=\"number\">100</span>) comment <span class=\"string\">&#x27;角色key&#x27;</span>,</span><br><span class=\"line\">  `status` <span class=\"type\">char</span>(<span class=\"number\">1</span>) <span class=\"keyword\">default</span> <span class=\"string\">&#x27;0&#x27;</span> comment <span class=\"string\">&#x27;角色状态（0正常，1停用）&#x27;</span>,</span><br><span class=\"line\">  `del_flag` <span class=\"type\">int</span>(<span class=\"number\">1</span>) <span class=\"keyword\">default</span> <span class=\"number\">0</span> comment <span class=\"string\">&#x27;逻辑删除（0未删除，1已删除）&#x27;</span>,</span><br><span class=\"line\">  `create_by` <span class=\"type\">bigint</span>(<span class=\"number\">200</span>) comment <span class=\"string\">&#x27;创建人id&#x27;</span>,</span><br><span class=\"line\">  `create_time` datetime comment <span class=\"string\">&#x27;创建时间&#x27;</span>,</span><br><span class=\"line\">  `update_by` <span class=\"type\">bigint</span>(<span class=\"number\">200</span>) comment <span class=\"string\">&#x27;更新人id&#x27;</span>,</span><br><span class=\"line\">  `update_time` datetime comment <span class=\"string\">&#x27;更新时间&#x27;</span>,</span><br><span class=\"line\">  `remark` <span class=\"type\">varchar</span>(<span class=\"number\">500</span>) comment <span class=\"string\">&#x27;备注&#x27;</span>,</span><br><span class=\"line\">  <span class=\"keyword\">primary</span> key (`id`)</span><br><span class=\"line\">) engine<span class=\"operator\">=</span>Innodb auto_increment<span class=\"operator\">=</span><span class=\"number\">3</span> <span class=\"keyword\">default</span> charset<span class=\"operator\">=</span>utf8mb4 comment <span class=\"string\">&#x27;角色表&#x27;</span>;</span><br></pre></td></tr></table></figure>\n<p>（2）权限表  </p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">create</span> <span class=\"keyword\">table</span> `sys_menu` (</span><br><span class=\"line\">  `id` <span class=\"type\">bigint</span>(<span class=\"number\">20</span>) <span class=\"keyword\">not</span> <span class=\"keyword\">null</span> auto_increment comment <span class=\"string\">&#x27;id&#x27;</span>,</span><br><span class=\"line\">  `name` <span class=\"type\">varchar</span>(<span class=\"number\">128</span>) comment <span class=\"string\">&#x27;菜单名称&#x27;</span>,</span><br><span class=\"line\">  `path` <span class=\"type\">varchar</span>(<span class=\"number\">200</span>) comment <span class=\"string\">&#x27;路由地址&#x27;</span>,</span><br><span class=\"line\">  `component` <span class=\"type\">varchar</span>(<span class=\"number\">255</span>) comment <span class=\"string\">&#x27;组件路径&#x27;</span>,</span><br><span class=\"line\">  `visible` <span class=\"type\">char</span>(<span class=\"number\">1</span>) <span class=\"keyword\">default</span> <span class=\"string\">&#x27;0&#x27;</span> comment <span class=\"string\">&#x27;菜单是否显示（0显示，1隐藏）&#x27;</span>,</span><br><span class=\"line\">  `status` <span class=\"type\">char</span>(<span class=\"number\">1</span>) <span class=\"keyword\">default</span> <span class=\"string\">&#x27;0&#x27;</span> comment <span class=\"string\">&#x27;菜单状态（0正常，1停用）&#x27;</span>,</span><br><span class=\"line\">  `perms` <span class=\"type\">varchar</span>(<span class=\"number\">100</span>) comment <span class=\"string\">&#x27;权限标识&#x27;</span>,</span><br><span class=\"line\">  `icon` <span class=\"type\">varchar</span>(<span class=\"number\">100</span>) comment <span class=\"string\">&#x27;菜单图标&#x27;</span>,</span><br><span class=\"line\">  `del_flag` <span class=\"type\">int</span>(<span class=\"number\">1</span>) <span class=\"keyword\">default</span> <span class=\"number\">0</span> comment <span class=\"string\">&#x27;逻辑删除（0未删除，1已删除）&#x27;</span>,</span><br><span class=\"line\">  `create_by` <span class=\"type\">bigint</span>(<span class=\"number\">200</span>) comment <span class=\"string\">&#x27;创建人id&#x27;</span>,</span><br><span class=\"line\">  `create_time` datetime comment <span class=\"string\">&#x27;创建时间&#x27;</span>,</span><br><span class=\"line\">  `update_by` <span class=\"type\">bigint</span>(<span class=\"number\">200</span>) comment <span class=\"string\">&#x27;更新人id&#x27;</span>,</span><br><span class=\"line\">  `update_time` datetime comment <span class=\"string\">&#x27;更新时间&#x27;</span>,</span><br><span class=\"line\">  `remark` <span class=\"type\">varchar</span>(<span class=\"number\">500</span>) comment <span class=\"string\">&#x27;备注&#x27;</span>,</span><br><span class=\"line\">  <span class=\"keyword\">primary</span> key (`id`)</span><br><span class=\"line\">) engine<span class=\"operator\">=</span>Innodb auto_increment<span class=\"operator\">=</span><span class=\"number\">2</span> <span class=\"keyword\">default</span> charset<span class=\"operator\">=</span>utf8mb4 comment <span class=\"string\">&#x27;权限表&#x27;</span>;</span><br></pre></td></tr></table></figure>\n<p>（3）用户-角色映射表  </p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">create</span> <span class=\"keyword\">table</span> `sys_user_role` (</span><br><span class=\"line\">  `id` <span class=\"type\">bigint</span>(<span class=\"number\">20</span>) <span class=\"keyword\">not</span> <span class=\"keyword\">null</span> auto_increment comment <span class=\"string\">&#x27;id&#x27;</span>,</span><br><span class=\"line\">  `user_id` <span class=\"type\">bigint</span>(<span class=\"number\">200</span>) comment <span class=\"string\">&#x27;用户id&#x27;</span>,</span><br><span class=\"line\">  `role_id` <span class=\"type\">bigint</span>(<span class=\"number\">200</span>) comment <span class=\"string\">&#x27;角色id&#x27;</span>,</span><br><span class=\"line\">  <span class=\"keyword\">primary</span> key (`id`)</span><br><span class=\"line\">) engine<span class=\"operator\">=</span>Innodb auto_increment<span class=\"operator\">=</span><span class=\"number\">2</span> <span class=\"keyword\">default</span> charset<span class=\"operator\">=</span>utf8mb4 comment <span class=\"string\">&#x27;用户角色映射表&#x27;</span>;</span><br></pre></td></tr></table></figure>\n<p>（4）角色-权限映射表  </p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">create</span> <span class=\"keyword\">table</span> `sys_role_menu` (</span><br><span class=\"line\">  `id` <span class=\"type\">bigint</span>(<span class=\"number\">20</span>) <span class=\"keyword\">not</span> <span class=\"keyword\">null</span> auto_increment comment <span class=\"string\">&#x27;id&#x27;</span>,</span><br><span class=\"line\">  `role_id` <span class=\"type\">bigint</span>(<span class=\"number\">200</span>) comment <span class=\"string\">&#x27;角色id&#x27;</span>,</span><br><span class=\"line\">  `menu_id` <span class=\"type\">bigint</span>(<span class=\"number\">200</span>) comment <span class=\"string\">&#x27;权限id&#x27;</span>,</span><br><span class=\"line\">  <span class=\"keyword\">primary</span> key (`id`)</span><br><span class=\"line\">) engine<span class=\"operator\">=</span>Innodb auto_increment<span class=\"operator\">=</span><span class=\"number\">2</span> <span class=\"keyword\">default</span> charset<span class=\"operator\">=</span>utf8mb4 comment <span class=\"string\">&#x27;角色权限映射表&#x27;</span>;</span><br></pre></td></tr></table></figure>\n<p>（5）添加数据  </p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">insert</span> <span class=\"keyword\">into</span> sys_user_role <span class=\"keyword\">values</span> (<span class=\"number\">1</span>, <span class=\"number\">1</span>, <span class=\"number\">1</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">insert</span> <span class=\"keyword\">into</span> sys_role <span class=\"keyword\">values</span></span><br><span class=\"line\">(<span class=\"number\">1</span>, <span class=\"string\">&#x27;经理&#x27;</span>, <span class=\"string\">&#x27;ceo&#x27;</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"keyword\">null</span>, <span class=\"keyword\">null</span>, <span class=\"keyword\">null</span>, <span class=\"keyword\">null</span>, <span class=\"keyword\">null</span>),</span><br><span class=\"line\">(<span class=\"number\">2</span>, <span class=\"string\">&#x27;程序员&#x27;</span>, <span class=\"string\">&#x27;coder&#x27;</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"keyword\">null</span>, <span class=\"keyword\">null</span>, <span class=\"keyword\">null</span>, <span class=\"keyword\">null</span>, <span class=\"keyword\">null</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">insert</span> <span class=\"keyword\">into</span> sys_role_menu <span class=\"keyword\">values</span> (<span class=\"number\">1</span>, <span class=\"number\">1</span>, <span class=\"number\">1</span>), (<span class=\"number\">2</span>, <span class=\"number\">1</span>, <span class=\"number\">2</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">insert</span> <span class=\"keyword\">into</span> sys_menu <span class=\"keyword\">values</span></span><br><span class=\"line\">(<span class=\"number\">1</span>, <span class=\"string\">&#x27;用户管理&#x27;</span>, <span class=\"string\">&#x27;/user&#x27;</span>, <span class=\"string\">&#x27;system/user/index&#x27;</span>, <span class=\"string\">&#x27;0&#x27;</span>, <span class=\"string\">&#x27;0&#x27;</span>, <span class=\"string\">&#x27;system:user:list&#x27;</span>, <span class=\"string\">&#x27;user&#x27;</span>, <span class=\"number\">0</span>, <span class=\"keyword\">null</span>, <span class=\"keyword\">null</span>, <span class=\"keyword\">null</span>, <span class=\"keyword\">null</span>, <span class=\"keyword\">null</span>),</span><br><span class=\"line\">(<span class=\"number\">2</span>, <span class=\"string\">&#x27;角色管理&#x27;</span>, <span class=\"string\">&#x27;/role&#x27;</span>, <span class=\"string\">&#x27;system/role/index&#x27;</span>, <span class=\"string\">&#x27;0&#x27;</span>, <span class=\"string\">&#x27;0&#x27;</span>, <span class=\"string\">&#x27;system:role:list&#x27;</span>, <span class=\"string\">&#x27;peoples&#x27;</span>, <span class=\"number\">0</span>, <span class=\"keyword\">null</span>, <span class=\"keyword\">null</span>, <span class=\"keyword\">null</span>, <span class=\"keyword\">null</span>, <span class=\"keyword\">null</span>);</span><br></pre></td></tr></table></figure>\n<p>2、根据创建的表去<code>pojo</code>包下创建实体类  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.zjysecurity.pojo;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> com.baomidou.mybatisplus.annotation.TableId;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.baomidou.mybatisplus.annotation.TableName;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.fasterxml.jackson.annotation.JsonInclude;</span><br><span class=\"line\"><span class=\"keyword\">import</span> lombok.AllArgsConstructor;</span><br><span class=\"line\"><span class=\"keyword\">import</span> lombok.Data;</span><br><span class=\"line\"><span class=\"keyword\">import</span> lombok.NoArgsConstructor;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.Serializable;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Date;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@ClassName</span> Menu</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@Author</span> zjy</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@Date</span> 2024/9/9 20:59</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@Description</span> 菜单权限表</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@Version</span> 1.0</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"meta\">@TableName(&quot;sys_menu&quot;)</span></span><br><span class=\"line\"><span class=\"meta\">@Data</span></span><br><span class=\"line\"><span class=\"meta\">@JsonInclude(JsonInclude.Include.NON_NULL)</span></span><br><span class=\"line\"><span class=\"meta\">@AllArgsConstructor</span></span><br><span class=\"line\"><span class=\"meta\">@NoArgsConstructor</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Menu</span> <span class=\"keyword\">implements</span> <span class=\"title class_\">Serializable</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"type\">long</span> <span class=\"variable\">serialVersionUID</span> <span class=\"operator\">=</span> <span class=\"number\">1L</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// id</span></span><br><span class=\"line\">    <span class=\"meta\">@TableId</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> Long id;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 菜单名</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> String name;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 路由地址</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> String path;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 组件路径</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> String component;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 菜单是否显示，0显示，1隐藏</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> String visible;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 菜单状态，0正常，1停用</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> String status;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 权限标识</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> String perms;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 菜单图标</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> String icon;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 备注</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> String remark;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 创建人id</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> Long createBy;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 创建时间</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> Date createTime;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 更新人id</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> Long updateBy;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 更新时间</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> Date updateTime;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 删除标志（0代表存在，1代表删除）</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> Integer delFlag;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>3、在<code>mapper</code>包下创建接口  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.zjysecurity.mapper;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> com.baomidou.mybatisplus.core.mapper.BaseMapper;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.zjysecurity.pojo.Menu;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.List;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">interface</span> <span class=\"title class_\">MenuMapper</span> <span class=\"keyword\">extends</span> <span class=\"title class_\">BaseMapper</span>&lt;Menu&gt; &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 根据用户id查询用户权限</span></span><br><span class=\"line\">    List&lt;String&gt; <span class=\"title function_\">selectPermsByUserId</span><span class=\"params\">(Long userId)</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>4、在<code>resources</code>包下创建<code>mapper</code>目录，并创建<code>MenuMapper.xml</code>  </p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?xml version=<span class=\"string\">&quot;1.0&quot;</span> encoding=<span class=\"string\">&quot;UTF-8&quot;</span> ?&gt;</span></span><br><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"keyword\">mapper</span></span></span><br><span class=\"line\"><span class=\"meta\">        <span class=\"keyword\">PUBLIC</span> <span class=\"string\">&quot;-//mybatis.org//DTD Mapper 3.0//EN&quot;</span></span></span><br><span class=\"line\"><span class=\"meta\">        <span class=\"string\">&quot;https://mybatis.org/dtd/mybatis-3-mapper.dtd&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">mapper</span> <span class=\"attr\">namespace</span>=<span class=\"string\">&quot;com.zjysecurity.mapper.MenuMapper&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">select</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;selectPermsByUserId&quot;</span> <span class=\"attr\">resultType</span>=<span class=\"string\">&quot;string&quot;</span> <span class=\"attr\">parameterType</span>=<span class=\"string\">&quot;Long&quot;</span>&gt;</span></span><br><span class=\"line\">        SELECT DISTINCT</span><br><span class=\"line\">        m.perms</span><br><span class=\"line\">        FROM</span><br><span class=\"line\">        sys_user_role ur</span><br><span class=\"line\">        LEFT JOIN sys_role r ON ur.role_id = r.id</span><br><span class=\"line\">        LEFT JOIN sys_role_menu rm ON ur.role_id = rm.role_id</span><br><span class=\"line\">        LEFT JOIN sys_menu m ON m.id = rm.menu_id</span><br><span class=\"line\">        WHERE</span><br><span class=\"line\">        user_id = #&#123;userId&#125;</span><br><span class=\"line\">        AND r.`status` = &#x27;0&#x27;</span><br><span class=\"line\">        AND m.`status` = &#x27;0&#x27;</span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">select</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>5、在<code>application.yml</code>文件中配置（也可以不配置，mybatis-plus自动已经配置好了）  </p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">mybatis-plus:</span></span><br><span class=\"line\">  <span class=\"attr\">mapper-locations:</span> <span class=\"string\">classpath*:/mapper/**/*.xml</span></span><br></pre></td></tr></table></figure>\n<p>6、开启权限相关配置，在<code>SecurityConfig</code>配置类上使用注解<code>@EnableGlobalMethodSecurity(prePostEnabled = true)</code>，之后就可以在<code>controller</code>类中使用<code>@PreAuthorize()</code>注解来进行权限配置；<br><code>SecurityConfig</code>配置类：  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@EnableGlobalMethodSecurity(prePostEnabled = true)</span></span><br><span class=\"line\"><span class=\"meta\">@Configuration</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">SpringSecurityConfig</span> <span class=\"keyword\">extends</span> <span class=\"title class_\">WebSecurityConfigurerAdapter</span> &#123;</span><br><span class=\"line\">\t......（省略）</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><code>controller</code>类中使用<code>@PreAuthorize()</code>注解来进行权限配置：  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@RestController</span></span><br><span class=\"line\"><span class=\"meta\">@RequestMapping(&quot;/hello&quot;)</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">HelloController</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// @PreAuthorize(&quot;hasAuthority(&#x27;test&#x27;)&quot;)表示：用户拥有test权限才能访问此接口</span></span><br><span class=\"line\">    <span class=\"meta\">@PreAuthorize(&quot;hasAuthority(&#x27;test&#x27;)&quot;)</span></span><br><span class=\"line\">    <span class=\"meta\">@GetMapping</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> String <span class=\"title function_\">hello</span><span class=\"params\">()</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">&quot;hello&quot;</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>7、在<code>LoginUser</code>类中添加：  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 权限集合</span></span><br><span class=\"line\"><span class=\"keyword\">private</span> List&lt;String&gt; permissions;</span><br></pre></td></tr></table></figure>\n<p>将<code>@NoArgsConstructor</code>和<code>@AllArgsConstructor</code>删除，更换为<code>@Builder</code>，使用<code>@Builder</code>注解来生成一个构建器模式，这样你可以更灵活地创建对象。<br>8、在<code>MyUserDetailServiceImpl</code>类中添加：  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Autowired</span></span><br><span class=\"line\"><span class=\"keyword\">private</span> MenuMapper menuMapper;</span><br></pre></td></tr></table></figure>\n<p>并在<code>// todo 权限</code>后面部分全部修改为：  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> List&lt;String&gt; list = menuMapper.selectPermsByUserId(user.getId());</span><br><span class=\"line\"><span class=\"keyword\">return</span> LoginUser.builder()</span><br><span class=\"line\">                .user(user)</span><br><span class=\"line\">                .permissions(list)</span><br><span class=\"line\">                .build();</span><br></pre></td></tr></table></figure>\n<p>9、在<code>LoginUser</code>类添加：  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// @JSONField这个注解的作用：是不让被标注的成员变量序列化存入redis，避免redis不支持而报异常</span></span><br><span class=\"line\"><span class=\"meta\">@JSONField(serialize = false)</span></span><br><span class=\"line\"><span class=\"keyword\">private</span> List&lt;SimpleGrantedAuthority&gt; authorities;</span><br></pre></td></tr></table></figure>\n<p>重写<code>getAuthorities()</code>方法：  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Override</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> Collection&lt;? <span class=\"keyword\">extends</span> <span class=\"title class_\">GrantedAuthority</span>&gt; getAuthorities() &#123;</span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">\t * 传统方式：</span></span><br><span class=\"line\"><span class=\"comment\">\t * authorities = new ArrayList&lt;&gt;();</span></span><br><span class=\"line\"><span class=\"comment\">\t * for (String permission : permissions) &#123;</span></span><br><span class=\"line\"><span class=\"comment\">\t *   SimpleGrantedAuthority authority = new SimpleGrantedAuthority(permission);</span></span><br><span class=\"line\"><span class=\"comment\">\t *   authorities.add(authority);</span></span><br><span class=\"line\"><span class=\"comment\">\t * &#125;</span></span><br><span class=\"line\"><span class=\"comment\">\t */</span></span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"comment\">// 新方式：</span></span><br><span class=\"line\">\t<span class=\"comment\">// 这里优化了，把authorities属性声明提到方法外面，这样只有第一次的时候需要转换</span></span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (authorities != <span class=\"literal\">null</span>) &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> authorities;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tauthorities = permissions.stream()</span><br><span class=\"line\">\t\t\t\t\t\t\t .map(SimpleGrantedAuthority::<span class=\"keyword\">new</span>)</span><br><span class=\"line\">\t\t\t\t\t\t\t .collect(Collectors.toList());</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> authorities;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>说明：为什么权限会使用到<code>SimpleGrantedAuthority</code>类？<br>因为我们需要重写<code>getAuthorities()</code>方法，而此方法返回值是<code>GrantedAuthority</code>接口，我们查看<code>GrantedAuthority</code>接口的实现类，选择简单的<code>SimpleGrantedAuthority</code>。<br>10、在<code>JwtAuthenticationTokenFilter</code>类的<code>// todo 权限</code>下面一行改为：  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">UsernamePasswordAuthenticationToken</span> <span class=\"variable\">authenticationToken</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">UsernamePasswordAuthenticationToken</span>(loginUser, <span class=\"literal\">null</span>, loginUser.getAuthorities());</span><br></pre></td></tr></table></figure>\n<p>11、测试访问<code>/hello</code>接口，因为<code>/hello</code>接口需要用户拥有<code>test</code>权限才能访问，然后我们数据库中用户拥有的权限为：<code>system:user:list</code>和<code>system:role:list</code>，没有<code>test</code>权限，所以用户不能访问<code>/hello</code>接口。  </p>\n<br/>\n\n\n\n<hr>\n<br/>\n\n\n\n<h1 id=\"六、自定义异常处理\"><a href=\"#六、自定义异常处理\" class=\"headerlink\" title=\"六、自定义异常处理\"></a>六、自定义异常处理</h1><p>说明：当认证或授权过程中出现了异常报错时，我们希望响应回来的数据格式同一，所以需要自定义异常处理。<br>在<code>SpringSecurity</code>中，如果认证或者授权过程中出现了异常，会被<code>ExceptionTranslationFilter</code>捕获到：  </p>\n<ol>\n<li>如果是<strong>认证</strong>过程中出现的异常会被封装成<code>AuthenticationException</code>，然后调用<code>AuthenticationEntryPoint</code>对象的方法去进行异常处理；  </li>\n<li>如果是<strong>授权</strong>过程中出现的异常会被封装成<code>AccessDeniedException</code>，然后调用<code>AccessDeniedHandler</code>对象的方法去进行异常捕获。</li>\n</ol>\n<p>如果我们需要自定义异常处理，只需要创建<code>AuthenticationEntryPoint</code>和<code>AccessDeniedHandler</code>的实现类对象，然后配置给<code>SpringSecurity</code>即可。<br>1、创建<code>exception</code>目录，并创建<code>AuthenticationEntryPoint</code>接口的实现类：  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 这个类只处理认证异常，不处理授权异常</span></span><br><span class=\"line\"><span class=\"meta\">@Component</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">AuthenticationEntryPointImpl</span> <span class=\"keyword\">implements</span> <span class=\"title class_\">AuthenticationEntryPoint</span> &#123;</span><br><span class=\"line\">\t<span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">\t * 第一个参数：请求对象</span></span><br><span class=\"line\"><span class=\"comment\">\t * 第二个参数：相应对象</span></span><br><span class=\"line\"><span class=\"comment\">\t * 第三个参数：异常对象</span></span><br><span class=\"line\"><span class=\"comment\">\t */</span></span><br><span class=\"line\">\t<span class=\"meta\">@Override</span></span><br><span class=\"line\">\t<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">commence</span><span class=\"params\">(HttpServletRequest request, HttpServletResponse response, AuthenticationException authException)</span> <span class=\"keyword\">throws</span> IOException, ServletException &#123;</span><br><span class=\"line\">\t\t<span class=\"comment\">// ResponseResult是common包中的返回结果集</span></span><br><span class=\"line\">\t\t<span class=\"comment\">// HttpStatus是spring提供的枚举类</span></span><br><span class=\"line\">\t\t<span class=\"comment\">// UNAUTHORIZED表示401状态码</span></span><br><span class=\"line\">\t\t<span class=\"type\">ResponseResult</span> <span class=\"variable\">result</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">ResponseResult</span>(HttpStatus.UNAUTHORIZED.value(), <span class=\"string\">&quot;用户认证失败，请重新登录&quot;</span>);</span><br><span class=\"line\">\t\t<span class=\"comment\">// 将上面的result对象转换为json字符串</span></span><br><span class=\"line\">\t\t<span class=\"type\">String</span> <span class=\"variable\">json</span> <span class=\"operator\">=</span> JSON.toJSONString(result);</span><br><span class=\"line\">\t\t<span class=\"comment\">// 将json字符串响应给前端</span></span><br><span class=\"line\">\t\t<span class=\"comment\">// WebUtils是utils包中的工具类</span></span><br><span class=\"line\">\t\tWebUtils.renderString(response, json);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>2、在<code>exception</code>目录下创建<code>AccessDeniedHandler</code>接口的实现类：  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 这个类只处理授权异常，不处理认证异常</span></span><br><span class=\"line\"><span class=\"meta\">@Component</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">AccessDeniedHandlerImpl</span> <span class=\"keyword\">implements</span> <span class=\"title class_\">AccessDeniedHandler</span> &#123;</span><br><span class=\"line\">\t<span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">\t * 第一个参数：请求对象</span></span><br><span class=\"line\"><span class=\"comment\">\t * 第二个参数：相应对象</span></span><br><span class=\"line\"><span class=\"comment\">\t * 第三个参数：异常对象</span></span><br><span class=\"line\"><span class=\"comment\">\t */</span></span><br><span class=\"line\">\t<span class=\"meta\">@Override</span></span><br><span class=\"line\">\t<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">handle</span><span class=\"params\">(HttpServletRequest request, HttpServletResponse response, AuthenticationException authException)</span> <span class=\"keyword\">throws</span> IOException, ServletException &#123;</span><br><span class=\"line\">\t\t<span class=\"comment\">// ResponseResult是common包中的返回结果集</span></span><br><span class=\"line\">\t\t<span class=\"comment\">// HttpStatus是spring提供的枚举类</span></span><br><span class=\"line\">\t\t<span class=\"comment\">// UNAUTHORIZED表示401状态码</span></span><br><span class=\"line\">\t\t<span class=\"type\">ResponseResult</span> <span class=\"variable\">result</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">ResponseResult</span>(HttpStatus.FORBIDDEN.value(), <span class=\"string\">&quot;您没有权限&quot;</span>);</span><br><span class=\"line\">\t\t<span class=\"comment\">// 将上面的result对象转换为json字符串</span></span><br><span class=\"line\">\t\t<span class=\"type\">String</span> <span class=\"variable\">json</span> <span class=\"operator\">=</span> JSON.toJSONString(result);</span><br><span class=\"line\">\t\t<span class=\"comment\">// 将json字符串响应给前端</span></span><br><span class=\"line\">\t\t<span class=\"comment\">// WebUtils是utils包中的工具类</span></span><br><span class=\"line\">\t\tWebUtils.renderString(response, json);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>3、在<code>SecurityConfig</code>类中配置<code>AuthenticationEntryPoint</code>和<code>AccessDeniedHandler</code>：<br>添加：  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 这里用的是我们在exception目录中写好的类，因为我们将默认的实现类覆盖了</span></span><br><span class=\"line\"><span class=\"meta\">@Autowired</span></span><br><span class=\"line\"><span class=\"keyword\">private</span> AuthenticationEntryPoint authenticationEntryPoint;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@Autowired</span></span><br><span class=\"line\"><span class=\"keyword\">private</span> AccessDeniedHandler accessDeniedHandler;</span><br></pre></td></tr></table></figure>\n<p>在<code>configure(HttpSecurity http)</code>方法中添加：  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">http.exceptionHandling()</span><br><span class=\"line\">    <span class=\"comment\">// 配置认证失败的处理器</span></span><br><span class=\"line\">\t.authenticationEntryPoint(authenticationEntryPoint)</span><br><span class=\"line\">\t<span class=\"comment\">// 配置授权失败的处理器</span></span><br><span class=\"line\">\t.accessDeniedHandler(accessDeniedHandler);</span><br></pre></td></tr></table></figure>\n<p>4、除了上面的方法以外，还可以使用<strong>自定义处理器</strong>来同一处理异常和返回结果，可查看链接：<br><a href=\"https://www.yuque.com/huanfqc/springsecurity/springsecurity#qJDwT\">点击跳转</a></p>\n<br/>\n\n\n\n<hr>\n<br/>\n\n\n\n<h1 id=\"七、跨域处理\"><a href=\"#七、跨域处理\" class=\"headerlink\" title=\"七、跨域处理\"></a>七、跨域处理</h1><p>说明：跨域问题，在前端和后端分离的项目中比较常见，比如前端使用<code>Vue</code>，后端使用<code>SpringBoot</code>，前端和后端部署在不同的服务器上，那么前端在请求后端接口时就会出现跨域问题。<br>处理跨域问题，我们需要做两步（第二步可能不需要，因为springboot解决了跨域，就解决了，如果没有解决再弄）：<br>1、开启<code>Springboot</code>的允许跨域访问：<br>在<code>config</code>目录下创建<code>CorsConfig</code>配置类。  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Configuration</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">CorsConfig</span> <span class=\"keyword\">implements</span> <span class=\"title class_\">WebMvcConfigurer</span> &#123;</span><br><span class=\"line\">\t<span class=\"meta\">@Override</span></span><br><span class=\"line\">\t<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">addCorsMappings</span><span class=\"params\">(CorsRegistry registry)</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"comment\">// 设置允许跨域的路由</span></span><br><span class=\"line\">\t\tregistry.addMapping(<span class=\"string\">&quot;/**&quot;</span>)</span><br><span class=\"line\">\t\t\t\t<span class=\"comment\">// 设置允许跨域请求的域名</span></span><br><span class=\"line\">\t\t\t\t.allowedOriginPatterns(<span class=\"string\">&quot;*&quot;</span>)</span><br><span class=\"line\">\t\t\t\t<span class=\"comment\">// 设置允许的请求方法</span></span><br><span class=\"line\">\t\t\t\t.allowedMethods(<span class=\"string\">&quot;*&quot;</span>)</span><br><span class=\"line\">\t\t\t\t<span class=\"comment\">// 是否允许证书（cookies）</span></span><br><span class=\"line\">\t\t\t\t.allowCredentials(<span class=\"literal\">true</span>)</span><br><span class=\"line\">\t\t\t\t<span class=\"comment\">// 设置允许的header属性</span></span><br><span class=\"line\">\t\t\t\t.allowedHeaders(<span class=\"string\">&quot;*&quot;</span>)</span><br><span class=\"line\">\t\t\t\t<span class=\"comment\">// 跨域允许时间</span></span><br><span class=\"line\">\t\t\t\t.maxAge(<span class=\"number\">3600</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>2、在<code>SecurityConfig</code>类中的<code>configure(HttpSecurity http)</code>方法中添加：  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 允许跨域请求</span></span><br><span class=\"line\">http.cors();</span><br></pre></td></tr></table></figure>\n\n\n\n<br/>\n\n\n\n<hr>\n<br/>\n\n\n\n<h1 id=\"八、自定义权限校验方法\"><a href=\"#八、自定义权限校验方法\" class=\"headerlink\" title=\"八、自定义权限校验方法\"></a>八、自定义权限校验方法</h1><p>1、新建自定义权限校验类  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 这里需要命名</span></span><br><span class=\"line\"><span class=\"meta\">@Component(&quot;myAuthority&quot;)</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">MyAuthority</span> &#123;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"comment\">// 自定义权限校验方法</span></span><br><span class=\"line\">\t<span class=\"keyword\">public</span> <span class=\"type\">boolean</span> <span class=\"title function_\">hasAuthority</span><span class=\"params\">(String authority)</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"comment\">// 获取当前登录用户</span></span><br><span class=\"line\">\t\t<span class=\"type\">Authentication</span> <span class=\"variable\">authentication</span> <span class=\"operator\">=</span> SecurityContextHolder.getContext().getAuthentication();</span><br><span class=\"line\">\t\t<span class=\"type\">LoginUser</span> <span class=\"variable\">loginUser</span> <span class=\"operator\">=</span> (LoginUser) authentication.getPrincipal();</span><br><span class=\"line\">\t\t<span class=\"comment\">// 获取当前用户的权限</span></span><br><span class=\"line\">\t\tList&lt;String&gt; permissions = loginUser.getPermissions();</span><br><span class=\"line\">\t\t<span class=\"comment\">// 判断当前用户是否具有该权限</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> permissions.contains(authority);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>2、使用<code>@PreAuthorize</code>注解：  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@RestController</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">HelloController</span> &#123;</span><br><span class=\"line\">\t<span class=\"comment\">// 这里需要使用我们自定义的权限校验方法</span></span><br><span class=\"line\">\t<span class=\"meta\">@PreAuthorize(&quot;@myAuthority.hasAuthority(&#x27;hello&#x27;)&quot;)</span></span><br><span class=\"line\">\t<span class=\"meta\">@GetMapping(&quot;/hello&quot;)</span></span><br><span class=\"line\">\t<span class=\"keyword\">public</span> String <span class=\"title function_\">hello</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"string\">&quot;hello&quot;</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n\n\n","more":"<p>完整的项目地址：<a href=\"https://gitee.com/zuo-junyuan/zjy-security\">gitee地址</a><br><br/></p>\n<hr>\n<br/>\n  \n<h1 id=\"一、快速体验（基于JDK8）\"><a href=\"#一、快速体验（基于JDK8）\" class=\"headerlink\" title=\"一、快速体验（基于JDK8）\"></a>一、快速体验（基于JDK8）</h1><p>1、先创建一个springboot项目  </p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">parent</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework.boot<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-boot-starter-parent<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>2.5.0<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">parent</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependencies</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework.boot<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-boot-starter-web<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependencies</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework.boot<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-boot-starter-test<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">scope</span>&gt;</span>test<span class=\"tag\">&lt;/<span class=\"name\">scope</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>2、创建一个controller类  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@RestController</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">HelloController</span> &#123;</span><br><span class=\"line\">    <span class=\"meta\">@GetMapping(&quot;/hello&quot;)</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> String <span class=\"title function_\">hello</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">&quot;hello&quot;</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>3、启动项目，访问<a href=\"http://localhost:8080/hello%EF%BC%8C%E8%BF%94%E5%9B%9Ehello\">http://localhost:8080/hello，返回hello</a><br>4、整合springSecurity，引入springSecurity所需依赖  </p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework.boot<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-boot-starter-security<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>5、重新启动项目，刷新页面，会自动跳转到springSecurity帮我们自动生成的登陆页面，用户名为：<code>user</code>，密码在控制台。<br>6、登录之后需要退出，可以在浏览器输入：<code>http://localhost:8080/logout</code>，这个退出页面也是springSecurity帮我们自动生成的。  </p>\n<br/>\n\n\n<hr>\n<br/>\n\n\n<h1 id=\"二、原理讲解\"><a href=\"#二、原理讲解\" class=\"headerlink\" title=\"二、原理讲解\"></a>二、原理讲解</h1><p>这是针对<code>一、快速体验</code>的原理讲解！！！<br>1、先看springSecurity提供的比较重要的几个过滤器，下图为过滤器链。  </p>\n<img src=\"/2024/09/03/SpringSecurity%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/0.jpg\" class=\"\">  \n<ol>\n<li><code>UsernamePasswordAuthenticationFilter</code>：在这个过滤器里面判断用户名和密码是否正确。  </li>\n<li><code>ExceptionTranslationFilter</code>：主要处理在登录认证过程中出现的异常。  </li>\n<li><code>FilterSecurityInterceptor</code>：主要是去判断当前用户是谁。</li>\n</ol>\n<p>2、怎么查看完整的过滤器链呢？  </p>\n<ol>\n<li>在启动类的main方法中打个断点，像下面这样  <img src=\"/2024/09/03/SpringSecurity%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/1.jpg\" class=\"\">  </li>\n<li>选择断点中的计算机图标  <img src=\"/2024/09/03/SpringSecurity%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/2.jpg\" class=\"\">  </li>\n<li>在Expression输入框中执行：<code>run.getBean(DefaultSecurityFilterChain.class)</code>  <img src=\"/2024/09/03/SpringSecurity%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/3.png\" class=\"\">  \n<code>DefaultSecurityFilterChain</code>这个是springSecurity默认实现的过滤器链。<br>其中第<code>5</code>、<code>13</code>和<code>14</code>个过滤器上面已经介绍了，然后它的过滤器的顺序就是从上往下的。<br>我们可以看到第<code>6</code>和<code>7</code>个过滤器就是用来帮助我们自动生成登录页面和退出页面的。<br>3、将总的流程转换为图就是下面的图  <img src=\"/2024/09/03/SpringSecurity%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/4.png\" class=\"\">  \n（1）图中部分名词解释  </li>\n<li><code>Authentication</code>接口: 它的实现类，表示当前访问系统的用户，封装了用户相关信息。  </li>\n<li><code>AuthenticationManager</code>接口:定义了认证Authentication的方法。  </li>\n<li><code>UserDetailsservice</code>接口:加载用户特定数据的核心接口。里面定义了一个根据用户名查询用户信息的方法。  </li>\n<li><code>UserDetails</code>接口:提供核心用户信息。通过UserDetailsservice根据用户名获取处理的用户信息要封装成UserDetails对象返回。然后将这些信息封装到Authentication对象中。</li>\n</ol>\n<p>（2）讲解（针对<code>一、快速体验</code>的原理讲解）  </p>\n<ol>\n<li>首先前端登录，输入用户名和密码，请求达到<code>UsernamePasswordAuthenticationFilter</code>这个过滤器，从图上我们可以知道这个过滤器封装<code>Authentication</code>对象，因为此时我们只有用户名和密码，没有权限。  </li>\n<li>然后会将封装好的<code>Authentication</code>对象传给<code>ProviderManager</code>、<code>DaoAuthenticationProvider</code>和<code>InMemoryUserDetailsManager</code>进行认证。  </li>\n<li>在<code>InMemoryUserDetailsManager</code>中，它会去内存中根据用户名查询用户对应的信息（不是去数据库查，是内存），把对应的用户信息封装成<code>UserDetails</code>对象，返回给<code>DaoAuthenticationProvider</code>。  </li>\n<li>在<code>DaoAuthenticationProvider</code>中，通过<code>PasswordEncoder</code>对比<code>UserDetails</code>对象中的用户密码和<code>Authentication</code>对象中用户密码是否正确，如果正确，就把<code>UserDetails</code>对象中的权限信息设置到<code>Authentication</code>对象中。</li>\n</ol>\n<p>从讲解中我们可以看到，我们要想自定义，就需要把<code>InMemoryUserDetailsManager</code>替换掉，因为它是从内存中去查的，我们需要自己写去数据库查，然后也封装成<code>UserDetails</code>对象返回给<code>DaoAuthenticationProvider</code>。<br>除了这个，我们再看<code>UsernamePasswordAuthenticationFilter</code>这个过滤器，因为我们还需要将token返回去，而这个过滤器是没有的，所以我们也需要把这个过滤器替换了。<br>然后我们再看，就是用户登录成功之后，后续每个请求也得去认证这个token，所以我们还得自己写个过滤器，去判断这个token是否正确，然后这里有个重点，就是认证的时候，是不是得去查询数据中的用户信息，如果每个请求都去查数据库，那数据库的压力就很大，所以可以考虑使用<code>redis</code>，那什么时候往<code>redis</code>中存用户信息呢？可以在第一次登录的时候，在我们替换掉的<code>UsernamePasswordAuthenticationFilter</code>那个controller中操作。  </p>\n<br/>\n\n\n<hr>\n<br/>\n\n\n<h1 id=\"三、自定义登录接口\"><a href=\"#三、自定义登录接口\" class=\"headerlink\" title=\"三、自定义登录接口\"></a>三、自定义登录接口</h1><p><strong>说明：</strong><br>在第<code>二、原理讲解</code>篇说过，要想自定义登录页面，那我们就得自定义登录接口，得把springSecurity默认的<code>UsernamePasswordAuthenticationFilter</code>和<code>InMemoryUserDetailsManager</code>替换：  </p>\n<ol>\n<li><code>UsernamePasswordAuthenticationFilter</code>替换为<code>controller</code>登录接口；  </li>\n<li><code>InMemoryUserDetailsManager</code>替换为<code>UserDetailsService</code>（springSecurity中的接口）的实现类，去数据库中查询用户信息。</li>\n</ol>\n<p>现在我们基于<code>一、快速体验</code>来修改：<br>1、先创建和初始化数据库<br>因为<code>SpringSecurity</code>是不推荐明文密码存储的，所以如果需要明文密码存储，密码前面加<code>&#123;noop&#125;</code>。  </p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">create</span> database if <span class=\"keyword\">not</span> <span class=\"keyword\">exists</span> test;</span><br><span class=\"line\">use test;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">create</span> <span class=\"keyword\">table</span> `sys_user` (</span><br><span class=\"line\">\t`id` <span class=\"type\">bigint</span>(<span class=\"number\">20</span>) <span class=\"keyword\">not</span> <span class=\"keyword\">null</span> auto_increment comment <span class=\"string\">&#x27;主键&#x27;</span>,</span><br><span class=\"line\">\t`user_name` <span class=\"type\">varchar</span>(<span class=\"number\">64</span>) <span class=\"keyword\">not</span> <span class=\"keyword\">null</span> comment <span class=\"string\">&#x27;用户名&#x27;</span>,</span><br><span class=\"line\">\t`nick_name` <span class=\"type\">varchar</span>(<span class=\"number\">64</span>) <span class=\"keyword\">not</span> <span class=\"keyword\">null</span> comment <span class=\"string\">&#x27;用户昵称&#x27;</span>,</span><br><span class=\"line\">\t`password` <span class=\"type\">varchar</span>(<span class=\"number\">64</span>) <span class=\"keyword\">not</span> <span class=\"keyword\">null</span> comment <span class=\"string\">&#x27;密码&#x27;</span>,</span><br><span class=\"line\">\t`status` <span class=\"type\">char</span>(<span class=\"number\">1</span>) <span class=\"keyword\">default</span> <span class=\"string\">&#x27;0&#x27;</span> comment <span class=\"string\">&#x27;账号状态（0正常，1停用）&#x27;</span>,</span><br><span class=\"line\">\t`email` <span class=\"type\">varchar</span>(<span class=\"number\">64</span>) <span class=\"keyword\">not</span> <span class=\"keyword\">null</span> comment <span class=\"string\">&#x27;邮箱&#x27;</span>,</span><br><span class=\"line\">\t`phonenumber` <span class=\"type\">varchar</span>(<span class=\"number\">32</span>) <span class=\"keyword\">not</span> <span class=\"keyword\">null</span> comment <span class=\"string\">&#x27;手机号&#x27;</span>,</span><br><span class=\"line\">\t`sex` <span class=\"type\">char</span>(<span class=\"number\">1</span>) <span class=\"keyword\">default</span> <span class=\"string\">&#x27;2&#x27;</span> comment <span class=\"string\">&#x27;用户性别（0男，1女，2未知）&#x27;</span>,</span><br><span class=\"line\">\t`avatar` <span class=\"type\">varchar</span>(<span class=\"number\">128</span>) <span class=\"keyword\">default</span> <span class=\"keyword\">null</span> comment <span class=\"string\">&#x27;头像&#x27;</span>,</span><br><span class=\"line\">\t`user_type` <span class=\"type\">char</span>(<span class=\"number\">1</span>) <span class=\"keyword\">default</span> <span class=\"string\">&#x27;1&#x27;</span> comment <span class=\"string\">&#x27;用户类型（0管理员，1普通用户）&#x27;</span>,</span><br><span class=\"line\">\t`create_by` <span class=\"type\">bigint</span>(<span class=\"number\">20</span>) <span class=\"keyword\">default</span> <span class=\"keyword\">null</span> comment <span class=\"string\">&#x27;创建人的用户id&#x27;</span>,</span><br><span class=\"line\">\t`create_time` datetime <span class=\"keyword\">not</span> <span class=\"keyword\">null</span> comment <span class=\"string\">&#x27;创建时间&#x27;</span>,</span><br><span class=\"line\">\t`update_by` <span class=\"type\">bigint</span>(<span class=\"number\">20</span>) <span class=\"keyword\">default</span> <span class=\"keyword\">null</span> comment <span class=\"string\">&#x27;更新人的用户id&#x27;</span>,</span><br><span class=\"line\">\t`update_time` datetime <span class=\"keyword\">not</span> <span class=\"keyword\">null</span> comment <span class=\"string\">&#x27;更新时间&#x27;</span>,</span><br><span class=\"line\">\t`del_flag` <span class=\"type\">int</span>(<span class=\"number\">2</span>) <span class=\"keyword\">default</span> <span class=\"string\">&#x27;0&#x27;</span> comment <span class=\"string\">&#x27;删除标志（0代表未删除，1代表已删除）&#x27;</span>,</span><br><span class=\"line\">\t<span class=\"keyword\">primary</span> key (`id`)</span><br><span class=\"line\">) engine<span class=\"operator\">=</span>innodb auto_increment<span class=\"operator\">=</span><span class=\"number\">2</span> <span class=\"keyword\">default</span> charset<span class=\"operator\">=</span>utf8mb4 comment<span class=\"operator\">=</span><span class=\"string\">&#x27;用户表&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">insert</span> <span class=\"keyword\">into</span> `sys_user` <span class=\"keyword\">values</span> (<span class=\"number\">1</span>, <span class=\"string\">&#x27;admin&#x27;</span>, <span class=\"string\">&#x27;管理员&#x27;</span>, <span class=\"string\">&#x27;&#123;noop&#125;admin123&#x27;</span>, <span class=\"string\">&#x27;0&#x27;</span>, <span class=\"string\">&#x27;admin@qq.com&#x27;</span>, <span class=\"string\">&#x27;15888888888&#x27;</span>, <span class=\"string\">&#x27;2&#x27;</span>, <span class=\"string\">&#x27;&#x27;</span>, <span class=\"string\">&#x27;0&#x27;</span>, <span class=\"keyword\">null</span>, <span class=\"string\">&#x27;2022-01-01 00:00:00&#x27;</span>, <span class=\"keyword\">null</span>, <span class=\"string\">&#x27;2022-01-01 00:00:00&#x27;</span>, <span class=\"number\">0</span>);</span><br></pre></td></tr></table></figure>\n<p>2、引入相关依赖  </p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- redis依赖，如果有prent标签，已经继承了springboot，version版本标签就可以省略 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework.boot<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-boot-starter-data-redis<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>com.alibaba<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>fastjson<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>1.2.83<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>io.jsonwebtoken<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>jjwt<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>0.9.1<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>com.baomidou<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>mybatis-plus-boot-starter<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>3.5.2<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- 这里继承了springboot parent标签，所以不用version --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>mysql<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>mysql-connector-java<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>3、创建一个工具类包<code>utils</code><br>（1）创建redis序列化工具类  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.zjysecurity.utils;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> com.alibaba.fastjson.JSON;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.alibaba.fastjson.parser.ParserConfig;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.alibaba.fastjson.serializer.SerializerFeature;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.fasterxml.jackson.databind.JavaType;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.fasterxml.jackson.databind.type.TypeFactory;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.data.redis.serializer.RedisSerializer;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.data.redis.serializer.SerializationException;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.nio.charset.Charset;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@ClassName</span> FastJsonRdisSerializer</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@Author</span> zjy</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@Date</span> 2024/9/5 11:02</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@Description</span> Redis使用FastJson序列化</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@Version</span> 1.0</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">FastJsonRedisSerializer</span>&lt;T&gt; <span class=\"keyword\">implements</span> <span class=\"title class_\">RedisSerializer</span>&lt;T&gt; &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"type\">Charset</span> <span class=\"variable\">DEFAULT_CHARSET</span> <span class=\"operator\">=</span> Charset.forName(<span class=\"string\">&quot;UTF-8&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> Class&lt;T&gt; clazz;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">static</span> &#123;</span><br><span class=\"line\">        ParserConfig.getGlobalInstance().setAsmEnable(<span class=\"literal\">true</span>);</span><br><span class=\"line\">\t\tParserConfig.getGlobalInstance().setAutoTypeSupport(<span class=\"literal\">true</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"title function_\">FastJsonRedisSerializer</span><span class=\"params\">(Class&lt;T&gt; clazz)</span> &#123;</span><br><span class=\"line\">        <span class=\"built_in\">super</span>();</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.clazz = clazz;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"type\">byte</span>[] serialize(T t) <span class=\"keyword\">throws</span> SerializationException &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (t == <span class=\"literal\">null</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"title class_\">byte</span>[<span class=\"number\">0</span>];</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> JSON.toJSONString(t, SerializerFeature.WriteClassName).getBytes(DEFAULT_CHARSET);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> T <span class=\"title function_\">deserialize</span><span class=\"params\">(<span class=\"type\">byte</span>[] bytes)</span> <span class=\"keyword\">throws</span> SerializationException &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (bytes == <span class=\"literal\">null</span> || bytes.length &lt;= <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">null</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"type\">String</span> <span class=\"variable\">str</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">String</span>(bytes, DEFAULT_CHARSET);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> JSON.parseObject(str, clazz);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">protected</span> JavaType <span class=\"title function_\">getJavaType</span><span class=\"params\">(Class&lt;?&gt; clazz)</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> TypeFactory.defaultInstance().constructType(clazz);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>（2）创建Jwt工具类  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.zjysecurity.utils;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> io.jsonwebtoken.Claims;</span><br><span class=\"line\"><span class=\"keyword\">import</span> io.jsonwebtoken.JwtBuilder;</span><br><span class=\"line\"><span class=\"keyword\">import</span> io.jsonwebtoken.Jwts;</span><br><span class=\"line\"><span class=\"keyword\">import</span> io.jsonwebtoken.SignatureAlgorithm;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.crypto.SecretKey;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.crypto.spec.SecretKeySpec;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Base64;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Date;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.UUID;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@ClassName</span> JwtUtil</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@Author</span> zjy</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@Date</span> 2024/9/5 12:46</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@Description</span> Jwt工具类</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@Version</span> 1.0</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">JwtUtil</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 有效期，60 * 60 * 1000  一个小时</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"type\">long</span> <span class=\"variable\">JWT_TTL</span> <span class=\"operator\">=</span> <span class=\"number\">60</span> * <span class=\"number\">60</span> * <span class=\"number\">1000L</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 设置密钥明文，注意长度必须大于等于6位</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"type\">String</span> <span class=\"variable\">JWT_KEY</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;zjy&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> String <span class=\"title function_\">getUUID</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"type\">String</span> <span class=\"variable\">token</span> <span class=\"operator\">=</span> UUID.randomUUID().toString().replaceAll(<span class=\"string\">&quot;-&quot;</span>, <span class=\"string\">&quot;&quot;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> token;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 生成JWT</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> subject token中要存放的数据（json格式）</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span></span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> String <span class=\"title function_\">createJWT</span><span class=\"params\">(String subject)</span> &#123;</span><br><span class=\"line\">        <span class=\"type\">JwtBuilder</span> <span class=\"variable\">builder</span> <span class=\"operator\">=</span> getJwtBuilder(subject, <span class=\"literal\">null</span>, getUUID());</span><br><span class=\"line\">        <span class=\"keyword\">return</span> builder.compact();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 生成JWT</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> subject token中要存放的数据（json格式）</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> ttlMillis token超时时间</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span></span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> String <span class=\"title function_\">createJWT</span><span class=\"params\">(String subject, Long ttlMillis)</span> &#123;</span><br><span class=\"line\">        <span class=\"type\">JwtBuilder</span> <span class=\"variable\">builder</span> <span class=\"operator\">=</span> getJwtBuilder(subject, ttlMillis, getUUID());</span><br><span class=\"line\">        <span class=\"keyword\">return</span> builder.compact();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> JwtBuilder <span class=\"title function_\">getJwtBuilder</span><span class=\"params\">(String subject, Long ttlMillis, String uuid)</span> &#123;</span><br><span class=\"line\">        <span class=\"type\">SignatureAlgorithm</span> <span class=\"variable\">signatureAlgorithm</span> <span class=\"operator\">=</span> SignatureAlgorithm.HS256;</span><br><span class=\"line\">        <span class=\"type\">SecretKey</span> <span class=\"variable\">secretKey</span> <span class=\"operator\">=</span> generalKey();</span><br><span class=\"line\">        <span class=\"type\">long</span> <span class=\"variable\">nowMillis</span> <span class=\"operator\">=</span> System.currentTimeMillis();</span><br><span class=\"line\">        <span class=\"type\">Date</span> <span class=\"variable\">now</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Date</span>(nowMillis);</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (ttlMillis == <span class=\"literal\">null</span>) &#123;</span><br><span class=\"line\">            ttlMillis = JwtUtil.JWT_TTL;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"type\">long</span> <span class=\"variable\">expMillis</span> <span class=\"operator\">=</span> nowMillis + ttlMillis;</span><br><span class=\"line\">        <span class=\"type\">Date</span> <span class=\"variable\">exp</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Date</span>(expMillis);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> Jwts.builder()</span><br><span class=\"line\">                .setId(uuid)              <span class=\"comment\">// 唯一ID</span></span><br><span class=\"line\">                .setSubject(subject)      <span class=\"comment\">// 主题</span></span><br><span class=\"line\">                .setIssuer(<span class=\"string\">&quot;zjy&quot;</span>)         <span class=\"comment\">// 签发者</span></span><br><span class=\"line\">                .setIssuedAt(now)        <span class=\"comment\">// 签发时间</span></span><br><span class=\"line\">                .signWith(signatureAlgorithm, secretKey) <span class=\"comment\">// 使用HS256对称加密算法签名，第二个参数为密钥</span></span><br><span class=\"line\">                .setExpiration(exp);      <span class=\"comment\">// 过期时间</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 生成JWT</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> id</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> subject</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> ttlMillis</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span></span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> String <span class=\"title function_\">createJWT</span><span class=\"params\">(String id, String subject, Long ttlMillis)</span> &#123;</span><br><span class=\"line\">        <span class=\"type\">JwtBuilder</span> <span class=\"variable\">builder</span> <span class=\"operator\">=</span> getJwtBuilder(subject, ttlMillis, id);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> builder.compact();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 生成加密后的密钥 secretKey</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span></span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> SecretKey <span class=\"title function_\">generalKey</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"type\">byte</span>[] encodedKey = Base64.getDecoder().decode(JwtUtil.JWT_KEY);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"title class_\">SecretKeySpec</span>(encodedKey, <span class=\"number\">0</span>, encodedKey.length, <span class=\"string\">&quot;AES&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 解析JWT</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> jwt</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span></span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@throws</span> Exception</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> Claims <span class=\"title function_\">parseJWT</span><span class=\"params\">(String jwt)</span> <span class=\"keyword\">throws</span> Exception&#123;</span><br><span class=\"line\">        <span class=\"type\">SecretKey</span> <span class=\"variable\">secretKey</span> <span class=\"operator\">=</span> generalKey();</span><br><span class=\"line\">        <span class=\"keyword\">return</span> Jwts.parser()</span><br><span class=\"line\">                .setSigningKey(secretKey)</span><br><span class=\"line\">                .parseClaimsJws(jwt)</span><br><span class=\"line\">                .getBody();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>（3）创建redis工具类  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.zjysecurity.utils;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.data.redis.core.BoundSetOperations;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.data.redis.core.HashOperations;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.data.redis.core.RedisTemplate;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.stereotype.Component;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.*;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.concurrent.TimeUnit;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@ClassName</span> RedisCache</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@Author</span> zjy</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@Date</span> 2024/9/5 13:23</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@Description</span> redis工具类</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@Version</span> 1.0</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"meta\">@SuppressWarnings(value = &#123;&quot;unchecked&quot;, &quot;rawtypes&quot;&#125;)</span></span><br><span class=\"line\"><span class=\"meta\">@Component</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">RedisCache</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Autowired</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> RedisTemplate redisTemplate;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 缓存基本的对象，Integer、String、实体类等</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> key 缓存的键值</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> value 缓存的值</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> &lt;T&gt; <span class=\"keyword\">void</span> <span class=\"title function_\">setCacheObject</span><span class=\"params\">(<span class=\"keyword\">final</span> String key, <span class=\"keyword\">final</span> T value)</span> &#123;</span><br><span class=\"line\">        redisTemplate.opsForValue().set(key, value);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 缓存基本的对象，Integer、String、实体类等</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> key 缓存的键值</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> value 缓存的值</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> expireTime 过期时间</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> timeUnit 时间单位</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> &lt;T&gt;</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> &lt;T&gt; <span class=\"keyword\">void</span> <span class=\"title function_\">setCacheObject</span><span class=\"params\">(<span class=\"keyword\">final</span> String key, <span class=\"keyword\">final</span> T value, <span class=\"keyword\">final</span> Integer expireTime, <span class=\"keyword\">final</span> TimeUnit timeUnit)</span> &#123;</span><br><span class=\"line\">        redisTemplate.opsForValue().set(key, value, expireTime, timeUnit);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 设置有效时间</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> key 缓存的键值</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> expireTime 过期时间</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span> true：设置成功，false：设置失败</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"type\">boolean</span> <span class=\"title function_\">expire</span><span class=\"params\">(<span class=\"keyword\">final</span> String key, <span class=\"keyword\">final</span> <span class=\"type\">long</span> expireTime)</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> expire(key, expireTime, TimeUnit.SECONDS);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 设置有效时间</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> key 缓存的键值</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> expireTime 过期时间</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> timeUnit 时间单位</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span> true：设置成功，false：设置失败</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"type\">boolean</span> <span class=\"title function_\">expire</span><span class=\"params\">(<span class=\"keyword\">final</span> String key, <span class=\"keyword\">final</span> <span class=\"type\">long</span> expireTime, <span class=\"keyword\">final</span> TimeUnit timeUnit)</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> redisTemplate.expire(key, expireTime, timeUnit);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 获得缓存的基本对象</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> key 缓存的键值</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span> 缓存键值对应的数据</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> &lt;T&gt; T <span class=\"title function_\">getCacheObject</span><span class=\"params\">(<span class=\"keyword\">final</span> String key)</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> (T) redisTemplate.opsForValue().get(key);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 获得缓存的list对象</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> key 缓存的键值</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span> 缓存键值对应的数据</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> &lt;T&gt; List&lt;T&gt; <span class=\"title function_\">getCacheList</span><span class=\"params\">(<span class=\"keyword\">final</span> String key)</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> redisTemplate.opsForList().range(key, <span class=\"number\">0</span>, -<span class=\"number\">1</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 获得缓存的set</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> key 缓存的键值</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span> 缓存键值对应的数据</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> &lt;T&gt; Set&lt;T&gt; <span class=\"title function_\">getCacheSet</span><span class=\"params\">(<span class=\"keyword\">final</span> String key)</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> redisTemplate.opsForSet().members(key);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 获得缓存的map</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> key 缓存的键值</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span> 缓存键值对应的数据</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> &lt;T&gt; Map&lt;String, T&gt; <span class=\"title function_\">getCacheMap</span><span class=\"params\">(<span class=\"keyword\">final</span> String key)</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> (Map&lt;String, T&gt;) redisTemplate.opsForHash().entries(key);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 获取hash中的数据</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> key 缓存的键值</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> hKey hash的key</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span> hash中的对象</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> &lt;T&gt; T <span class=\"title function_\">getCacheMapValue</span><span class=\"params\">(<span class=\"keyword\">final</span> String key, <span class=\"keyword\">final</span> String hKey)</span> &#123;</span><br><span class=\"line\">        HashOperations&lt;String, String, T&gt; hashOperations = redisTemplate.opsForHash();</span><br><span class=\"line\">        <span class=\"keyword\">return</span> hashOperations.get(key, hKey);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 获得多个hash中的数据</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> key 缓存的键值</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> hKeys hash的key集合</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span> hash对象集合</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> &lt;T&gt; List&lt;T&gt; <span class=\"title function_\">getMultiCacheMapValue</span><span class=\"params\">(<span class=\"keyword\">final</span> String key, <span class=\"keyword\">final</span> Collection&lt;Object&gt; hKeys)</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> redisTemplate.opsForHash().multiGet(key, hKeys);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 获得缓存的基本对象列表</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> pattern 字符串前缀</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span> 对象列表</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> Collection&lt;String&gt; <span class=\"title function_\">keys</span><span class=\"params\">(<span class=\"keyword\">final</span> String pattern)</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> redisTemplate.keys(pattern);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 缓存List数据</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> key 缓存的键值</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> dataList 待缓存的list数据</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span> 缓存的对象</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> &lt;T&gt; <span class=\"type\">long</span> <span class=\"title function_\">setCacheList</span><span class=\"params\">(<span class=\"keyword\">final</span> String key, <span class=\"keyword\">final</span> List&lt;T&gt; dataList)</span> &#123;</span><br><span class=\"line\">        <span class=\"type\">Long</span> <span class=\"variable\">count</span> <span class=\"operator\">=</span> redisTemplate.opsForList().rightPushAll(key, dataList);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> count == <span class=\"literal\">null</span> ? <span class=\"number\">0</span> : count;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 缓存set数据</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> key 缓存的键值</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> dataSet 缓存的数据</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span> 缓存数据的对象</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> &lt;T&gt; BoundSetOperations&lt;String, T&gt; <span class=\"title function_\">setCacheSet</span><span class=\"params\">(<span class=\"keyword\">final</span> String key, <span class=\"keyword\">final</span> Set&lt;T&gt; dataSet)</span> &#123;</span><br><span class=\"line\">        BoundSetOperations&lt;String, T&gt; setOperation = redisTemplate.boundSetOps(key);</span><br><span class=\"line\">        Iterator&lt;T&gt; iterator = dataSet.iterator();</span><br><span class=\"line\">        <span class=\"keyword\">while</span> (iterator.hasNext()) &#123;</span><br><span class=\"line\">            setOperation.add(iterator.next());</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> setOperation;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 缓存Map数据</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> key 缓存的键值</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> dataMap 缓存的Map数据</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> &lt;T&gt; <span class=\"keyword\">void</span>  <span class=\"title function_\">setCacheMap</span><span class=\"params\">(<span class=\"keyword\">final</span> String key, <span class=\"keyword\">final</span> Map&lt;String, T&gt; dataMap)</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!Objects.isNull(dataMap)) &#123;</span><br><span class=\"line\">            redisTemplate.opsForHash().putAll(key, dataMap);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 往hash中存入数据</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> key 缓存的键值</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> hKey hash的key</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> value 存储的值</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> &lt;T&gt; <span class=\"keyword\">void</span> <span class=\"title function_\">setCacheMapValue</span><span class=\"params\">(<span class=\"keyword\">final</span> String key, <span class=\"keyword\">final</span> String hKey, <span class=\"keyword\">final</span> T value)</span> &#123;</span><br><span class=\"line\">        redisTemplate.opsForHash().put(key, hKey, value);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 删除单个对象</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> key</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span></span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"type\">boolean</span> <span class=\"title function_\">deleteObject</span><span class=\"params\">(<span class=\"keyword\">final</span> String key)</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> redisTemplate.delete(key);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 删除集合对象</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> collection 多个对象</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span></span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"type\">long</span> <span class=\"title function_\">deleteObject</span><span class=\"params\">(<span class=\"keyword\">final</span> Collection collection)</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> redisTemplate.delete(collection);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 删除hash中的数据</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> key</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> hKey</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">delCacheMapValue</span><span class=\"params\">(<span class=\"keyword\">final</span> String key, <span class=\"keyword\">final</span> String hKey)</span> &#123;</span><br><span class=\"line\">        <span class=\"type\">HashOperations</span> <span class=\"variable\">hashOperations</span> <span class=\"operator\">=</span> redisTemplate.opsForHash();</span><br><span class=\"line\">        hashOperations.delete(key, hKey);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>（4）创建web字符串渲染工具类  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.zjysecurity.utils;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@ClassName</span> WebUtil</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@Author</span> zjy</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@Date</span> 2024/9/5 13:57</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@Description</span> TODO</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@Version</span> 1.0</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">WebUtil</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 将字符串渲染到客户端</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> response 渲染对象</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> string 待渲染的字符串</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span></span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> String <span class=\"title function_\">renderString</span><span class=\"params\">(HttpServletResponse response, String string)</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            response.setStatus(<span class=\"number\">200</span>);</span><br><span class=\"line\">            response.setContentType(<span class=\"string\">&quot;application/json&quot;</span>);</span><br><span class=\"line\">            response.setCharacterEncoding(<span class=\"string\">&quot;UTF-8&quot;</span>);</span><br><span class=\"line\">            response.getWriter().print(string);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</span><br><span class=\"line\">            e.printStackTrace();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">null</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>4、创建一个配置类包<code>config</code><br>（1）创建redis配置类  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.zjysecurity.config;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> com.zjysecurity.utils.FastJsonRedisSerializer;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.context.annotation.Bean;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.context.annotation.Configuration;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.data.redis.connection.RedisConnectionFactory;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.data.redis.core.RedisTemplate;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@ClassName</span> RedisConfig</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@Author</span> zjy</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@Date</span> 2024/9/5 11:13</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@Description</span> redis配置类</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@Version</span> 1.0</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"meta\">@Configuration</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">RedisConfig</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Bean</span></span><br><span class=\"line\">    <span class=\"meta\">@SuppressWarnings(value = &#123;&quot;unchecked&quot;, &quot;rawtypes&quot;&#125;)</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> RedisTemplate&lt;Object, Object&gt; <span class=\"title function_\">redisTemplate</span><span class=\"params\">(RedisConnectionFactory redisConnectionFactory)</span> &#123;</span><br><span class=\"line\">        RedisTemplate&lt;Object, Object&gt; template = <span class=\"keyword\">new</span> <span class=\"title class_\">RedisTemplate</span>();</span><br><span class=\"line\">        template.setConnectionFactory(redisConnectionFactory);</span><br><span class=\"line\"></span><br><span class=\"line\">        FastJsonRedisSerializer&lt;Object&gt; serializer = <span class=\"keyword\">new</span> <span class=\"title class_\">FastJsonRedisSerializer</span>&lt;&gt;(Object.class);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// 使用StringRedisSerializer来序列化和反序列化redis的key值</span></span><br><span class=\"line\">        template.setKeySerializer(serializer);</span><br><span class=\"line\">        template.setValueSerializer(serializer);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// Hash的key也采用StringRedisSerializer的序列化方式</span></span><br><span class=\"line\">        template.setHashKeySerializer(serializer);</span><br><span class=\"line\">        template.setHashValueSerializer(serializer);</span><br><span class=\"line\"></span><br><span class=\"line\">        template.afterPropertiesSet();</span><br><span class=\"line\">        <span class=\"keyword\">return</span> template;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>5、创建一个公共类包<code>common</code><br>（1）创建一个返回结果类  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.zjysecurity.common;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> com.fasterxml.jackson.annotation.JsonInclude;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@ClassName</span> ResponseResult</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@Author</span> zjy</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@Date</span> 2024/9/5 12:40</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@Description</span> 响应类</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@Version</span> 1.0</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"meta\">@JsonInclude(JsonInclude.Include.NON_NULL)</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">ResponseResult</span>&lt;T&gt; &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 状态码</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> Integer code;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 响应信息</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> String msg;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 响应数据</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> T data;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"title function_\">ResponseResult</span><span class=\"params\">(Integer code, String msg)</span> &#123;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.code = code;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.msg = msg;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"title function_\">ResponseResult</span><span class=\"params\">(Integer code, T data)</span> &#123;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.code = code;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.data = data;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> Integer <span class=\"title function_\">getCode</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> code;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">setCode</span><span class=\"params\">(Integer code)</span> &#123;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.code = code;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> String <span class=\"title function_\">getMsg</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> msg;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">setMsg</span><span class=\"params\">(String msg)</span> &#123;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.msg = msg;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> T <span class=\"title function_\">getData</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> data;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">setData</span><span class=\"params\">(T data)</span> &#123;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.data = data;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"title function_\">ResponseResult</span><span class=\"params\">(Integer code, String msg, T data)</span> &#123;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.code = code;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.msg = msg;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.data = data;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>6、创建一个实体类<code>pojo</code>（对应数据库）  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.zjysecurity.pojo;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> com.baomidou.mybatisplus.annotation.TableName;</span><br><span class=\"line\"><span class=\"keyword\">import</span> lombok.AllArgsConstructor;</span><br><span class=\"line\"><span class=\"keyword\">import</span> lombok.Data;</span><br><span class=\"line\"><span class=\"keyword\">import</span> lombok.NoArgsConstructor;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.Serializable;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Date;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@ClassName</span> User</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@Author</span> zjy</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@Date</span> 2024/9/5 14:05</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@Description</span> 用户实体类，对应数据库sys_user表</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@Version</span> 1.0</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"meta\">@Data</span></span><br><span class=\"line\"><span class=\"meta\">@AllArgsConstructor</span></span><br><span class=\"line\"><span class=\"meta\">@NoArgsConstructor</span></span><br><span class=\"line\"><span class=\"meta\">@TableName(&quot;sys_user&quot;)</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">User</span> <span class=\"keyword\">implements</span> <span class=\"title class_\">Serializable</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"type\">long</span> <span class=\"variable\">serialVersionUID</span> <span class=\"operator\">=</span> <span class=\"number\">1L</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// id</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> Long id;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 用户名</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> String userName;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 用户昵称</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> String nickName;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 密码</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> String password;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 账号状态（0正常，1停用）</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> String status;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 邮箱</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> String email;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 手机号</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> String phonenumber;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 性别（0男，1女，2未知）</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> String sex;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 头像</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> String avatar;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 用户类型（0管理员，1普通用户）</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> String userType;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 创建人id</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> Long createBy;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 创建时间</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> Date createTime;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 更新人id</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> Long updateBy;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 更新时间</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> Date updateTime;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 删除标志（0代表存在，1代表删除）</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> Integer delFlag;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>7、创建一个<code>mapper</code>包和<code>mapper</code>接口  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.zjysecurity.mapper;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> com.baomidou.mybatisplus.core.mapper.BaseMapper;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.zjysecurity.pojo.User;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.stereotype.Service;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@InterfaceName</span> UserMapper</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@Author</span> zjy</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@Date</span> 2024/9/5 14:46</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@Description</span> TODO</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@Version</span> 1.0</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">interface</span> <span class=\"title class_\">UserMapper</span> <span class=\"keyword\">extends</span> <span class=\"title class_\">BaseMapper</span>&lt;User&gt; &#123;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>8、创建<code>resources</code>目录，与<code>java</code>目录同级，并在<code>resources</code>下创建<code>application.yml</code>配置文件  </p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">spring:</span></span><br><span class=\"line\">  <span class=\"attr\">datasource:</span></span><br><span class=\"line\">    <span class=\"attr\">url:</span> <span class=\"string\">jdbc:mysql://localhost:3306/test?useUnicode=true&amp;characterEncoding=utf8&amp;useSSL=false&amp;serverTimezone=UTC</span></span><br><span class=\"line\">    <span class=\"attr\">username:</span> <span class=\"string\">root</span></span><br><span class=\"line\">    <span class=\"attr\">password:</span> <span class=\"string\">root</span></span><br><span class=\"line\">    <span class=\"attr\">driver-class-name:</span> <span class=\"string\">com.mysql.cj.jdbc.Driver</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">server:</span></span><br><span class=\"line\">  <span class=\"attr\">port:</span> <span class=\"number\">8080</span></span><br></pre></td></tr></table></figure>\n<p>测试：  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.zjysecurity;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> com.zjysecurity.mapper.UserMapper;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.zjysecurity.pojo.User;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.junit.jupiter.api.Test;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.boot.test.context.SpringBootTest;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.List;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@SpringBootTest</span></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">ZjySecurityApplicationTests</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Autowired</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> UserMapper userMapper;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Test</span></span><br><span class=\"line\">    <span class=\"keyword\">void</span> <span class=\"title function_\">contextLoads</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        List&lt;User&gt; users = userMapper.selectList(<span class=\"literal\">null</span>);</span><br><span class=\"line\">        System.out.println(users);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>9、替换<code>InMemoryUserDetailsManager</code>，将去内存查询用户信息改为去数据库查询用户信息，需要我们创建一个类，去实现<code>SpringSecurity</code>提供的<code>UserDetailsService</code>接口，并重写<code>loadUserByUsername</code>方法，代码如下：  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.zjysecurity.service;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> com.baomidou.mybatisplus.core.conditions.query.LambdaQueryWrapper;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.zjysecurity.common.LoginUser;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.zjysecurity.mapper.UserMapper;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.zjysecurity.pojo.User;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.security.core.userdetails.UserDetails;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.security.core.userdetails.UserDetailsService;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.security.core.userdetails.UsernameNotFoundException;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.stereotype.Service;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Objects;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@ClassName</span> MyUserDetailServiceImpl</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@Author</span> zjy</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@Date</span> 2024/9/5 15:06</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@Description</span> TODO</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@Version</span> 1.0</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"meta\">@Service</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">MyUserDetailServiceImpl</span> <span class=\"keyword\">implements</span> <span class=\"title class_\">UserDetailsService</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Autowired</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> UserMapper userMapper;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> UserDetails <span class=\"title function_\">loadUserByUsername</span><span class=\"params\">(String s)</span> &#123;</span><br><span class=\"line\">        <span class=\"comment\">// 根据用户名去数据库查询用户信息</span></span><br><span class=\"line\">        LambdaQueryWrapper&lt;User&gt; wrapper = <span class=\"keyword\">new</span> <span class=\"title class_\">LambdaQueryWrapper</span>&lt;&gt;();</span><br><span class=\"line\">        wrapper.eq(User::getUserName, s);</span><br><span class=\"line\">        <span class=\"type\">User</span> <span class=\"variable\">user</span> <span class=\"operator\">=</span> userMapper.selectOne(wrapper);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// 判断用户是否存在</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (Objects.isNull(user)) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"title class_\">UsernameNotFoundException</span>(<span class=\"string\">&quot;用户不存在&quot;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// 把查询到的用户信息封装到UserDetails接口中</span></span><br><span class=\"line\">\t\t<span class=\"comment\">// todo 权限</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"title class_\">LoginUser</span>(user);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>10、因为<code>UserDetailsService</code>接口中的<code>loadUserByUsername</code>方法返回值是<code>UserDetails</code>接口，所以我们需要创建一个类，去实现<code>UserDetails</code>接口（这个接口就是专门封装登录信息的接口），并重写其中的方法，代码如下：<br>在<code>common</code>包下创建<code>LoginUser</code>类  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.zjysecurity.common;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> com.zjysecurity.pojo.User;</span><br><span class=\"line\"><span class=\"keyword\">import</span> lombok.AllArgsConstructor;</span><br><span class=\"line\"><span class=\"keyword\">import</span> lombok.Data;</span><br><span class=\"line\"><span class=\"keyword\">import</span> lombok.NoArgsConstructor;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.security.core.GrantedAuthority;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.security.core.userdetails.UserDetails;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Collection;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Collections;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@ClassName</span> LoginUser</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@Author</span> zjy</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@Date</span> 2024/9/5 14:57</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@Description</span> 用户登录信息类</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@Version</span> 1.0</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"meta\">@Data</span></span><br><span class=\"line\"><span class=\"meta\">@NoArgsConstructor</span></span><br><span class=\"line\"><span class=\"meta\">@AllArgsConstructor</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">LoginUser</span> <span class=\"keyword\">implements</span> <span class=\"title class_\">UserDetails</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> User user;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@Author</span>: zjy</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@Date</span>: 2024/9/5 15:00</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@Version</span>: 1.0</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span>: []</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span>: java.util.Collection&lt;? extends org.springframework.security.core.GrantedAuthority&gt;</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@Description</span>: 用于返回权限信息</span></span><br><span class=\"line\"><span class=\"comment\">     **/</span></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> Collection&lt;? <span class=\"keyword\">extends</span> <span class=\"title class_\">GrantedAuthority</span>&gt; getAuthorities() &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> Collections.emptyList();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@Author</span>: zjy</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@Date</span>: 2024/9/5 15:00</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@Version</span>: 1.0</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span>: []</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span>: java.lang.String</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@Description</span>: 获取用户密码</span></span><br><span class=\"line\"><span class=\"comment\">     **/</span></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> String <span class=\"title function_\">getPassword</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> user.getPassword();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@Author</span>: zjy</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@Date</span>: 2024/9/5 15:01</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@Version</span>: 1.0</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span>: []</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span>: java.lang.String</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@Description</span>: 获取用户名</span></span><br><span class=\"line\"><span class=\"comment\">     **/</span></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> String <span class=\"title function_\">getUsername</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> user.getUserName();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@Author</span>: zjy</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@Date</span>: 2024/9/5 15:01</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@Version</span>: 1.0</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span>: []</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span>: boolean</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@Description</span>: 判断登录状态是否过期，为true表示永不过期</span></span><br><span class=\"line\"><span class=\"comment\">     **/</span></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"type\">boolean</span> <span class=\"title function_\">isAccountNonExpired</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@Author</span>: zjy</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@Date</span>: 2024/9/5 15:02</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@Version</span>: 1.0</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span>: []</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span>: boolean</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@Description</span>: 判断账号是否被锁定，为true为锁定，如果为false登录的时候不让登录</span></span><br><span class=\"line\"><span class=\"comment\">     **/</span></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"type\">boolean</span> <span class=\"title function_\">isAccountNonLocked</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@Author</span>: zjy</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@Date</span>: 2024/9/5 15:03</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@Version</span>: 1.0</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span>: []</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span>: boolean</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@Description</span>: 判断登录凭证是否过期，为true表示永不过期</span></span><br><span class=\"line\"><span class=\"comment\">     **/</span></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"type\">boolean</span> <span class=\"title function_\">isCredentialsNonExpired</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@Author</span>: zjy</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@Date</span>: 2024/9/5 15:03</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@Version</span>: 1.0</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span>: []</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span>: boolean</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@Description</span>: 判断用户是否可用</span></span><br><span class=\"line\"><span class=\"comment\">     **/</span></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"type\">boolean</span> <span class=\"title function_\">isEnabled</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">&quot;0&quot;</span>.equals(user.getStatus());</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>11、启动项目，访问<code>http://localhost:8080/hello</code>，现在登录就是去数据库查询了。<br>12、目前还有一个问题，就是数据库存入的用户密码是<code>&#123;noop&#125;</code>+明文形式，这是因为SpringSecurity默认使用的加密方式为<code>PasswordEncoder</code>，它要求数据库中的密码格式为：<code>&#123;加密方式&#125;密码</code>，例如：密码为：123，存入数据库就是：<code>&#123;noop&#125;123</code>，所以我们需要修改密码的加密方式。<br>13、推荐使用SpringSecurity提供的<code>BCryptPasswordEncoder</code>加密方式，创建一个SpringSecurity配置类，继承<code>WebSecurityConfigurerAdapter</code>，将<code>PasswordEncoder</code>注入spring容器。  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.zjysecurity.config;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.context.annotation.Bean;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.context.annotation.Configuration;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.security.config.annotation.web.configuration.WebSecurityConfiguration;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.security.crypto.password.PasswordEncoder;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@ClassName</span> SpringSecurityConfig</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@Author</span> zjy</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@Date</span> 2024/9/5 23:37</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@Description</span> 实现SpringSecurity提供的WebSecurityConfigurerAdapter，修改加密方式</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@Version</span> 1.0</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"meta\">@Configuration</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">SpringSecurityConfig</span> <span class=\"keyword\">extends</span> <span class=\"title class_\">WebSecurityConfigurerAdapter</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@Author</span>: zjy</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@Date</span>: 2024/9/5 23:41</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@Version</span>: 1.0</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span>: []</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span>: org.springframework.security.crypto.password.PasswordEncoder</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@Description</span>: 把BCryptPasswordEncoder对象注入spring容器中，SpringSecurity就会使用该PasswordEncoder来进行密码校验</span></span><br><span class=\"line\"><span class=\"comment\">     **/</span></span><br><span class=\"line\">    <span class=\"comment\">// 注意下面使用了PasswordEncoder，也是可以的，因为PasswordEncoder是BCryptPasswordEncoder的父类</span></span><br><span class=\"line\">    <span class=\"meta\">@Bean</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> PasswordEncoder <span class=\"title function_\">passwordEncoder</span><span class=\"params\">()</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"title class_\">BCryptPasswordEncoder</span>();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>测试：  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Test</span></span><br><span class=\"line\"><span class=\"keyword\">void</span> <span class=\"title function_\">test</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">    <span class=\"type\">BCryptPasswordEncoder</span> <span class=\"variable\">bCryptPasswordEncoder</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">BCryptPasswordEncoder</span>();</span><br><span class=\"line\">\t<span class=\"comment\">// 加密</span></span><br><span class=\"line\">    <span class=\"type\">String</span> <span class=\"variable\">encode</span> <span class=\"operator\">=</span> bCryptPasswordEncoder.encode(<span class=\"string\">&quot;123456&quot;</span>);</span><br><span class=\"line\">    System.out.println(encode);</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"comment\">// 校验</span></span><br><span class=\"line\">\t<span class=\"type\">boolean</span> <span class=\"variable\">matches</span> <span class=\"operator\">=</span> bCryptPasswordEncoder.matches(<span class=\"string\">&quot;123456&quot;</span>, encode);</span><br><span class=\"line\">    System.out.println(matches);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>14、自定义登录接口，在<code>controller</code>包下新增登录接口  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.zjysecurity.controller;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> com.zjysecurity.common.LoginUser;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.zjysecurity.common.ResponseResult;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.zjysecurity.pojo.User;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.zjysecurity.service.LoginService;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.web.bind.annotation.PostMapping;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.web.bind.annotation.RequestBody;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.web.bind.annotation.RestController;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@RestController</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">LoginController</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Autowired</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> LoginService loginService;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@PostMapping(&quot;/login&quot;)</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> ResponseResult&lt;String&gt; <span class=\"title function_\">login</span><span class=\"params\">(<span class=\"meta\">@RequestBody</span> User user)</span>&#123;</span><br><span class=\"line\">        <span class=\"type\">String</span> <span class=\"variable\">token</span> <span class=\"operator\">=</span> loginService.login(user);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"title class_\">ResponseResult</span>&lt;&gt;(<span class=\"number\">200</span>, <span class=\"string\">&quot;登录成功&quot;</span>, token);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>15、在<code>SpringSecurityConfig</code>配置类中添加  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">  * <span class=\"doctag\">@Author</span>: zjy</span></span><br><span class=\"line\"><span class=\"comment\">  * <span class=\"doctag\">@Date</span>: 2024/9/6 13:21</span></span><br><span class=\"line\"><span class=\"comment\">  * <span class=\"doctag\">@Version</span>: 1.0</span></span><br><span class=\"line\"><span class=\"comment\">  * <span class=\"doctag\">@param</span>: []</span></span><br><span class=\"line\"><span class=\"comment\">  * <span class=\"doctag\">@return</span>: org.springframework.security.authentication.AuthenticationManager</span></span><br><span class=\"line\"><span class=\"comment\">  * <span class=\"doctag\">@Description</span>: 登录认证</span></span><br><span class=\"line\"><span class=\"comment\">  **/</span></span><br><span class=\"line\"><span class=\"meta\">@Bean</span></span><br><span class=\"line\"><span class=\"meta\">@Override</span></span><br><span class=\"line\"><span class=\"keyword\">protected</span> AuthenticationManager <span class=\"title function_\">authenticationManager</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> Exception &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"built_in\">super</span>.authenticationManager();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">\t</span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">  * anyRequest          |   匹配所有请求路径</span></span><br><span class=\"line\"><span class=\"comment\">  * access              |   SpringEl表达式结果为true时可以访问</span></span><br><span class=\"line\"><span class=\"comment\">  * anonymous           |   匿名可以访问，和permitAll的区别就是，anonymous只要登录之后就不能访问，只能匿名访问，permitAll登录还是不登陆都可以访问</span></span><br><span class=\"line\"><span class=\"comment\">  * denyAll             |   用户不能访问</span></span><br><span class=\"line\"><span class=\"comment\">  * fullyAuthenticated  |   用户完全认证可以访问（非remember-me下自动登录）</span></span><br><span class=\"line\"><span class=\"comment\">  * hasAnyAuthority     |   如果有参数，参数表示权限，则其中任何一个权限可以访问</span></span><br><span class=\"line\"><span class=\"comment\">  * hasAnyRole          |   如果有参数，参数表示角色，则其中任何一个角色可以访问</span></span><br><span class=\"line\"><span class=\"comment\">  * hasAuthority        |   如果有参数，参数表示权限，则其权限可以访问</span></span><br><span class=\"line\"><span class=\"comment\">  * hasIpAddress        |   如果有参数，参数表示IP地址，如果用户IP和参数匹配，则可以访问</span></span><br><span class=\"line\"><span class=\"comment\">  * hasRole             |   如果有参数，参数表示角色，则其角色可以访问</span></span><br><span class=\"line\"><span class=\"comment\">  * permitAll           |   用户可以任意访问</span></span><br><span class=\"line\"><span class=\"comment\">  * rememberMe          |   允许通过remember-me登录的用户访问</span></span><br><span class=\"line\"><span class=\"comment\">  * authenticated       |   用户登录后可访问</span></span><br><span class=\"line\"><span class=\"comment\">  */</span></span><br><span class=\"line\"><span class=\"meta\">@Override</span></span><br><span class=\"line\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title function_\">configure</span><span class=\"params\">(HttpSecurity http)</span> <span class=\"keyword\">throws</span> Exception &#123;</span><br><span class=\"line\">    http.</span><br><span class=\"line\">        <span class=\"comment\">// 由于是前后端分离项目，所以要关闭csrf</span></span><br><span class=\"line\">        csrf().disable()</span><br><span class=\"line\">        <span class=\"comment\">// 由于是前后端分离项目，所以session是失效的，我们就不能通过Session获取SecurityContext</span></span><br><span class=\"line\">        .sessionManagement().sessionCreationPolicy(SessionCreationPolicy.STATELESS)</span><br><span class=\"line\">        .and()</span><br><span class=\"line\">        <span class=\"comment\">// 指定springSecurity放行登录接口规则</span></span><br><span class=\"line\">        .authorizeRequests()</span><br><span class=\"line\">        <span class=\"comment\">// 对于登录接口 anonymous表示允许匿名访问</span></span><br><span class=\"line\">        .antMatchers(<span class=\"string\">&quot;/login&quot;</span>).anonymous()</span><br><span class=\"line\">        <span class=\"comment\">// 除上面外的所有请求都需要鉴权认证</span></span><br><span class=\"line\">        .anyRequest().authenticated();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>16、创建<code>LoginService</code>接口和<code>LoginServiceImpl</code>实现类<br><code>LoginService</code>接口：  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">interface</span> <span class=\"title class_\">LoginService</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@Author</span>: zjy</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@Date</span>: 2024/9/6 21:28</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@Version</span>: 1.0</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span>: [user]</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span>: java.lang.String</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@Description</span>: 登录</span></span><br><span class=\"line\"><span class=\"comment\">     **/</span></span><br><span class=\"line\">    String <span class=\"title function_\">login</span><span class=\"params\">(User user)</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><code>LoginServiceImpl</code>实现类：  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Service</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">LoginServiceImpl</span> <span class=\"keyword\">implements</span> <span class=\"title class_\">LoginService</span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Autowired</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> AuthenticationManager authenticationManager;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Autowired</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> RedisCache redisCache;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> String <span class=\"title function_\">login</span><span class=\"params\">(User user)</span> &#123;</span><br><span class=\"line\">        <span class=\"type\">String</span> <span class=\"variable\">jwt</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;&quot;</span>;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            <span class=\"comment\">//根据那个流程图，因为默认的UsernamePasswordAuthenticationFilter调用了AuthenticationManager接口的authenticate()方法进行认证，所以我们这里也要调用它</span></span><br><span class=\"line\">            <span class=\"comment\">//调用这个方法，首先我们得去SpringSecurityConfig配置类中将AuthenticationManager接口注入到spring容器中</span></span><br><span class=\"line\">            <span class=\"comment\">//因为authenticate()方法需要Authentication接口参数，我们查看Authentication接口的实现，选择使用UsernamePasswordAuthenticationToken实现类</span></span><br><span class=\"line\">            <span class=\"type\">UsernamePasswordAuthenticationToken</span> <span class=\"variable\">authenticationToken</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">UsernamePasswordAuthenticationToken</span>(user.getUserName(), user.getPassword());</span><br><span class=\"line\">            <span class=\"type\">Authentication</span> <span class=\"variable\">authenticate</span> <span class=\"operator\">=</span> authenticationManager.authenticate(authenticationToken);</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"comment\">// 判断上面authenticate是否为null，如果认证没通过，就抛出异常</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (Objects.isNull(authenticate)) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"title class_\">RuntimeException</span>(<span class=\"string\">&quot;登录失败&quot;</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"comment\">// 如果认证通过，就使用userId生成一个jwt，并将jwt返回给前端</span></span><br><span class=\"line\">            <span class=\"type\">LoginUser</span> <span class=\"variable\">loginUserInfo</span> <span class=\"operator\">=</span> (LoginUser) authenticate.getPrincipal();</span><br><span class=\"line\">            <span class=\"type\">String</span> <span class=\"variable\">userId</span> <span class=\"operator\">=</span> loginUserInfo.getUser().getId().toString();</span><br><span class=\"line\">            jwt = JwtUtil.createJWT(userId);</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"comment\">// 为了减少数据库压力，采用redis</span></span><br><span class=\"line\">            <span class=\"comment\">// 将完整的用户信息存入redis，将userId作为key</span></span><br><span class=\"line\">            redisCache.setCacheObject(userId, loginUserInfo);</span><br><span class=\"line\"></span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (e <span class=\"keyword\">instanceof</span> BadCredentialsException) &#123;</span><br><span class=\"line\">                 <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"title class_\">RuntimeException</span>(<span class=\"string\">&quot;用户名或密码错误&quot;</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"title class_\">RuntimeException</span>(e.getMessage());</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> jwt;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>17、去数据库修改用户密码，使用第<code>13</code>中的测试生成加密密码，然后启动redis服务，再使用postman发送请求测试。<br>18、在<code>二、原理讲解</code>的最后说还需要创建一个过滤器，来处理每个请求的jwt认证  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.zjysecurity.filter;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> com.zjysecurity.common.LoginUser;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.zjysecurity.utils.JwtUtil;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.zjysecurity.utils.RedisCache;</span><br><span class=\"line\"><span class=\"keyword\">import</span> io.jsonwebtoken.Claims;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.security.authentication.UsernamePasswordAuthenticationToken;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.security.core.context.SecurityContextHolder;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.stereotype.Component;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.util.StringUtils;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.web.filter.OncePerRequestFilter;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.servlet.FilterChain;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.servlet.ServletException;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.IOException;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Objects;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@ClassName</span> JwtAuthenticationTokenFilter</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@Author</span> zjy</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@Date</span> 2024/9/6 20:52</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@Description</span> jwt认证过滤器，可以实现Filter过滤器接口，但是会有问题，使用OncePerRequestFilter，保证在一次请求中只通过一次</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@Version</span> 1.0</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"meta\">@Component</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">JwtAuthenticationTokenFilter</span> <span class=\"keyword\">extends</span> <span class=\"title class_\">OncePerRequestFilter</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Autowired</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> RedisCache redisCache;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title function_\">doFilterInternal</span><span class=\"params\">(HttpServletRequest httpServletRequest, HttpServletResponse httpServletResponse, FilterChain filterChain)</span> <span class=\"keyword\">throws</span> ServletException, IOException &#123;</span><br><span class=\"line\">        <span class=\"comment\">// 获取token，指定你的token名称</span></span><br><span class=\"line\">        <span class=\"type\">String</span> <span class=\"variable\">token</span> <span class=\"operator\">=</span> httpServletRequest.getHeader(<span class=\"string\">&quot;token&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// 判空，不一定所有的请求都有token请求头，比如登录页面请求和登录请求就没有</span></span><br><span class=\"line\">        <span class=\"comment\">// StringUtils.hasText()方法用于检查给定的字符串是否为空或仅包含空格字符</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!StringUtils.hasText(token)) &#123;</span><br><span class=\"line\">            <span class=\"comment\">// 如果请求没有携带token，直接放行</span></span><br><span class=\"line\">            filterChain.doFilter(httpServletRequest, httpServletResponse);</span><br><span class=\"line\">            <span class=\"keyword\">return</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// 解析token</span></span><br><span class=\"line\">        String userId;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            <span class=\"type\">Claims</span> <span class=\"variable\">claims</span> <span class=\"operator\">=</span> JwtUtil.parseJWT(token);</span><br><span class=\"line\">            userId = claims.getSubject();</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</span><br><span class=\"line\">            e.printStackTrace();</span><br><span class=\"line\">            <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"title class_\">RuntimeException</span>(<span class=\"string\">&quot;token非法&quot;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// 从redis中获取用户信息</span></span><br><span class=\"line\">        <span class=\"type\">String</span> <span class=\"variable\">key</span> <span class=\"operator\">=</span> userId;</span><br><span class=\"line\">        <span class=\"type\">LoginUser</span> <span class=\"variable\">loginUser</span> <span class=\"operator\">=</span> redisCache.getCacheObject(key);</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (Objects.isNull(loginUser)) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"title class_\">RuntimeException</span>(<span class=\"string\">&quot;用户未登录&quot;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// 将用户信息存入SecurityContextHolder</span></span><br><span class=\"line\">        <span class=\"comment\">// 为什么使用UsernamePasswordAuthenticationToken，我们使用有三个参数的UsernamePasswordAuthenticationToken构造函数</span></span><br><span class=\"line\">        <span class=\"comment\">// 点进去查看这个构造函数，可以看到super.setAuthenticated(true);，这个表示已经认证过的用户，不用在认证了，只是用来获取用户信息</span></span><br><span class=\"line\">        <span class=\"comment\">// 第一个参数是LoginUser用户信息，第二个参数为null不用管，第三个参数是权限信息，有的话就得填</span></span><br><span class=\"line\">\t\t<span class=\"comment\">// TODO 权限</span></span><br><span class=\"line\">        <span class=\"type\">UsernamePasswordAuthenticationToken</span> <span class=\"variable\">authenticationToken</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">UsernamePasswordAuthenticationToken</span>(loginUser, <span class=\"literal\">null</span>, <span class=\"literal\">null</span>);</span><br><span class=\"line\">        <span class=\"comment\">// 将authenticationToken存入SecurityContextHolder</span></span><br><span class=\"line\">        SecurityContextHolder.getContext().setAuthentication(authenticationToken);</span><br><span class=\"line\">        <span class=\"comment\">// 放行</span></span><br><span class=\"line\">        filterChain.doFilter(httpServletRequest, httpServletResponse);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>19、在<code>SpringSecurityConfig</code>配置类中添加  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Autowired</span></span><br><span class=\"line\"><span class=\"keyword\">private</span> JwtAuthenticationTokenFilter jwtAuthenticationTokenFilter;</span><br></pre></td></tr></table></figure>\n<p>在<code>SpringSecurityConfig</code>配置类的<code>configure(HttpSecurity http)</code>方法中添加  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 把自定义的过滤器添加到过滤器链中</span></span><br><span class=\"line\"><span class=\"comment\">// 第一个参数是注入我们在filter目录中自定义的过滤器，第二个参数表示想要在哪个过滤器之前添加</span></span><br><span class=\"line\">http.addFilterBefore(jwtAuthenticationTokenFilter, UsernamePasswordAuthenticationFilter.class);</span><br></pre></td></tr></table></figure>\n\n\n\n<br/>\n\n\n<hr>\n<br/>\n\n\n<h1 id=\"四、自定义退出登录接口\"><a href=\"#四、自定义退出登录接口\" class=\"headerlink\" title=\"四、自定义退出登录接口\"></a>四、自定义退出登录接口</h1><p>1、关闭SpringSecurity默认的注销功能，在在<code>SpringSecurityConfig</code>配置类的<code>configure(HttpSecurity http)</code>方法中添加  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 关闭SpringSecurity默认的注销请求</span></span><br><span class=\"line\">http.logout().disable();</span><br></pre></td></tr></table></figure>\n<p>2、在<code>LoginService</code>接口和<code>LoginServiceImpl</code>实现类中添加注销方法<br><code>LoginService</code>接口：  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">  * <span class=\"doctag\">@Author</span>: zjy</span></span><br><span class=\"line\"><span class=\"comment\">  * <span class=\"doctag\">@Date</span>: 2024/9/6 21:29</span></span><br><span class=\"line\"><span class=\"comment\">  * <span class=\"doctag\">@Version</span>: 1.0</span></span><br><span class=\"line\"><span class=\"comment\">  * <span class=\"doctag\">@param</span>: []</span></span><br><span class=\"line\"><span class=\"comment\">  * <span class=\"doctag\">@return</span>: java.lang.String</span></span><br><span class=\"line\"><span class=\"comment\">  * <span class=\"doctag\">@Description</span>: 退出登录</span></span><br><span class=\"line\"><span class=\"comment\">  **/</span></span><br><span class=\"line\">String <span class=\"title function_\">logout</span><span class=\"params\">()</span>;</span><br></pre></td></tr></table></figure>\n<p><code>LoginServiceImpl</code>实现类：  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Override</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> String <span class=\"title function_\">logout</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 获取在JwtAuthenticationTokenFilter过滤器中设置的SecurityContextHolder用户信息</span></span><br><span class=\"line\">    <span class=\"type\">Authentication</span> <span class=\"variable\">authentication</span> <span class=\"operator\">=</span> SecurityContextHolder.getContext().getAuthentication();</span><br><span class=\"line\">    <span class=\"type\">LoginUser</span> <span class=\"variable\">loginUser</span> <span class=\"operator\">=</span> (LoginUser) authentication.getPrincipal();</span><br><span class=\"line\">    <span class=\"type\">Long</span> <span class=\"variable\">userId</span> <span class=\"operator\">=</span> loginUser.getUser().getId();</span><br><span class=\"line\">    <span class=\"comment\">// 删除redis中的用户信息</span></span><br><span class=\"line\">    redisCache.deleteObject(userId.toString());</span><br><span class=\"line\">    <span class=\"comment\">// 删除SecurityContextHolder中的用户信息</span></span><br><span class=\"line\">    SecurityContextHolder.clearContext();</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"string\">&quot;退出成功&quot;</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>3、在<code>LoginController</code>类中添加注销方法  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@GetMapping(&quot;/logout&quot;)</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> ResponseResult&lt;String&gt; <span class=\"title function_\">logout</span><span class=\"params\">()</span>&#123;</span><br><span class=\"line\">    <span class=\"type\">String</span> <span class=\"variable\">logout</span> <span class=\"operator\">=</span> loginService.logout();</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"title class_\">ResponseResult</span>&lt;&gt;(<span class=\"number\">200</span>, logout);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n\n<br/>\n\n\n\n<hr>\n<br/>\n\n\n\n\n<h1 id=\"五、权限\"><a href=\"#五、权限\" class=\"headerlink\" title=\"五、权限\"></a>五、权限</h1><p>说明一：在<code>SpringSecurity</code>中，会使用默认的<code>FilterSecurityInterceptor</code>来进行权限校验，在<code>FileSecurityInterceptor</code>中会从<code>SecurityContexrHolder</code>获取其中的<code>Authentication</code>，然后获取其中的权限信息，判断当前用户是否拥有访问当前资源所需的权限。<br>说明二：对于权限我们采用经典模型<code>RBAC权限模型</code>，该模型由下面五个部分组成：  </p>\n<ol>\n<li>用户：用户是系统操作者，用户可以拥有自己的用户名和密码，用户可以登录系统。  </li>\n<li>角色：角色是权限的集合，角色可以拥有自己的名字和描述信息。  </li>\n<li>权限：权限是系统中的最小单元，权限可以拥有自己的名字和描述信息。  </li>\n<li>用户-角色映射：用户与角色是多对多的关系，用户可以拥有多个角色，角色也可以被多个用户拥有。  </li>\n<li>角色-权限映射：角色与权限是多对多的关系，角色可以拥有多个权限，权限也可以被多个角色拥有。</li>\n</ol>\n<p>1、根据权限模型创建表<br>用户表我们上面已经创建过了。<br>（1）角色表  </p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">create</span> <span class=\"keyword\">table</span> `sys_role` (</span><br><span class=\"line\">  `id` <span class=\"type\">bigint</span>(<span class=\"number\">20</span>) <span class=\"keyword\">not</span> <span class=\"keyword\">null</span> auto_increment comment <span class=\"string\">&#x27;id&#x27;</span>,</span><br><span class=\"line\">  `name` <span class=\"type\">varchar</span>(<span class=\"number\">128</span>) comment <span class=\"string\">&#x27;角色名称&#x27;</span>,</span><br><span class=\"line\">  `role_key` <span class=\"type\">varchar</span>(<span class=\"number\">100</span>) comment <span class=\"string\">&#x27;角色key&#x27;</span>,</span><br><span class=\"line\">  `status` <span class=\"type\">char</span>(<span class=\"number\">1</span>) <span class=\"keyword\">default</span> <span class=\"string\">&#x27;0&#x27;</span> comment <span class=\"string\">&#x27;角色状态（0正常，1停用）&#x27;</span>,</span><br><span class=\"line\">  `del_flag` <span class=\"type\">int</span>(<span class=\"number\">1</span>) <span class=\"keyword\">default</span> <span class=\"number\">0</span> comment <span class=\"string\">&#x27;逻辑删除（0未删除，1已删除）&#x27;</span>,</span><br><span class=\"line\">  `create_by` <span class=\"type\">bigint</span>(<span class=\"number\">200</span>) comment <span class=\"string\">&#x27;创建人id&#x27;</span>,</span><br><span class=\"line\">  `create_time` datetime comment <span class=\"string\">&#x27;创建时间&#x27;</span>,</span><br><span class=\"line\">  `update_by` <span class=\"type\">bigint</span>(<span class=\"number\">200</span>) comment <span class=\"string\">&#x27;更新人id&#x27;</span>,</span><br><span class=\"line\">  `update_time` datetime comment <span class=\"string\">&#x27;更新时间&#x27;</span>,</span><br><span class=\"line\">  `remark` <span class=\"type\">varchar</span>(<span class=\"number\">500</span>) comment <span class=\"string\">&#x27;备注&#x27;</span>,</span><br><span class=\"line\">  <span class=\"keyword\">primary</span> key (`id`)</span><br><span class=\"line\">) engine<span class=\"operator\">=</span>Innodb auto_increment<span class=\"operator\">=</span><span class=\"number\">3</span> <span class=\"keyword\">default</span> charset<span class=\"operator\">=</span>utf8mb4 comment <span class=\"string\">&#x27;角色表&#x27;</span>;</span><br></pre></td></tr></table></figure>\n<p>（2）权限表  </p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">create</span> <span class=\"keyword\">table</span> `sys_menu` (</span><br><span class=\"line\">  `id` <span class=\"type\">bigint</span>(<span class=\"number\">20</span>) <span class=\"keyword\">not</span> <span class=\"keyword\">null</span> auto_increment comment <span class=\"string\">&#x27;id&#x27;</span>,</span><br><span class=\"line\">  `name` <span class=\"type\">varchar</span>(<span class=\"number\">128</span>) comment <span class=\"string\">&#x27;菜单名称&#x27;</span>,</span><br><span class=\"line\">  `path` <span class=\"type\">varchar</span>(<span class=\"number\">200</span>) comment <span class=\"string\">&#x27;路由地址&#x27;</span>,</span><br><span class=\"line\">  `component` <span class=\"type\">varchar</span>(<span class=\"number\">255</span>) comment <span class=\"string\">&#x27;组件路径&#x27;</span>,</span><br><span class=\"line\">  `visible` <span class=\"type\">char</span>(<span class=\"number\">1</span>) <span class=\"keyword\">default</span> <span class=\"string\">&#x27;0&#x27;</span> comment <span class=\"string\">&#x27;菜单是否显示（0显示，1隐藏）&#x27;</span>,</span><br><span class=\"line\">  `status` <span class=\"type\">char</span>(<span class=\"number\">1</span>) <span class=\"keyword\">default</span> <span class=\"string\">&#x27;0&#x27;</span> comment <span class=\"string\">&#x27;菜单状态（0正常，1停用）&#x27;</span>,</span><br><span class=\"line\">  `perms` <span class=\"type\">varchar</span>(<span class=\"number\">100</span>) comment <span class=\"string\">&#x27;权限标识&#x27;</span>,</span><br><span class=\"line\">  `icon` <span class=\"type\">varchar</span>(<span class=\"number\">100</span>) comment <span class=\"string\">&#x27;菜单图标&#x27;</span>,</span><br><span class=\"line\">  `del_flag` <span class=\"type\">int</span>(<span class=\"number\">1</span>) <span class=\"keyword\">default</span> <span class=\"number\">0</span> comment <span class=\"string\">&#x27;逻辑删除（0未删除，1已删除）&#x27;</span>,</span><br><span class=\"line\">  `create_by` <span class=\"type\">bigint</span>(<span class=\"number\">200</span>) comment <span class=\"string\">&#x27;创建人id&#x27;</span>,</span><br><span class=\"line\">  `create_time` datetime comment <span class=\"string\">&#x27;创建时间&#x27;</span>,</span><br><span class=\"line\">  `update_by` <span class=\"type\">bigint</span>(<span class=\"number\">200</span>) comment <span class=\"string\">&#x27;更新人id&#x27;</span>,</span><br><span class=\"line\">  `update_time` datetime comment <span class=\"string\">&#x27;更新时间&#x27;</span>,</span><br><span class=\"line\">  `remark` <span class=\"type\">varchar</span>(<span class=\"number\">500</span>) comment <span class=\"string\">&#x27;备注&#x27;</span>,</span><br><span class=\"line\">  <span class=\"keyword\">primary</span> key (`id`)</span><br><span class=\"line\">) engine<span class=\"operator\">=</span>Innodb auto_increment<span class=\"operator\">=</span><span class=\"number\">2</span> <span class=\"keyword\">default</span> charset<span class=\"operator\">=</span>utf8mb4 comment <span class=\"string\">&#x27;权限表&#x27;</span>;</span><br></pre></td></tr></table></figure>\n<p>（3）用户-角色映射表  </p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">create</span> <span class=\"keyword\">table</span> `sys_user_role` (</span><br><span class=\"line\">  `id` <span class=\"type\">bigint</span>(<span class=\"number\">20</span>) <span class=\"keyword\">not</span> <span class=\"keyword\">null</span> auto_increment comment <span class=\"string\">&#x27;id&#x27;</span>,</span><br><span class=\"line\">  `user_id` <span class=\"type\">bigint</span>(<span class=\"number\">200</span>) comment <span class=\"string\">&#x27;用户id&#x27;</span>,</span><br><span class=\"line\">  `role_id` <span class=\"type\">bigint</span>(<span class=\"number\">200</span>) comment <span class=\"string\">&#x27;角色id&#x27;</span>,</span><br><span class=\"line\">  <span class=\"keyword\">primary</span> key (`id`)</span><br><span class=\"line\">) engine<span class=\"operator\">=</span>Innodb auto_increment<span class=\"operator\">=</span><span class=\"number\">2</span> <span class=\"keyword\">default</span> charset<span class=\"operator\">=</span>utf8mb4 comment <span class=\"string\">&#x27;用户角色映射表&#x27;</span>;</span><br></pre></td></tr></table></figure>\n<p>（4）角色-权限映射表  </p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">create</span> <span class=\"keyword\">table</span> `sys_role_menu` (</span><br><span class=\"line\">  `id` <span class=\"type\">bigint</span>(<span class=\"number\">20</span>) <span class=\"keyword\">not</span> <span class=\"keyword\">null</span> auto_increment comment <span class=\"string\">&#x27;id&#x27;</span>,</span><br><span class=\"line\">  `role_id` <span class=\"type\">bigint</span>(<span class=\"number\">200</span>) comment <span class=\"string\">&#x27;角色id&#x27;</span>,</span><br><span class=\"line\">  `menu_id` <span class=\"type\">bigint</span>(<span class=\"number\">200</span>) comment <span class=\"string\">&#x27;权限id&#x27;</span>,</span><br><span class=\"line\">  <span class=\"keyword\">primary</span> key (`id`)</span><br><span class=\"line\">) engine<span class=\"operator\">=</span>Innodb auto_increment<span class=\"operator\">=</span><span class=\"number\">2</span> <span class=\"keyword\">default</span> charset<span class=\"operator\">=</span>utf8mb4 comment <span class=\"string\">&#x27;角色权限映射表&#x27;</span>;</span><br></pre></td></tr></table></figure>\n<p>（5）添加数据  </p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">insert</span> <span class=\"keyword\">into</span> sys_user_role <span class=\"keyword\">values</span> (<span class=\"number\">1</span>, <span class=\"number\">1</span>, <span class=\"number\">1</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">insert</span> <span class=\"keyword\">into</span> sys_role <span class=\"keyword\">values</span></span><br><span class=\"line\">(<span class=\"number\">1</span>, <span class=\"string\">&#x27;经理&#x27;</span>, <span class=\"string\">&#x27;ceo&#x27;</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"keyword\">null</span>, <span class=\"keyword\">null</span>, <span class=\"keyword\">null</span>, <span class=\"keyword\">null</span>, <span class=\"keyword\">null</span>),</span><br><span class=\"line\">(<span class=\"number\">2</span>, <span class=\"string\">&#x27;程序员&#x27;</span>, <span class=\"string\">&#x27;coder&#x27;</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"keyword\">null</span>, <span class=\"keyword\">null</span>, <span class=\"keyword\">null</span>, <span class=\"keyword\">null</span>, <span class=\"keyword\">null</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">insert</span> <span class=\"keyword\">into</span> sys_role_menu <span class=\"keyword\">values</span> (<span class=\"number\">1</span>, <span class=\"number\">1</span>, <span class=\"number\">1</span>), (<span class=\"number\">2</span>, <span class=\"number\">1</span>, <span class=\"number\">2</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">insert</span> <span class=\"keyword\">into</span> sys_menu <span class=\"keyword\">values</span></span><br><span class=\"line\">(<span class=\"number\">1</span>, <span class=\"string\">&#x27;用户管理&#x27;</span>, <span class=\"string\">&#x27;/user&#x27;</span>, <span class=\"string\">&#x27;system/user/index&#x27;</span>, <span class=\"string\">&#x27;0&#x27;</span>, <span class=\"string\">&#x27;0&#x27;</span>, <span class=\"string\">&#x27;system:user:list&#x27;</span>, <span class=\"string\">&#x27;user&#x27;</span>, <span class=\"number\">0</span>, <span class=\"keyword\">null</span>, <span class=\"keyword\">null</span>, <span class=\"keyword\">null</span>, <span class=\"keyword\">null</span>, <span class=\"keyword\">null</span>),</span><br><span class=\"line\">(<span class=\"number\">2</span>, <span class=\"string\">&#x27;角色管理&#x27;</span>, <span class=\"string\">&#x27;/role&#x27;</span>, <span class=\"string\">&#x27;system/role/index&#x27;</span>, <span class=\"string\">&#x27;0&#x27;</span>, <span class=\"string\">&#x27;0&#x27;</span>, <span class=\"string\">&#x27;system:role:list&#x27;</span>, <span class=\"string\">&#x27;peoples&#x27;</span>, <span class=\"number\">0</span>, <span class=\"keyword\">null</span>, <span class=\"keyword\">null</span>, <span class=\"keyword\">null</span>, <span class=\"keyword\">null</span>, <span class=\"keyword\">null</span>);</span><br></pre></td></tr></table></figure>\n<p>2、根据创建的表去<code>pojo</code>包下创建实体类  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.zjysecurity.pojo;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> com.baomidou.mybatisplus.annotation.TableId;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.baomidou.mybatisplus.annotation.TableName;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.fasterxml.jackson.annotation.JsonInclude;</span><br><span class=\"line\"><span class=\"keyword\">import</span> lombok.AllArgsConstructor;</span><br><span class=\"line\"><span class=\"keyword\">import</span> lombok.Data;</span><br><span class=\"line\"><span class=\"keyword\">import</span> lombok.NoArgsConstructor;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.Serializable;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Date;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@ClassName</span> Menu</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@Author</span> zjy</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@Date</span> 2024/9/9 20:59</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@Description</span> 菜单权限表</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@Version</span> 1.0</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"meta\">@TableName(&quot;sys_menu&quot;)</span></span><br><span class=\"line\"><span class=\"meta\">@Data</span></span><br><span class=\"line\"><span class=\"meta\">@JsonInclude(JsonInclude.Include.NON_NULL)</span></span><br><span class=\"line\"><span class=\"meta\">@AllArgsConstructor</span></span><br><span class=\"line\"><span class=\"meta\">@NoArgsConstructor</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Menu</span> <span class=\"keyword\">implements</span> <span class=\"title class_\">Serializable</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"type\">long</span> <span class=\"variable\">serialVersionUID</span> <span class=\"operator\">=</span> <span class=\"number\">1L</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// id</span></span><br><span class=\"line\">    <span class=\"meta\">@TableId</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> Long id;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 菜单名</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> String name;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 路由地址</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> String path;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 组件路径</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> String component;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 菜单是否显示，0显示，1隐藏</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> String visible;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 菜单状态，0正常，1停用</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> String status;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 权限标识</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> String perms;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 菜单图标</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> String icon;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 备注</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> String remark;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 创建人id</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> Long createBy;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 创建时间</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> Date createTime;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 更新人id</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> Long updateBy;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 更新时间</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> Date updateTime;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 删除标志（0代表存在，1代表删除）</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> Integer delFlag;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>3、在<code>mapper</code>包下创建接口  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.zjysecurity.mapper;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> com.baomidou.mybatisplus.core.mapper.BaseMapper;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.zjysecurity.pojo.Menu;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.List;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">interface</span> <span class=\"title class_\">MenuMapper</span> <span class=\"keyword\">extends</span> <span class=\"title class_\">BaseMapper</span>&lt;Menu&gt; &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 根据用户id查询用户权限</span></span><br><span class=\"line\">    List&lt;String&gt; <span class=\"title function_\">selectPermsByUserId</span><span class=\"params\">(Long userId)</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>4、在<code>resources</code>包下创建<code>mapper</code>目录，并创建<code>MenuMapper.xml</code>  </p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?xml version=<span class=\"string\">&quot;1.0&quot;</span> encoding=<span class=\"string\">&quot;UTF-8&quot;</span> ?&gt;</span></span><br><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"keyword\">mapper</span></span></span><br><span class=\"line\"><span class=\"meta\">        <span class=\"keyword\">PUBLIC</span> <span class=\"string\">&quot;-//mybatis.org//DTD Mapper 3.0//EN&quot;</span></span></span><br><span class=\"line\"><span class=\"meta\">        <span class=\"string\">&quot;https://mybatis.org/dtd/mybatis-3-mapper.dtd&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">mapper</span> <span class=\"attr\">namespace</span>=<span class=\"string\">&quot;com.zjysecurity.mapper.MenuMapper&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">select</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;selectPermsByUserId&quot;</span> <span class=\"attr\">resultType</span>=<span class=\"string\">&quot;string&quot;</span> <span class=\"attr\">parameterType</span>=<span class=\"string\">&quot;Long&quot;</span>&gt;</span></span><br><span class=\"line\">        SELECT DISTINCT</span><br><span class=\"line\">        m.perms</span><br><span class=\"line\">        FROM</span><br><span class=\"line\">        sys_user_role ur</span><br><span class=\"line\">        LEFT JOIN sys_role r ON ur.role_id = r.id</span><br><span class=\"line\">        LEFT JOIN sys_role_menu rm ON ur.role_id = rm.role_id</span><br><span class=\"line\">        LEFT JOIN sys_menu m ON m.id = rm.menu_id</span><br><span class=\"line\">        WHERE</span><br><span class=\"line\">        user_id = #&#123;userId&#125;</span><br><span class=\"line\">        AND r.`status` = &#x27;0&#x27;</span><br><span class=\"line\">        AND m.`status` = &#x27;0&#x27;</span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">select</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>5、在<code>application.yml</code>文件中配置（也可以不配置，mybatis-plus自动已经配置好了）  </p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">mybatis-plus:</span></span><br><span class=\"line\">  <span class=\"attr\">mapper-locations:</span> <span class=\"string\">classpath*:/mapper/**/*.xml</span></span><br></pre></td></tr></table></figure>\n<p>6、开启权限相关配置，在<code>SecurityConfig</code>配置类上使用注解<code>@EnableGlobalMethodSecurity(prePostEnabled = true)</code>，之后就可以在<code>controller</code>类中使用<code>@PreAuthorize()</code>注解来进行权限配置；<br><code>SecurityConfig</code>配置类：  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@EnableGlobalMethodSecurity(prePostEnabled = true)</span></span><br><span class=\"line\"><span class=\"meta\">@Configuration</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">SpringSecurityConfig</span> <span class=\"keyword\">extends</span> <span class=\"title class_\">WebSecurityConfigurerAdapter</span> &#123;</span><br><span class=\"line\">\t......（省略）</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><code>controller</code>类中使用<code>@PreAuthorize()</code>注解来进行权限配置：  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@RestController</span></span><br><span class=\"line\"><span class=\"meta\">@RequestMapping(&quot;/hello&quot;)</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">HelloController</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// @PreAuthorize(&quot;hasAuthority(&#x27;test&#x27;)&quot;)表示：用户拥有test权限才能访问此接口</span></span><br><span class=\"line\">    <span class=\"meta\">@PreAuthorize(&quot;hasAuthority(&#x27;test&#x27;)&quot;)</span></span><br><span class=\"line\">    <span class=\"meta\">@GetMapping</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> String <span class=\"title function_\">hello</span><span class=\"params\">()</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">&quot;hello&quot;</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>7、在<code>LoginUser</code>类中添加：  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 权限集合</span></span><br><span class=\"line\"><span class=\"keyword\">private</span> List&lt;String&gt; permissions;</span><br></pre></td></tr></table></figure>\n<p>将<code>@NoArgsConstructor</code>和<code>@AllArgsConstructor</code>删除，更换为<code>@Builder</code>，使用<code>@Builder</code>注解来生成一个构建器模式，这样你可以更灵活地创建对象。<br>8、在<code>MyUserDetailServiceImpl</code>类中添加：  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Autowired</span></span><br><span class=\"line\"><span class=\"keyword\">private</span> MenuMapper menuMapper;</span><br></pre></td></tr></table></figure>\n<p>并在<code>// todo 权限</code>后面部分全部修改为：  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> List&lt;String&gt; list = menuMapper.selectPermsByUserId(user.getId());</span><br><span class=\"line\"><span class=\"keyword\">return</span> LoginUser.builder()</span><br><span class=\"line\">                .user(user)</span><br><span class=\"line\">                .permissions(list)</span><br><span class=\"line\">                .build();</span><br></pre></td></tr></table></figure>\n<p>9、在<code>LoginUser</code>类添加：  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// @JSONField这个注解的作用：是不让被标注的成员变量序列化存入redis，避免redis不支持而报异常</span></span><br><span class=\"line\"><span class=\"meta\">@JSONField(serialize = false)</span></span><br><span class=\"line\"><span class=\"keyword\">private</span> List&lt;SimpleGrantedAuthority&gt; authorities;</span><br></pre></td></tr></table></figure>\n<p>重写<code>getAuthorities()</code>方法：  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Override</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> Collection&lt;? <span class=\"keyword\">extends</span> <span class=\"title class_\">GrantedAuthority</span>&gt; getAuthorities() &#123;</span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">\t * 传统方式：</span></span><br><span class=\"line\"><span class=\"comment\">\t * authorities = new ArrayList&lt;&gt;();</span></span><br><span class=\"line\"><span class=\"comment\">\t * for (String permission : permissions) &#123;</span></span><br><span class=\"line\"><span class=\"comment\">\t *   SimpleGrantedAuthority authority = new SimpleGrantedAuthority(permission);</span></span><br><span class=\"line\"><span class=\"comment\">\t *   authorities.add(authority);</span></span><br><span class=\"line\"><span class=\"comment\">\t * &#125;</span></span><br><span class=\"line\"><span class=\"comment\">\t */</span></span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"comment\">// 新方式：</span></span><br><span class=\"line\">\t<span class=\"comment\">// 这里优化了，把authorities属性声明提到方法外面，这样只有第一次的时候需要转换</span></span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (authorities != <span class=\"literal\">null</span>) &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> authorities;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tauthorities = permissions.stream()</span><br><span class=\"line\">\t\t\t\t\t\t\t .map(SimpleGrantedAuthority::<span class=\"keyword\">new</span>)</span><br><span class=\"line\">\t\t\t\t\t\t\t .collect(Collectors.toList());</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> authorities;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>说明：为什么权限会使用到<code>SimpleGrantedAuthority</code>类？<br>因为我们需要重写<code>getAuthorities()</code>方法，而此方法返回值是<code>GrantedAuthority</code>接口，我们查看<code>GrantedAuthority</code>接口的实现类，选择简单的<code>SimpleGrantedAuthority</code>。<br>10、在<code>JwtAuthenticationTokenFilter</code>类的<code>// todo 权限</code>下面一行改为：  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">UsernamePasswordAuthenticationToken</span> <span class=\"variable\">authenticationToken</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">UsernamePasswordAuthenticationToken</span>(loginUser, <span class=\"literal\">null</span>, loginUser.getAuthorities());</span><br></pre></td></tr></table></figure>\n<p>11、测试访问<code>/hello</code>接口，因为<code>/hello</code>接口需要用户拥有<code>test</code>权限才能访问，然后我们数据库中用户拥有的权限为：<code>system:user:list</code>和<code>system:role:list</code>，没有<code>test</code>权限，所以用户不能访问<code>/hello</code>接口。  </p>\n<br/>\n\n\n\n<hr>\n<br/>\n\n\n\n<h1 id=\"六、自定义异常处理\"><a href=\"#六、自定义异常处理\" class=\"headerlink\" title=\"六、自定义异常处理\"></a>六、自定义异常处理</h1><p>说明：当认证或授权过程中出现了异常报错时，我们希望响应回来的数据格式同一，所以需要自定义异常处理。<br>在<code>SpringSecurity</code>中，如果认证或者授权过程中出现了异常，会被<code>ExceptionTranslationFilter</code>捕获到：  </p>\n<ol>\n<li>如果是<strong>认证</strong>过程中出现的异常会被封装成<code>AuthenticationException</code>，然后调用<code>AuthenticationEntryPoint</code>对象的方法去进行异常处理；  </li>\n<li>如果是<strong>授权</strong>过程中出现的异常会被封装成<code>AccessDeniedException</code>，然后调用<code>AccessDeniedHandler</code>对象的方法去进行异常捕获。</li>\n</ol>\n<p>如果我们需要自定义异常处理，只需要创建<code>AuthenticationEntryPoint</code>和<code>AccessDeniedHandler</code>的实现类对象，然后配置给<code>SpringSecurity</code>即可。<br>1、创建<code>exception</code>目录，并创建<code>AuthenticationEntryPoint</code>接口的实现类：  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 这个类只处理认证异常，不处理授权异常</span></span><br><span class=\"line\"><span class=\"meta\">@Component</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">AuthenticationEntryPointImpl</span> <span class=\"keyword\">implements</span> <span class=\"title class_\">AuthenticationEntryPoint</span> &#123;</span><br><span class=\"line\">\t<span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">\t * 第一个参数：请求对象</span></span><br><span class=\"line\"><span class=\"comment\">\t * 第二个参数：相应对象</span></span><br><span class=\"line\"><span class=\"comment\">\t * 第三个参数：异常对象</span></span><br><span class=\"line\"><span class=\"comment\">\t */</span></span><br><span class=\"line\">\t<span class=\"meta\">@Override</span></span><br><span class=\"line\">\t<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">commence</span><span class=\"params\">(HttpServletRequest request, HttpServletResponse response, AuthenticationException authException)</span> <span class=\"keyword\">throws</span> IOException, ServletException &#123;</span><br><span class=\"line\">\t\t<span class=\"comment\">// ResponseResult是common包中的返回结果集</span></span><br><span class=\"line\">\t\t<span class=\"comment\">// HttpStatus是spring提供的枚举类</span></span><br><span class=\"line\">\t\t<span class=\"comment\">// UNAUTHORIZED表示401状态码</span></span><br><span class=\"line\">\t\t<span class=\"type\">ResponseResult</span> <span class=\"variable\">result</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">ResponseResult</span>(HttpStatus.UNAUTHORIZED.value(), <span class=\"string\">&quot;用户认证失败，请重新登录&quot;</span>);</span><br><span class=\"line\">\t\t<span class=\"comment\">// 将上面的result对象转换为json字符串</span></span><br><span class=\"line\">\t\t<span class=\"type\">String</span> <span class=\"variable\">json</span> <span class=\"operator\">=</span> JSON.toJSONString(result);</span><br><span class=\"line\">\t\t<span class=\"comment\">// 将json字符串响应给前端</span></span><br><span class=\"line\">\t\t<span class=\"comment\">// WebUtils是utils包中的工具类</span></span><br><span class=\"line\">\t\tWebUtils.renderString(response, json);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>2、在<code>exception</code>目录下创建<code>AccessDeniedHandler</code>接口的实现类：  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 这个类只处理授权异常，不处理认证异常</span></span><br><span class=\"line\"><span class=\"meta\">@Component</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">AccessDeniedHandlerImpl</span> <span class=\"keyword\">implements</span> <span class=\"title class_\">AccessDeniedHandler</span> &#123;</span><br><span class=\"line\">\t<span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">\t * 第一个参数：请求对象</span></span><br><span class=\"line\"><span class=\"comment\">\t * 第二个参数：相应对象</span></span><br><span class=\"line\"><span class=\"comment\">\t * 第三个参数：异常对象</span></span><br><span class=\"line\"><span class=\"comment\">\t */</span></span><br><span class=\"line\">\t<span class=\"meta\">@Override</span></span><br><span class=\"line\">\t<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">handle</span><span class=\"params\">(HttpServletRequest request, HttpServletResponse response, AuthenticationException authException)</span> <span class=\"keyword\">throws</span> IOException, ServletException &#123;</span><br><span class=\"line\">\t\t<span class=\"comment\">// ResponseResult是common包中的返回结果集</span></span><br><span class=\"line\">\t\t<span class=\"comment\">// HttpStatus是spring提供的枚举类</span></span><br><span class=\"line\">\t\t<span class=\"comment\">// UNAUTHORIZED表示401状态码</span></span><br><span class=\"line\">\t\t<span class=\"type\">ResponseResult</span> <span class=\"variable\">result</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">ResponseResult</span>(HttpStatus.FORBIDDEN.value(), <span class=\"string\">&quot;您没有权限&quot;</span>);</span><br><span class=\"line\">\t\t<span class=\"comment\">// 将上面的result对象转换为json字符串</span></span><br><span class=\"line\">\t\t<span class=\"type\">String</span> <span class=\"variable\">json</span> <span class=\"operator\">=</span> JSON.toJSONString(result);</span><br><span class=\"line\">\t\t<span class=\"comment\">// 将json字符串响应给前端</span></span><br><span class=\"line\">\t\t<span class=\"comment\">// WebUtils是utils包中的工具类</span></span><br><span class=\"line\">\t\tWebUtils.renderString(response, json);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>3、在<code>SecurityConfig</code>类中配置<code>AuthenticationEntryPoint</code>和<code>AccessDeniedHandler</code>：<br>添加：  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 这里用的是我们在exception目录中写好的类，因为我们将默认的实现类覆盖了</span></span><br><span class=\"line\"><span class=\"meta\">@Autowired</span></span><br><span class=\"line\"><span class=\"keyword\">private</span> AuthenticationEntryPoint authenticationEntryPoint;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@Autowired</span></span><br><span class=\"line\"><span class=\"keyword\">private</span> AccessDeniedHandler accessDeniedHandler;</span><br></pre></td></tr></table></figure>\n<p>在<code>configure(HttpSecurity http)</code>方法中添加：  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">http.exceptionHandling()</span><br><span class=\"line\">    <span class=\"comment\">// 配置认证失败的处理器</span></span><br><span class=\"line\">\t.authenticationEntryPoint(authenticationEntryPoint)</span><br><span class=\"line\">\t<span class=\"comment\">// 配置授权失败的处理器</span></span><br><span class=\"line\">\t.accessDeniedHandler(accessDeniedHandler);</span><br></pre></td></tr></table></figure>\n<p>4、除了上面的方法以外，还可以使用<strong>自定义处理器</strong>来同一处理异常和返回结果，可查看链接：<br><a href=\"https://www.yuque.com/huanfqc/springsecurity/springsecurity#qJDwT\">点击跳转</a></p>\n<br/>\n\n\n\n<hr>\n<br/>\n\n\n\n<h1 id=\"七、跨域处理\"><a href=\"#七、跨域处理\" class=\"headerlink\" title=\"七、跨域处理\"></a>七、跨域处理</h1><p>说明：跨域问题，在前端和后端分离的项目中比较常见，比如前端使用<code>Vue</code>，后端使用<code>SpringBoot</code>，前端和后端部署在不同的服务器上，那么前端在请求后端接口时就会出现跨域问题。<br>处理跨域问题，我们需要做两步（第二步可能不需要，因为springboot解决了跨域，就解决了，如果没有解决再弄）：<br>1、开启<code>Springboot</code>的允许跨域访问：<br>在<code>config</code>目录下创建<code>CorsConfig</code>配置类。  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Configuration</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">CorsConfig</span> <span class=\"keyword\">implements</span> <span class=\"title class_\">WebMvcConfigurer</span> &#123;</span><br><span class=\"line\">\t<span class=\"meta\">@Override</span></span><br><span class=\"line\">\t<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">addCorsMappings</span><span class=\"params\">(CorsRegistry registry)</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"comment\">// 设置允许跨域的路由</span></span><br><span class=\"line\">\t\tregistry.addMapping(<span class=\"string\">&quot;/**&quot;</span>)</span><br><span class=\"line\">\t\t\t\t<span class=\"comment\">// 设置允许跨域请求的域名</span></span><br><span class=\"line\">\t\t\t\t.allowedOriginPatterns(<span class=\"string\">&quot;*&quot;</span>)</span><br><span class=\"line\">\t\t\t\t<span class=\"comment\">// 设置允许的请求方法</span></span><br><span class=\"line\">\t\t\t\t.allowedMethods(<span class=\"string\">&quot;*&quot;</span>)</span><br><span class=\"line\">\t\t\t\t<span class=\"comment\">// 是否允许证书（cookies）</span></span><br><span class=\"line\">\t\t\t\t.allowCredentials(<span class=\"literal\">true</span>)</span><br><span class=\"line\">\t\t\t\t<span class=\"comment\">// 设置允许的header属性</span></span><br><span class=\"line\">\t\t\t\t.allowedHeaders(<span class=\"string\">&quot;*&quot;</span>)</span><br><span class=\"line\">\t\t\t\t<span class=\"comment\">// 跨域允许时间</span></span><br><span class=\"line\">\t\t\t\t.maxAge(<span class=\"number\">3600</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>2、在<code>SecurityConfig</code>类中的<code>configure(HttpSecurity http)</code>方法中添加：  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 允许跨域请求</span></span><br><span class=\"line\">http.cors();</span><br></pre></td></tr></table></figure>\n\n\n\n<br/>\n\n\n\n<hr>\n<br/>\n\n\n\n<h1 id=\"八、自定义权限校验方法\"><a href=\"#八、自定义权限校验方法\" class=\"headerlink\" title=\"八、自定义权限校验方法\"></a>八、自定义权限校验方法</h1><p>1、新建自定义权限校验类  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 这里需要命名</span></span><br><span class=\"line\"><span class=\"meta\">@Component(&quot;myAuthority&quot;)</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">MyAuthority</span> &#123;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"comment\">// 自定义权限校验方法</span></span><br><span class=\"line\">\t<span class=\"keyword\">public</span> <span class=\"type\">boolean</span> <span class=\"title function_\">hasAuthority</span><span class=\"params\">(String authority)</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"comment\">// 获取当前登录用户</span></span><br><span class=\"line\">\t\t<span class=\"type\">Authentication</span> <span class=\"variable\">authentication</span> <span class=\"operator\">=</span> SecurityContextHolder.getContext().getAuthentication();</span><br><span class=\"line\">\t\t<span class=\"type\">LoginUser</span> <span class=\"variable\">loginUser</span> <span class=\"operator\">=</span> (LoginUser) authentication.getPrincipal();</span><br><span class=\"line\">\t\t<span class=\"comment\">// 获取当前用户的权限</span></span><br><span class=\"line\">\t\tList&lt;String&gt; permissions = loginUser.getPermissions();</span><br><span class=\"line\">\t\t<span class=\"comment\">// 判断当前用户是否具有该权限</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> permissions.contains(authority);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>2、使用<code>@PreAuthorize</code>注解：  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@RestController</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">HelloController</span> &#123;</span><br><span class=\"line\">\t<span class=\"comment\">// 这里需要使用我们自定义的权限校验方法</span></span><br><span class=\"line\">\t<span class=\"meta\">@PreAuthorize(&quot;@myAuthority.hasAuthority(&#x27;hello&#x27;)&quot;)</span></span><br><span class=\"line\">\t<span class=\"meta\">@GetMapping(&quot;/hello&quot;)</span></span><br><span class=\"line\">\t<span class=\"keyword\">public</span> String <span class=\"title function_\">hello</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"string\">&quot;hello&quot;</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n\n\n","categories":[{"name":"工作技能","path":"api/categories/工作技能.json"}],"tags":[{"name":"工作技能","path":"api/tags/工作技能.json"},{"name":"后端","path":"api/tags/后端.json"},{"name":"Spring","path":"api/tags/Spring.json"}]}