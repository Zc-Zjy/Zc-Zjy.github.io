{"title":"Java8 stream 调式方法","slug":"Java8-stream-调式方法","date":"2023-10-07T08:18:28.000Z","updated":"2024-07-12T07:43:37.588Z","comments":true,"path":"api/articles/Java8-stream-调式方法.json","realPath":null,"excerpt":null,"covers":["/2023/10/07/Java8-stream-%E8%B0%83%E5%BC%8F%E6%96%B9%E6%B3%95/1.png","/2023/10/07/Java8-stream-%E8%B0%83%E5%BC%8F%E6%96%B9%E6%B3%95/2.png","/2023/10/07/Java8-stream-%E8%B0%83%E5%BC%8F%E6%96%B9%E6%B3%95/3.png","/2023/10/07/Java8-stream-%E8%B0%83%E5%BC%8F%E6%96%B9%E6%B3%95/4.png","/2023/10/07/Java8-stream-%E8%B0%83%E5%BC%8F%E6%96%B9%E6%B3%95/5.png"],"cover":null,"content":"<br/>\n\n<hr>\n<br/>\n\n<p><strong>说明：</strong><code>Java</code>的<code>Stream</code>编程给调试带来了极大的不便，IDEA推出了stream trace功能，可以详细看到每一步操作的关系、结果，非常方便进行调试。  </p>\n<div align=\"center\">\n    <font size=\"50\">StreamTrace 用法</font>\n</div>\n\n<h3 id=\"1、StreamTrace-例子\"><a href=\"#1、StreamTrace-例子\" class=\"headerlink\" title=\"1、StreamTrace 例子\"></a>1、StreamTrace 例子</h3><p>这里简单将字符串转成它的字符数，并设置断点开启debug模式。</p>\n<img src=\"/2023/10/07/Java8-stream-%E8%B0%83%E5%BC%8F%E6%96%B9%E6%B3%95/1.png\" class=\"\">\n<p>如上图所示，可以看到每一步操作的元素个数、操作的结果、元素转换前后的对应关，非常清晰明了；还可以查看具体的对象内容。  </p>\n<h3 id=\"2、使用-StreamTrace-方法\"><a href=\"#2、使用-StreamTrace-方法\" class=\"headerlink\" title=\"2、使用 StreamTrace 方法\"></a>2、使用 StreamTrace 方法</h3><p>StreamTrace只有在debug模式下才能使用，当在Stream代码上设置断点后，启动debug，点击流按钮，如图所示：</p>\n<img src=\"/2023/10/07/Java8-stream-%E8%B0%83%E5%BC%8F%E6%96%B9%E6%B3%95/2.png\" class=\"\"> \n<br/>\n\n<p>点击后，默认Split 模式显示：</p>\n<img src=\"/2023/10/07/Java8-stream-%E8%B0%83%E5%BC%8F%E6%96%B9%E6%B3%95/3.png\" class=\"\"> \n<br/>\n\n<p>可以点击左下方按钮切换到FlatMode模式，当然也可以再切换回去：</p>\n<img src=\"/2023/10/07/Java8-stream-%E8%B0%83%E5%BC%8F%E6%96%B9%E6%B3%95/4.png\" class=\"\">\n\n<h3 id=\"3、实战演练\"><a href=\"#3、实战演练\" class=\"headerlink\" title=\"3、实战演练\"></a>3、实战演练</h3><p>这里演示一段字符转长度并过滤长度小于5的stream操作：  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Test</span>    </span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">TestTrace</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">    Stream.of(<span class=\"string\">&quot;beijing&quot;</span>,<span class=\"string\">&quot;tianjin&quot;</span>,<span class=\"string\">&quot;shanghai&quot;</span>,<span class=\"string\">&quot;wuhan&quot;</span>)                </span><br><span class=\"line\">        .map(String::length)               </span><br><span class=\"line\">        .filter(e -&gt; e &gt; <span class=\"number\">5</span>)               </span><br><span class=\"line\">        .collect(Collectors.toList()); </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<img src=\"/2023/10/07/Java8-stream-%E8%B0%83%E5%BC%8F%E6%96%B9%E6%B3%95/5.png\" class=\"\">\n","more":"<br/>\n\n<hr>\n<br/>\n\n<p><strong>说明：</strong><code>Java</code>的<code>Stream</code>编程给调试带来了极大的不便，IDEA推出了stream trace功能，可以详细看到每一步操作的关系、结果，非常方便进行调试。  </p>\n<div align=\"center\">\n    <font size=\"50\">StreamTrace 用法</font>\n</div>\n\n<h3 id=\"1、StreamTrace-例子\"><a href=\"#1、StreamTrace-例子\" class=\"headerlink\" title=\"1、StreamTrace 例子\"></a>1、StreamTrace 例子</h3><p>这里简单将字符串转成它的字符数，并设置断点开启debug模式。</p>\n<img src=\"/2023/10/07/Java8-stream-%E8%B0%83%E5%BC%8F%E6%96%B9%E6%B3%95/1.png\" class=\"\">\n<p>如上图所示，可以看到每一步操作的元素个数、操作的结果、元素转换前后的对应关，非常清晰明了；还可以查看具体的对象内容。  </p>\n<h3 id=\"2、使用-StreamTrace-方法\"><a href=\"#2、使用-StreamTrace-方法\" class=\"headerlink\" title=\"2、使用 StreamTrace 方法\"></a>2、使用 StreamTrace 方法</h3><p>StreamTrace只有在debug模式下才能使用，当在Stream代码上设置断点后，启动debug，点击流按钮，如图所示：</p>\n<img src=\"/2023/10/07/Java8-stream-%E8%B0%83%E5%BC%8F%E6%96%B9%E6%B3%95/2.png\" class=\"\"> \n<br/>\n\n<p>点击后，默认Split 模式显示：</p>\n<img src=\"/2023/10/07/Java8-stream-%E8%B0%83%E5%BC%8F%E6%96%B9%E6%B3%95/3.png\" class=\"\"> \n<br/>\n\n<p>可以点击左下方按钮切换到FlatMode模式，当然也可以再切换回去：</p>\n<img src=\"/2023/10/07/Java8-stream-%E8%B0%83%E5%BC%8F%E6%96%B9%E6%B3%95/4.png\" class=\"\">\n\n<h3 id=\"3、实战演练\"><a href=\"#3、实战演练\" class=\"headerlink\" title=\"3、实战演练\"></a>3、实战演练</h3><p>这里演示一段字符转长度并过滤长度小于5的stream操作：  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Test</span>    </span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">TestTrace</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">    Stream.of(<span class=\"string\">&quot;beijing&quot;</span>,<span class=\"string\">&quot;tianjin&quot;</span>,<span class=\"string\">&quot;shanghai&quot;</span>,<span class=\"string\">&quot;wuhan&quot;</span>)                </span><br><span class=\"line\">        .map(String::length)               </span><br><span class=\"line\">        .filter(e -&gt; e &gt; <span class=\"number\">5</span>)               </span><br><span class=\"line\">        .collect(Collectors.toList()); </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<img src=\"/2023/10/07/Java8-stream-%E8%B0%83%E5%BC%8F%E6%96%B9%E6%B3%95/5.png\" class=\"\">\n","categories":[{"name":"工作技能","path":"api/categories/工作技能.json"}],"tags":[{"name":"工作技能","path":"api/tags/工作技能.json"},{"name":"后端","path":"api/tags/后端.json"},{"name":"Java","path":"api/tags/Java.json"}]}