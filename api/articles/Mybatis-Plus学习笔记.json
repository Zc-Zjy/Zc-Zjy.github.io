{"title":"Mybatis-Plus学习笔记","slug":"Mybatis-Plus学习笔记","date":"2023-10-18T07:09:24.000Z","updated":"2025-06-20T08:10:59.172Z","comments":true,"path":"api/articles/Mybatis-Plus学习笔记.json","realPath":null,"excerpt":null,"covers":["/2023/10/18/Mybatis-Plus%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/1.png","/2023/10/18/Mybatis-Plus%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/2.png","/2023/10/18/Mybatis-Plus%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/3.png","/2023/10/18/Mybatis-Plus%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/4.png"],"cover":null,"content":"<hr>\n<br/>\n\n\n<hr>\n<h1 id=\"一、快速入门一\"><a href=\"#一、快速入门一\" class=\"headerlink\" title=\"一、快速入门一\"></a>一、快速入门一</h1><p>1、数据库  </p>\n<table>\n<thead>\n<tr>\n<th>id</th>\n<th>name</th>\n<th>age</th>\n<th>email</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>1</td>\n<td>Jone</td>\n<td>18</td>\n<td><a href=\"mailto:test1@baomidou.com\">test1@baomidou.com</a></td>\n</tr>\n<tr>\n<td>2</td>\n<td>Jack</td>\n<td>20</td>\n<td><a href=\"mailto:test2@baomidou.com\">test2@baomidou.com</a></td>\n</tr>\n<tr>\n<td>3</td>\n<td>Tom</td>\n<td>28</td>\n<td><a href=\"mailto:test3@baomidou.com\">test3@baomidou.com</a></td>\n</tr>\n<tr>\n<td>4</td>\n<td>Sandy</td>\n<td>21</td>\n<td><a href=\"mailto:test4@baomidou.com\">test4@baomidou.com</a></td>\n</tr>\n<tr>\n<td>5</td>\n<td>Billie</td>\n<td>24</td>\n<td><a href=\"mailto:test5@baomidou.com\">test5@baomidou.com</a></td>\n</tr>\n</tbody></table>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">DROP</span> <span class=\"keyword\">TABLE</span> IF <span class=\"keyword\">EXISTS</span> <span class=\"keyword\">user</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">CREATE</span> <span class=\"keyword\">TABLE</span> <span class=\"keyword\">user</span></span><br><span class=\"line\">(</span><br><span class=\"line\">    id <span class=\"type\">BIGINT</span>(<span class=\"number\">20</span>) <span class=\"keyword\">NOT</span> <span class=\"keyword\">NULL</span> COMMENT <span class=\"string\">&#x27;主键ID&#x27;</span>,</span><br><span class=\"line\">    name <span class=\"type\">VARCHAR</span>(<span class=\"number\">30</span>) <span class=\"keyword\">NULL</span> <span class=\"keyword\">DEFAULT</span> <span class=\"keyword\">NULL</span> COMMENT <span class=\"string\">&#x27;姓名&#x27;</span>,</span><br><span class=\"line\">    age <span class=\"type\">INT</span>(<span class=\"number\">11</span>) <span class=\"keyword\">NULL</span> <span class=\"keyword\">DEFAULT</span> <span class=\"keyword\">NULL</span> COMMENT <span class=\"string\">&#x27;年龄&#x27;</span>,</span><br><span class=\"line\">    email <span class=\"type\">VARCHAR</span>(<span class=\"number\">50</span>) <span class=\"keyword\">NULL</span> <span class=\"keyword\">DEFAULT</span> <span class=\"keyword\">NULL</span> COMMENT <span class=\"string\">&#x27;邮箱&#x27;</span>,</span><br><span class=\"line\">    <span class=\"keyword\">PRIMARY</span> KEY (id)</span><br><span class=\"line\">);</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">INSERT</span> <span class=\"keyword\">INTO</span> <span class=\"keyword\">user</span> (id, name, age, email) <span class=\"keyword\">VALUES</span></span><br><span class=\"line\">(<span class=\"number\">1</span>, <span class=\"string\">&#x27;Jone&#x27;</span>, <span class=\"number\">18</span>, <span class=\"string\">&#x27;test1@baomidou.com&#x27;</span>),</span><br><span class=\"line\">(<span class=\"number\">2</span>, <span class=\"string\">&#x27;Jack&#x27;</span>, <span class=\"number\">20</span>, <span class=\"string\">&#x27;test2@baomidou.com&#x27;</span>),</span><br><span class=\"line\">(<span class=\"number\">3</span>, <span class=\"string\">&#x27;Tom&#x27;</span>, <span class=\"number\">28</span>, <span class=\"string\">&#x27;test3@baomidou.com&#x27;</span>),</span><br><span class=\"line\">(<span class=\"number\">4</span>, <span class=\"string\">&#x27;Sandy&#x27;</span>, <span class=\"number\">21</span>, <span class=\"string\">&#x27;test4@baomidou.com&#x27;</span>),</span><br><span class=\"line\">(<span class=\"number\">5</span>, <span class=\"string\">&#x27;Billie&#x27;</span>, <span class=\"number\">24</span>, <span class=\"string\">&#x27;test5@baomidou.com&#x27;</span>);</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>2、导入依赖  </p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?xml version=<span class=\"string\">&quot;1.0&quot;</span> encoding=<span class=\"string\">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">project</span> <span class=\"attr\">xmlns</span>=<span class=\"string\">&quot;http://maven.apache.org/POM/4.0.0&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">         <span class=\"attr\">xmlns:xsi</span>=<span class=\"string\">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">         <span class=\"attr\">xsi:schemaLocation</span>=<span class=\"string\">&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">modelVersion</span>&gt;</span>4.0.0<span class=\"tag\">&lt;/<span class=\"name\">modelVersion</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">parent</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework.boot<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-boot-starter-parent<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>3.0.5<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">parent</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>com.atguigu<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>springboot-starter-mybatis-plus-06<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>1.0-SNAPSHOT<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">properties</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">maven.compiler.source</span>&gt;</span>17<span class=\"tag\">&lt;/<span class=\"name\">maven.compiler.source</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">maven.compiler.target</span>&gt;</span>17<span class=\"tag\">&lt;/<span class=\"name\">maven.compiler.target</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">project.build.sourceEncoding</span>&gt;</span>UTF-8<span class=\"tag\">&lt;/<span class=\"name\">project.build.sourceEncoding</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">properties</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">dependencies</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework.boot<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-boot-starter<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"comment\">&lt;!-- 测试环境 --&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework.boot<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-boot-starter-test<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"comment\">&lt;!-- mybatis-plus  --&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>com.baomidou<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>mybatis-plus-boot-starter<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>3.5.3.1<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">&lt;!-- 数据库相关配置启动器 --&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework.boot<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-boot-starter-jdbc<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">&lt;!-- druid启动器的依赖  --&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>com.alibaba<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>druid-spring-boot-3-starter<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>1.2.18<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">&lt;!-- 驱动类--&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>mysql<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>mysql-connector-java<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>8.0.28<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.projectlombok<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>lombok<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>1.18.28<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">dependencies</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--    SpringBoot应用打包插件--&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">build</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">plugins</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">plugin</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework.boot<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-boot-maven-plugin<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">plugin</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">plugins</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">build</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">project</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>3、配置文件  </p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 连接池配置</span></span><br><span class=\"line\"><span class=\"attr\">spring:</span></span><br><span class=\"line\">  <span class=\"attr\">datasource:</span></span><br><span class=\"line\">    <span class=\"attr\">type:</span> <span class=\"string\">com.alibaba.druid.pool.DruidDataSource</span></span><br><span class=\"line\">    <span class=\"attr\">druid:</span></span><br><span class=\"line\">      <span class=\"attr\">url:</span> <span class=\"string\">jdbc:mysql:///day01</span></span><br><span class=\"line\">      <span class=\"attr\">username:</span> <span class=\"string\">root</span></span><br><span class=\"line\">      <span class=\"attr\">password:</span> <span class=\"string\">root</span></span><br><span class=\"line\">      <span class=\"attr\">driver-class-name:</span> <span class=\"string\">com.mysql.cj.jdbc.Driver</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>因为<code>Druid 1.2.18</code>版本对于springboot3不兼容，还需要进行兼容设置（<code>1.2.20</code>以上版本已经兼容了，不需要进行下面的兼容设置）：<br>（1）在<code>resources</code>资源目录下创建<code>META-INF.spring</code>文件夹，注意：<code>META-INF</code>和<code>spring</code>都是文件夹！<br>（2）在<code>META-INF.spring</code>文件夹下创建<code>org.springframework.boot.autoconfigure.AutoConfiguration.imports</code>文件（注意：这里全部都是文件名！）<br>（3）文件内容为：<code>com.alibaba.druid.spring.boot3.autoconfigure.DruidDataSourceAutoConfigure</code>。<br>4、启动类  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@MapperScan(&quot;xxx.xxx.mapper&quot;)</span></span><br><span class=\"line\"><span class=\"meta\">@SpringBootApplication</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">MainApplication</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        SpringApplication.run(MainApplication.class,args);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>5、Java实体类  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Data</span> <span class=\"comment\">// 此处使用了Lombok简化代码</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">User</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> Long id;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> String name;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> Integer age;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> String email;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>6、Mapper接口  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 继承mybatis-plus提供的基础Mapper接口，自带crud方法！</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">interface</span> <span class=\"title class_\">UserMapper</span> <span class=\"keyword\">extends</span> <span class=\"title class_\">BaseMapper</span>&lt;User&gt; &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>7、测试  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@SpringBootTest</span> <span class=\"comment\">//springboot下测试环境注解</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">SampleTest</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Autowired</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> UserMapper userMapper;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Test</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">testSelect</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        System.out.println((<span class=\"string\">&quot;----- selectAll method test ------&quot;</span>));</span><br><span class=\"line\">        List&lt;User&gt; userList = userMapper.selectList(<span class=\"literal\">null</span>);</span><br><span class=\"line\">        userList.forEach(System.out::println);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<br/>\n\n\n<hr>\n<br/>\n\n\n\n<h1 id=\"二、快速入门二\"><a href=\"#二、快速入门二\" class=\"headerlink\" title=\"二、快速入门二\"></a>二、快速入门二</h1><p>1、使用可视化工具创建数据库时：<br>（1）字符集：<code>utf8mb4</code>；<br>（2）排序规则：<code>utf8mb4_general_ci</code>。<br>建议大家选择utf8mb4这种字符集，做过微信的同学应该会知道，微信用户名称的表情，是需要这种字符集才能存储的。  </p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">CREATE</span> <span class=\"keyword\">TABLE</span> <span class=\"keyword\">user</span> (</span><br><span class=\"line\">  id <span class=\"type\">int</span>(<span class=\"number\">11</span>) <span class=\"keyword\">NOT</span> <span class=\"keyword\">NULL</span> AUTO_INCREMENT,</span><br><span class=\"line\">  nickname <span class=\"type\">varchar</span>(<span class=\"number\">255</span>) <span class=\"keyword\">NOT</span> <span class=\"keyword\">NULL</span> COMMENT <span class=\"string\">&#x27;昵称&#x27;</span>,</span><br><span class=\"line\">  sex tinyint(<span class=\"number\">1</span>) <span class=\"keyword\">NOT</span> <span class=\"keyword\">NULL</span> COMMENT <span class=\"string\">&#x27;性别，1男2女&#x27;</span>,</span><br><span class=\"line\">  create_time datetime <span class=\"keyword\">NOT</span> <span class=\"keyword\">NULL</span> COMMENT <span class=\"string\">&#x27;创建时间&#x27;</span>,</span><br><span class=\"line\">  is_delete tinyint(<span class=\"number\">1</span>) <span class=\"keyword\">NOT</span> <span class=\"keyword\">NULL</span> <span class=\"keyword\">DEFAULT</span> <span class=\"string\">&#x27;0&#x27;</span> COMMENT <span class=\"string\">&#x27;是否删除 1是，0否&#x27;</span>,</span><br><span class=\"line\">  <span class=\"keyword\">PRIMARY</span> KEY (id)</span><br><span class=\"line\">) ENGINE<span class=\"operator\">=</span>InnoDB AUTO_INCREMENT<span class=\"operator\">=</span><span class=\"number\">50</span> <span class=\"keyword\">DEFAULT</span> CHARSET<span class=\"operator\">=</span>utf8mb4;</span><br></pre></td></tr></table></figure>\n\n<p>2、引入依赖  </p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- mybatis-plus依赖 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>com.baomidou<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>mybatis-plus-boot-starter<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>3.5.0<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- mysql依赖 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>mysql<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>mysql-connector-java<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>8.0.27<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- 多数项目会有多数据源的要求，或者是主从部署的要求，所以我们还需要引入mybatis-plus关于多数据源的依赖 --&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- mybatis-plus 多数据源 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>com.baomidou<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>dynamic-datasource-spring-boot-starter<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>3.5.0<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>3、创建启动类  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 配置<span class=\"doctag\">@MapperScan</span>注解，用于扫描Mapper文件位置</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"meta\">@MapperScan(&quot;com.wjbgn.user.mapper&quot;)</span></span><br><span class=\"line\"><span class=\"meta\">@SpringBootApplication</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">RobNecessitiesUserApplication</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        SpringApplication.run(RobNecessitiesUserApplication.class, args);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>4、配置文件  </p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">spring:</span></span><br><span class=\"line\">  <span class=\"attr\">datasource:</span></span><br><span class=\"line\">    <span class=\"attr\">dynamic:</span></span><br><span class=\"line\">      <span class=\"attr\">primary:</span> <span class=\"string\">master设置默认的数据源或者数据源组,默认值即为master</span></span><br><span class=\"line\">      <span class=\"attr\">strict:</span> <span class=\"literal\">false</span><span class=\"string\">严格匹配数据源,默认false.</span> <span class=\"literal\">true</span><span class=\"string\">未匹配到指定数据源时抛异常,false使用默认数据源</span></span><br><span class=\"line\">      <span class=\"attr\">datasource:</span></span><br><span class=\"line\">        <span class=\"attr\">master:</span></span><br><span class=\"line\">          <span class=\"attr\">url:</span> <span class=\"string\">jdbc:mysql://127.0.0.1:3306/rob_necessities?useUnicode=true&amp;characterEncoding=utf-8&amp;useSSL=false&amp;serverTimezone</span> <span class=\"string\">=Asia/Shanghai</span></span><br><span class=\"line\">          <span class=\"attr\">username:</span> <span class=\"string\">root</span></span><br><span class=\"line\">          <span class=\"attr\">password:</span> <span class=\"number\">123456</span></span><br><span class=\"line\">        <span class=\"attr\">slave_1:</span></span><br><span class=\"line\">          <span class=\"attr\">url:</span> <span class=\"string\">jdbc:mysql://127.0.0.1:3306/rob_necessities?useUnicode=true&amp;characterEncoding=utf-8&amp;useSSL=false&amp;serverTimezone</span> <span class=\"string\">=Asia/Shanghai</span></span><br><span class=\"line\">          <span class=\"attr\">username:</span> <span class=\"string\">root</span></span><br><span class=\"line\">          <span class=\"attr\">password:</span> <span class=\"number\">123456</span></span><br></pre></td></tr></table></figure>\n<p>补充：这里面因为默认使用的是HikariCP数据源,目前也推荐使用这个，相比于druid有更高的性能，但是不能忽略下面的配置，否则服务会不断抛出异常，原因是数据库的连接时常和连接池的配置没有做好。  </p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">spring:</span></span><br><span class=\"line\">  <span class=\"attr\">datasource:</span></span><br><span class=\"line\">    <span class=\"attr\">dynamic:</span></span><br><span class=\"line\">      <span class=\"attr\">hikari:</span></span><br><span class=\"line\">        <span class=\"attr\">max-lifetime:</span> <span class=\"number\">1800000</span></span><br><span class=\"line\">        <span class=\"attr\">connection-timeout:</span> <span class=\"number\">5000</span></span><br><span class=\"line\">        <span class=\"attr\">idle-timeout:</span> <span class=\"number\">3600000</span></span><br><span class=\"line\">        <span class=\"attr\">max-pool-size:</span> <span class=\"number\">12</span></span><br><span class=\"line\">        <span class=\"attr\">min-idle:</span> <span class=\"number\">4</span></span><br><span class=\"line\">        <span class=\"attr\">connection-test-query:</span> <span class=\"string\">/**ping*/</span></span><br></pre></td></tr></table></figure>\n\n<p>5、实体类  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@TableName(value = &quot;user&quot;)</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">UserDO</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 主键</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"meta\">@TableId(value = &quot;id&quot;, type = IdType.AUTO)</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> Long id;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 昵称</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"meta\">@TableField(&quot;nickname&quot;)</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> String nickname;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 真实姓名</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> String realName;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>（1）@TableName：表名注解，用于标识实体类对应的表：  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@TableName</span>源码</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"meta\">@Documented</span></span><br><span class=\"line\"><span class=\"meta\">@Retention(RetentionPolicy.RUNTIME)</span></span><br><span class=\"line\"><span class=\"meta\">@Target(&#123;ElementType.TYPE, ElementType.ANNOTATION_TYPE&#125;)</span></span><br><span class=\"line\"><span class=\"keyword\">public</span><span class=\"meta\">@interface</span> TableName &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 实体对应的表名</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    String <span class=\"title function_\">value</span><span class=\"params\">()</span> <span class=\"keyword\">default</span> <span class=\"string\">&quot;&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * schema</span></span><br><span class=\"line\"><span class=\"comment\">     *</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@since</span> 3.1.1</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    String <span class=\"title function_\">schema</span><span class=\"params\">()</span> <span class=\"keyword\">default</span> <span class=\"string\">&quot;&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 是否保持使用全局的 tablePrefix 的值</span></span><br><span class=\"line\"><span class=\"comment\">     * &lt;p&gt; 只生效于 既设置了全局的 tablePrefix 也设置了上面 &#123;<span class=\"doctag\">@linkvalue</span>()&#125; 的值 &lt;/p&gt;</span></span><br><span class=\"line\"><span class=\"comment\">     * &lt;li&gt; 如果是 false , 全局的 tablePrefix 不生效 &lt;/li&gt;</span></span><br><span class=\"line\"><span class=\"comment\">     *</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@since</span> 3.1.1</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"type\">boolean</span> <span class=\"title function_\">keepGlobalPrefix</span><span class=\"params\">()</span> <span class=\"keyword\">default</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 实体映射结果集,</span></span><br><span class=\"line\"><span class=\"comment\">     * 只生效与 mp 自动注入的 method</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    String <span class=\"title function_\">resultMap</span><span class=\"params\">()</span> <span class=\"keyword\">default</span> <span class=\"string\">&quot;&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 是否自动构建 resultMap 并使用,</span></span><br><span class=\"line\"><span class=\"comment\">     * 只生效与 mp 自动注入的 method,</span></span><br><span class=\"line\"><span class=\"comment\">     * 如果设置 resultMap 则不会进行 resultMap 的自动构建并注入,</span></span><br><span class=\"line\"><span class=\"comment\">     * 只适合个别字段 设置了 typeHandler 或 jdbcType 的情况</span></span><br><span class=\"line\"><span class=\"comment\">     *</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@since</span> 3.1.2</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"type\">boolean</span> <span class=\"title function_\">autoResultMap</span><span class=\"params\">()</span> <span class=\"keyword\">default</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 需要排除的属性名</span></span><br><span class=\"line\"><span class=\"comment\">     *</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@since</span> 3.3.1</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    String[] excludeProperty() <span class=\"keyword\">default</span> &#123;&#125;;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>（2）@TableId：主键注解  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@TableId</span>源码</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"meta\">@Documented</span></span><br><span class=\"line\"><span class=\"meta\">@Retention(RetentionPolicy.RUNTIME)</span></span><br><span class=\"line\"><span class=\"meta\">@Target(&#123;ElementType.FIELD, ElementType.ANNOTATION_TYPE&#125;)</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"meta\">@interface</span> TableId &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 字段值（驼峰命名方式，该值可无）</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    String <span class=\"title function_\">value</span><span class=\"params\">()</span> <span class=\"keyword\">default</span> <span class=\"string\">&quot;&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 主键ID</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    IdType <span class=\"title function_\">type</span><span class=\"params\">()</span> <span class=\"keyword\">default</span> IdType.NONE;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>（3）@TableFiled：表字段标识  </p>\n<p>6、service层  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">interface</span> <span class=\"title class_\">IUserService</span> <span class=\"keyword\">extends</span> <span class=\"title class_\">IService</span>&lt;UserDO&gt; &#123;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@Service</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">UserServiceImpl</span> <span class=\"keyword\">extends</span> <span class=\"title class_\">ServiceImpl</span>&lt;UserMapper, UserDO&gt; <span class=\"keyword\">implements</span> <span class=\"title class_\">IUserService</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>7、mapper层  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Mapper</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">interface</span> <span class=\"title class_\">UserMapper</span> <span class=\"keyword\">extends</span> <span class=\"title class_\">BaseMapper</span>&lt;UserDO&gt; &#123;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>8、分页<br>使用分页话需要增加分页插件的配置：  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Configuration</span></span><br><span class=\"line\"><span class=\"meta\">@MapperScan(&quot;com.wjbgn.*.mapper*&quot;)</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">MybatisPlusConfig</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Bean</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> MybatisPlusInterceptor <span class=\"title function_\">mybatisPlusInterceptor</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"type\">MybatisPlusInterceptor</span> <span class=\"variable\">interceptor</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">MybatisPlusInterceptor</span>();</span><br><span class=\"line\">        interceptor.addInnerInterceptor(<span class=\"keyword\">new</span> <span class=\"title class_\">PaginationInnerInterceptor</span>(DbType.MYSQL));</span><br><span class=\"line\">        <span class=\"keyword\">return</span> interceptor;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>如上配置后，我们直接使用分页方法就行。  </p>\n<p>9、逻辑删除配置<br>很多情况下我们的系统都需要逻辑删除，方便恢复查找误删除的数据。<br>通过mybatis-plus可以通过全局配置的方式，而不需要再去手动处理。针对更新和查询操作有效，新增不做限制。<br>通常以我的习惯逻辑删除字段通常定义为is_delete,在实体类当中就是isDelete。那么在配置文件中就可以有如下的配置：  </p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mybatis-plus:</span><br><span class=\"line\">  global-config:</span><br><span class=\"line\">    db-config:</span><br><span class=\"line\">      logic-delete-field: isDelete 全局逻辑删除的实体字段名(since 3.3.0,配置后可以忽略不配置步骤2)</span><br><span class=\"line\">      logic-delete-value: 1 逻辑已删除值(默认为 1)</span><br><span class=\"line\">      logic-not-delete-value: 0 逻辑未删除值(默认为 0)</span><br></pre></td></tr></table></figure>\n<p>或者通过注解@TableLogic：  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@TableLogic</span></span><br><span class=\"line\"><span class=\"keyword\">private</span> Integer isDelete;</span><br></pre></td></tr></table></figure>\n\n<p>10、设置枚举类配置<br>相信后端的同学都经历过一个情况，比如性别这个字段，分别值和名称对应1男、2女,这个字段在数据库时是数值类型，而前端展示则是展示字符串的名称。有几种常见实现方案呢？<br>（1）数据库查询sql通过case判断，返回名称，以前oracle经常这么做；<br>（2）数据库返回的值，重新遍历赋值进去，这时候还需要判断这个值到底是男是女；<br>（3）前端写死，返回1就是男，返回2就是女。<br>相信无论哪种方法都有其缺点，所以我们可以使用mybatis-plus提供的方式。我们在返回给前端时：<br>（1）只需要在遍历时get这个枚举，直接赋值其名称，不需要再次判断；<br>（2）直接返回给前端，让前端去去枚举的name。<br>这样大家都不需要写死这个值。<br>实现步骤：<br>（1）创建枚举类，实现IEnum接口：  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@description</span>： 性别枚举</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@JsonFormat</span>注解为了解决枚举类返回前端只展示构造器名称的问题。</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"meta\">@JsonFormat(shape = JsonFormat.Shape.OBJECT)</span></span><br><span class=\"line\">publicenum SexEnum <span class=\"keyword\">implements</span> <span class=\"title class_\">IEnum</span>&lt;Integer&gt; &#123;</span><br><span class=\"line\">    MAN(<span class=\"number\">1</span>, <span class=\"string\">&quot;男&quot;</span>),</span><br><span class=\"line\">    WOMAN(<span class=\"number\">2</span>, <span class=\"string\">&quot;女&quot;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">private</span> Integer code;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> String name;</span><br><span class=\"line\"></span><br><span class=\"line\">    SexEnum(Integer code, String name) &#123;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.code = code;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.name = name;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> Integer <span class=\"title function_\">getValue</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> code;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> String <span class=\"title function_\">getName</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> name;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>（2）实体类性别字段  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@TableField(value = &quot;sex&quot;)</span></span><br><span class=\"line\"><span class=\"meta\">@JSONField(serialzeFeatures= SerializerFeature.WriteEnumUsingToString)</span></span><br><span class=\"line\"><span class=\"keyword\">private</span> SexEnum sex;</span><br></pre></td></tr></table></figure>\n<p>（3）配置文件扫描枚举  </p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">mybatis-plus:</span></span><br><span class=\"line\">  <span class=\"comment\"># 支持统配符 * 或者 ; 分割</span></span><br><span class=\"line\">  <span class=\"attr\">typeEnumsPackage:</span> <span class=\"string\">com.wjbgn.*.enums</span></span><br></pre></td></tr></table></figure>\n<p>（4）配置类  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> <span class=\"meta\">@Bean</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> MybatisPlusPropertiesCustomizer <span class=\"title function_\">mybatisPlusPropertiesCustomizer</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">     <span class=\"comment\">// 序列化枚举值为数据库存储值</span></span><br><span class=\"line\">     <span class=\"type\">FastJsonConfig</span> <span class=\"variable\">config</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">FastJsonConfig</span>();</span><br><span class=\"line\">     config.setSerializerFeatures(SerializerFeature.WriteEnumUsingToString);</span><br><span class=\"line\"></span><br><span class=\"line\">     <span class=\"keyword\">return</span> properties -&gt; &#123;</span><br><span class=\"line\">         <span class=\"type\">GlobalConfig</span> <span class=\"variable\">globalConfig</span> <span class=\"operator\">=</span> properties.getGlobalConfig();</span><br><span class=\"line\">         globalConfig.setBanner(<span class=\"literal\">false</span>);</span><br><span class=\"line\">         <span class=\"type\">MybatisConfiguration</span> <span class=\"variable\">configuration</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">MybatisConfiguration</span>();</span><br><span class=\"line\">         configuration.setDefaultEnumTypeHandler(MybatisEnumTypeHandler.class);</span><br><span class=\"line\">         properties.setConfiguration(configuration);</span><br><span class=\"line\">     &#125;;</span><br><span class=\"line\"> &#125;</span><br></pre></td></tr></table></figure>\n\n<p>11、自动填充<br>还记得前面提到的实体类当中的注解@TableFeild吗？当中有个属性叫做fill，通过FieldFill设置属性，这个就是做自动填充用的。  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">enum</span> <span class=\"title class_\">FieldFill</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 默认不处理</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    DEFAULT,</span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 插入填充字段</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    INSERT,</span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 更新填充字段</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    UPDATE,</span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 插入和更新填充字段</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    INSERT_UPDATE</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>但是这个直接是不能使用的，需要通过实现mybatis-plus提供的接口，增加如下配置：  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * description: 启动自动填充功能</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span>:</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"meta\">@Component</span></span><br><span class=\"line\">publicclass MyMetaObjectHandler <span class=\"keyword\">implements</span> <span class=\"title class_\">MetaObjectHandler</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">insertFill</span><span class=\"params\">(MetaObject metaObject)</span> &#123;</span><br><span class=\"line\">        <span class=\"comment\">// 起始版本 3.3.0(推荐使用)</span></span><br><span class=\"line\">        <span class=\"built_in\">this</span>.strictInsertFill(metaObject, <span class=\"string\">&quot;createTime&quot;</span>, LocalDateTime.class, LocalDateTime.now());</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">updateFill</span><span class=\"params\">(MetaObject metaObject)</span> &#123;</span><br><span class=\"line\">        <span class=\"comment\">// 起始版本 3.3.0(推荐)</span></span><br><span class=\"line\">        <span class=\"built_in\">this</span>.strictUpdateFill(metaObject, <span class=\"string\">&quot;updateTime&quot;</span>, LocalDateTime.class, LocalDateTime.now());</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>使用示例：  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@TableField(value = &quot;create_time&quot;,fill = FieldFill.INSERT)</span></span><br><span class=\"line\"><span class=\"keyword\">private</span> LocalDateTime createTime;</span><br></pre></td></tr></table></figure>\n\n<p>12、多数据源<br>（1）多主多从  </p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">spring:</span></span><br><span class=\"line\">  <span class=\"attr\">datasource:</span></span><br><span class=\"line\">    <span class=\"attr\">dynamic:</span></span><br><span class=\"line\">      <span class=\"attr\">primary:</span> <span class=\"string\">master设置默认的数据源或者数据源组,默认值即为master</span></span><br><span class=\"line\">      <span class=\"attr\">strict:</span> <span class=\"literal\">false</span><span class=\"string\">严格匹配数据源,默认false.</span> <span class=\"literal\">true</span><span class=\"string\">未匹配到指定数据源时抛异常,false使用默认数据源</span></span><br><span class=\"line\">      <span class=\"attr\">datasource:</span></span><br><span class=\"line\">        <span class=\"attr\">master_1:</span></span><br><span class=\"line\">        <span class=\"attr\">master_2:</span></span><br><span class=\"line\">        <span class=\"attr\">slave_1:</span></span><br><span class=\"line\">        <span class=\"attr\">slave_2:</span></span><br><span class=\"line\">        <span class=\"attr\">slave_3:</span></span><br></pre></td></tr></table></figure>\n<p>（2）多种数据库  </p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">spring:</span></span><br><span class=\"line\">  <span class=\"attr\">datasource:</span></span><br><span class=\"line\">    <span class=\"attr\">dynamic:</span></span><br><span class=\"line\">      <span class=\"attr\">primary:</span> <span class=\"string\">mysql设置默认的数据源或者数据源组,默认值即为master</span></span><br><span class=\"line\">      <span class=\"attr\">strict:</span> <span class=\"literal\">false</span><span class=\"string\">严格匹配数据源,默认false.</span> <span class=\"literal\">true</span><span class=\"string\">未匹配到指定数据源时抛异常,false使用默认数据源</span></span><br><span class=\"line\">      <span class=\"attr\">datasource:</span></span><br><span class=\"line\">        <span class=\"attr\">mysql:</span></span><br><span class=\"line\">        <span class=\"attr\">oracle:</span></span><br><span class=\"line\">        <span class=\"attr\">postgresql:</span></span><br><span class=\"line\">        <span class=\"attr\">h2:</span></span><br><span class=\"line\">        <span class=\"attr\">sqlserver:</span></span><br></pre></td></tr></table></figure>\n<p>（3）混合配置  </p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">spring:</span></span><br><span class=\"line\">  <span class=\"attr\">datasource:</span></span><br><span class=\"line\">    <span class=\"attr\">dynamic:</span></span><br><span class=\"line\">      <span class=\"attr\">primary:</span> <span class=\"string\">master设置默认的数据源或者数据源组,默认值即为master</span></span><br><span class=\"line\">      <span class=\"attr\">strict:</span> <span class=\"literal\">false</span><span class=\"string\">严格匹配数据源,默认false.</span> <span class=\"literal\">true</span><span class=\"string\">未匹配到指定数据源时抛异常,false使用默认数据源</span></span><br><span class=\"line\">      <span class=\"attr\">datasource:</span></span><br><span class=\"line\">        <span class=\"attr\">master_1:</span></span><br><span class=\"line\">        <span class=\"attr\">slave_1:</span></span><br><span class=\"line\">        <span class=\"attr\">slave_2:</span></span><br><span class=\"line\">        <span class=\"attr\">oracle_1:</span></span><br><span class=\"line\">        <span class=\"attr\">oracle_2:</span></span><br></pre></td></tr></table></figure>\n<p>（4）@DS注解<br>可以注解在方法上或类上，同时存在就近原则【方法上注解】优先于【类上注解】：  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@DS(&quot;slave_1&quot;)</span></span><br><span class=\"line\">publicclass UserServiceImpl <span class=\"keyword\">extends</span> <span class=\"title class_\">ServiceImpl</span>&lt;UserMapper, UserDO&gt; <span class=\"keyword\">implements</span> <span class=\"title class_\">IUserService</span> &#123;</span><br><span class=\"line\">    <span class=\"meta\">@DS(&quot;salve_1&quot;)</span></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> List&lt;UserDO&gt; <span class=\"title function_\">getList</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        returnthis.getList();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@DS(&quot;master&quot;)</span></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"type\">int</span> <span class=\"title function_\">saveUser</span><span class=\"params\">(UserDO userDO)</span> &#123;</span><br><span class=\"line\">        <span class=\"type\">boolean</span> <span class=\"variable\">save</span> <span class=\"operator\">=</span> <span class=\"built_in\">this</span>.save(userDO);</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (save)&#123;</span><br><span class=\"line\">            return1;</span><br><span class=\"line\">        &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">            return0;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>13、controller层  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@RestController</span></span><br><span class=\"line\"><span class=\"meta\">@RequestMapping(&quot;/user&quot;)</span></span><br><span class=\"line\">publicclass UserController &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Autowired</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> IUserService userService;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * description: 新增</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span>: boolean</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@author</span>: weirx</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@time</span>: 2022/1/17 19:11</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"meta\">@RequestMapping(&quot;/save&quot;)</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"type\">boolean</span> <span class=\"title function_\">save</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"type\">UserDO</span> <span class=\"variable\">userDO</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">UserDO</span>();</span><br><span class=\"line\">        userDO.setNickname(<span class=\"string\">&quot;大漂亮&quot;</span>);</span><br><span class=\"line\">        userDO.setSex(SexEnum.MAN);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">return</span> userService.save(userDO);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * description: 修改</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> nickname</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> id</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span>: boolean</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@author</span>: weirx</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@time</span>: 2022/1/17 19:11</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"meta\">@RequestMapping(&quot;/update&quot;)</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"type\">boolean</span> <span class=\"title function_\">update</span><span class=\"params\">(<span class=\"meta\">@RequestParam</span> String nickname,<span class=\"meta\">@RequestParam</span> Long id)</span> &#123;</span><br><span class=\"line\">        <span class=\"type\">UserDO</span> <span class=\"variable\">userDO</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">UserDO</span>();</span><br><span class=\"line\">        userDO.setNickname(nickname);</span><br><span class=\"line\">        userDO.setId(id);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> userService.updateById(userDO);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * description: 删除</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> id</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span>: boolean</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@author</span>: weirx</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@time</span>: 2022/1/17 19:11</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"meta\">@RequestMapping(&quot;/delete&quot;)</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"type\">boolean</span> <span class=\"title function_\">delete</span><span class=\"params\">(<span class=\"meta\">@RequestParam</span> Long id)</span> &#123;</span><br><span class=\"line\">        <span class=\"type\">UserDO</span> <span class=\"variable\">userDO</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">UserDO</span>();</span><br><span class=\"line\">        userDO.setId(id);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> userService.removeById(userDO);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * description: 列表</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span>: java.util.List&lt;com.wjbgn.user.entity.UserDO&gt;</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@author</span>: weirx</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@time</span>: 2022/1/17 19:11</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"meta\">@RequestMapping(&quot;/list&quot;)</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> List&lt;UserDO&gt; <span class=\"title function_\">list</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> userService.list();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * description: 分页列表</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> current</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> size</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span>: com.baomidou.mybatisplus.extension.plugins.pagination.Page</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@author</span>: weirx</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@time</span>: 2022/1/17 19:11</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"meta\">@RequestMapping(&quot;/page&quot;)</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> Page <span class=\"title function_\">page</span><span class=\"params\">(<span class=\"meta\">@RequestParam</span> <span class=\"type\">int</span> current,<span class=\"meta\">@RequestParam</span> <span class=\"type\">int</span> size)</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> userService.page(<span class=\"keyword\">new</span> <span class=\"title class_\">Page</span>&lt;&gt;(current,size), <span class=\"keyword\">new</span> <span class=\"title class_\">QueryWrapper</span>(<span class=\"keyword\">new</span> <span class=\"title class_\">UserDO</span>()));</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n\n<br/>\n\n\n<hr>\n<br/>\n\n\n\n\n\n<h1 id=\"三、基础知识与操作\"><a href=\"#三、基础知识与操作\" class=\"headerlink\" title=\"三、基础知识与操作\"></a>三、基础知识与操作</h1><h3 id=\"1、MybatisPlus需要的依赖\"><a href=\"#1、MybatisPlus需要的依赖\" class=\"headerlink\" title=\"1、MybatisPlus需要的依赖\"></a>1、MybatisPlus需要的依赖</h3><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- mysql连接驱动 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>mysql<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>mysql-connector-java<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>8.0.27<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>com.baomidou<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>mybatis-plus-boot-starter<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>3.4.3.1<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- 代码生成器依赖 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>com.baomidou<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>mybatis-plus-generator<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>3.4.0<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<br/>\n\n<h3 id=\"2、各种配置及日志输出\"><a href=\"#2、各种配置及日志输出\" class=\"headerlink\" title=\"2、各种配置及日志输出\"></a>2、各种配置及日志输出</h3><p>1、日志  </p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 这个默认的日志，输出到控制台，其它的需要导入依赖</span></span><br><span class=\"line\"><span class=\"string\">mybatis-plus.configuration.log-impl=org.apache.ibatis.logging.stdout.StdOutImpl</span></span><br></pre></td></tr></table></figure>\n<p>2、配置mapper.xml文件的位置<br>（1）配置  </p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">mybatis-plus:</span> <span class=\"comment\"># mybatis-plus的配置</span></span><br><span class=\"line\">  <span class=\"comment\"># 默认位置 private String[] mapperLocations = new String[]&#123;&quot;classpath*:/mapper/**/*.xml&quot;&#125;;    </span></span><br><span class=\"line\">  <span class=\"attr\">mapper-locations:</span> <span class=\"string\">classpath:/mapper/*.xml</span></span><br></pre></td></tr></table></figure>\n<p>（2）自定义mapper方法：  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">interface</span> <span class=\"title class_\">UserMapper</span> <span class=\"keyword\">extends</span> <span class=\"title class_\">BaseMapper</span>&lt;User&gt; &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//正常自定义方法！</span></span><br><span class=\"line\">    <span class=\"comment\">//可以使用注解@Select或者mapper.xml实现</span></span><br><span class=\"line\">    List&lt;User&gt; <span class=\"title function_\">queryAll</span><span class=\"params\">()</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>（3）基于mapper.xml实现：  </p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?xml version=<span class=\"string\">&quot;1.0&quot;</span> encoding=<span class=\"string\">&quot;UTF-8&quot;</span> ?&gt;</span></span><br><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"keyword\">mapper</span></span></span><br><span class=\"line\"><span class=\"meta\">        <span class=\"keyword\">PUBLIC</span> <span class=\"string\">&quot;-//mybatis.org//DTD Mapper 3.0//EN&quot;</span></span></span><br><span class=\"line\"><span class=\"meta\">        <span class=\"string\">&quot;https://mybatis.org/dtd/mybatis-3-mapper.dtd&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- namespace = 接口的全限定符 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">mapper</span> <span class=\"attr\">namespace</span>=<span class=\"string\">&quot;com.atguigu.mapper.UserMapper&quot;</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"tag\">&lt;<span class=\"name\">select</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;queryAll&quot;</span> <span class=\"attr\">resultType</span>=<span class=\"string\">&quot;user&quot;</span> &gt;</span></span><br><span class=\"line\">       select * from user</span><br><span class=\"line\">   <span class=\"tag\">&lt;/<span class=\"name\">select</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>3、配置实体类映射数据库表名前缀以及主键策略  </p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">mybatis-plus:</span></span><br><span class=\"line\">  <span class=\"attr\">configuration:</span></span><br><span class=\"line\">    <span class=\"comment\"># 配置MyBatis日志</span></span><br><span class=\"line\">    <span class=\"attr\">log-impl:</span> <span class=\"string\">org.apache.ibatis.logging.stdout.StdOutImpl</span></span><br><span class=\"line\">  <span class=\"attr\">global-config:</span></span><br><span class=\"line\">    <span class=\"attr\">db-config:</span></span><br><span class=\"line\">      <span class=\"comment\"># 配置MyBatis-Plus操作表的默认前缀</span></span><br><span class=\"line\">      <span class=\"attr\">table-prefix:</span> <span class=\"string\">t_</span></span><br><span class=\"line\">      <span class=\"comment\"># 配置MyBatis-Plus的主键策略</span></span><br><span class=\"line\">      <span class=\"attr\">id-type:</span> <span class=\"string\">auto</span></span><br></pre></td></tr></table></figure>\n<p>4、全局配置逻辑删除  </p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">mybatis-plus:</span></span><br><span class=\"line\">  <span class=\"attr\">global-config:</span></span><br><span class=\"line\">    <span class=\"attr\">db-config:</span></span><br><span class=\"line\">      <span class=\"attr\">logic-delete-field:</span> <span class=\"string\">deleted</span> <span class=\"comment\"># 全局逻辑删除的实体字段名(since 3.3.0,这里配置后可以不去实体类中配置@TableLogic)</span></span><br><span class=\"line\">      <span class=\"attr\">logic-delete-value:</span> <span class=\"number\">1</span> <span class=\"comment\"># 逻辑已删除值(默认为 1)</span></span><br><span class=\"line\">      <span class=\"attr\">logic-not-delete-value:</span> <span class=\"number\">0</span> <span class=\"comment\"># 逻辑未删除值(默认为 0)</span></span><br></pre></td></tr></table></figure>\n\n<br/>\n\n<h3 id=\"3、实体类中主键以及其他属性配置\"><a href=\"#3、实体类中主键以及其他属性配置\" class=\"headerlink\" title=\"3、实体类中主键以及其他属性配置\"></a>3、实体类中主键以及其他属性配置</h3><p>1、主键  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/** type的值：</span></span><br><span class=\"line\"><span class=\"comment\">  * ID_WORKER： 全局唯一id，默认方式</span></span><br><span class=\"line\"><span class=\"comment\">  * AUTO： 自增，设置了这个之后，数据库里也一定要设置自增才会生效，不然会报错</span></span><br><span class=\"line\"><span class=\"comment\">  * NONE：  未设置主键</span></span><br><span class=\"line\"><span class=\"comment\">  * INPUT：  手动输入</span></span><br><span class=\"line\"><span class=\"comment\">  * UUID：  全局唯一id，uuid</span></span><br><span class=\"line\"><span class=\"comment\">  * ID_WORKER_STR：  ID_WORKER字符串标识法</span></span><br><span class=\"line\"><span class=\"comment\">  * ASSIGN_ID：分配 D(主键类型为 Number(Long )或 String)(since 3.3.0),使用接口IdentifierGenerator的方法nextId(默认实现类为DefaultIdentifierGenerator雪花算法)</span></span><br><span class=\"line\"><span class=\"comment\">**/</span></span><br><span class=\"line\">   <span class=\"meta\">@TableId(value = &quot;id&quot;, type = IdType.INPUT)</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> String id;</span><br></pre></td></tr></table></figure>\n<p>雪花算法使用场景<br>雪花算法（Snowflake Algorithm）是一种用于生成唯一ID的算法。它由Twitter公司提出，用于解决分布式系统中生成全局唯一ID的需求。<br>在传统的自增ID生成方式中，使用单点数据库生成ID会成为系统的瓶颈，而雪花算法通过在分布式系统中生成唯一ID，避免了单点故障和性能瓶颈的问题。<br>雪花算法生成的ID是一个64位的整数，由以下几个部分组成：<br>（1）时间戳：41位，精确到毫秒级，可以使用69年。<br>（2）节点ID：10位，用于标识分布式系统中的不同节点。<br>（3）序列号：12位，表示在同一毫秒内生成的不同ID的序号。<br>通过将这三个部分组合在一起，雪花算法可以在分布式系统中生成全局唯一的ID，并保证ID的生成顺序性。<br>雪花算法的工作方式如下：<br>（1）当前时间戳从某一固定的起始时间开始计算，可以用于计算ID的时间部分。<br>（2）节点ID是分布式系统中每个节点的唯一标识，可以通过配置或自动分配的方式获得。<br>（3）序列号用于记录在同一毫秒内生成的不同ID的序号，从0开始自增，最多支持4096个ID生成。<br>需要注意的是，雪花算法依赖于系统的时钟，需要确保系统时钟的准确性和单调性，否则可能会导致生成的ID不唯一或不符合预期的顺序。<br>雪花算法是一种简单但有效的生成唯一ID的算法，广泛应用于分布式系统中，如微服务架构、分布式数据库、分布式锁等场景，以满足全局唯一标识的需求。<br> <strong>你需要记住的: 雪花算法生成的数字,需要使用Long 或者 String类型主键!!</strong>  </p>\n<p>2、其他属性  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 使用场景：</span></span><br><span class=\"line\"><span class=\"comment\"> * 1、成员变量名与数据库字段名不一致</span></span><br><span class=\"line\"><span class=\"comment\"> * 2、成员变量名以is开头，且是布尔值</span></span><br><span class=\"line\"><span class=\"comment\"> * 3、成员变量名与数据库关键字冲突</span></span><br><span class=\"line\"><span class=\"comment\"> * 4、成员变量不是数据库字段</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"comment\">// 成员变量名与数据库字段名不一致</span></span><br><span class=\"line\"><span class=\"meta\">@TableField(value = &quot;name&quot;)</span></span><br><span class=\"line\"><span class=\"keyword\">private</span> String username;</span><br><span class=\"line\"><span class=\"comment\">// 成员变量名以is开头，且是布尔值</span></span><br><span class=\"line\"><span class=\"meta\">@TableField(value = &quot;is_flag&quot;)</span></span><br><span class=\"line\"><span class=\"keyword\">private</span> Boolean isFlag;</span><br><span class=\"line\"><span class=\"comment\">// 成员变量名与数据库关键字冲突，注意这里使用反引号</span></span><br><span class=\"line\"><span class=\"meta\">@TableField(value = &quot;`order`&quot;)</span></span><br><span class=\"line\"><span class=\"keyword\">private</span> Integer order;</span><br><span class=\"line\"><span class=\"comment\">// 成员变量不是数据库字段</span></span><br><span class=\"line\"><span class=\"meta\">@TableField(exist=false)</span></span><br><span class=\"line\"><span class=\"keyword\">private</span> String username;</span><br></pre></td></tr></table></figure>\n\n<br/>\n\n<h3 id=\"4、自动填充数据\"><a href=\"#4、自动填充数据\" class=\"headerlink\" title=\"4、自动填充数据\"></a>4、自动填充数据</h3><p>1、第一种：数据库操作<br>在数据库表中创建两个字段，分别是create_time,update_time，填上默认值：CURRENT_TIMESTAMP （时间戳），然后将更新勾选上，然后需要在实体类中同步这两个属性，在实体类中创建这两个属性。<br>2、第二种：代码级别<br>在数据库和实体类都创建这两个字段，然后添加注解TableField，在创建时间属性上为@TableField(fill &#x3D; FieldFill.INSERT)，在更新时间属性上为@TableField(fill &#x3D; FieldFill.UPDATE)，然后创建一个配置类来处理，如下：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Component</span></span><br><span class=\"line\">  <span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">MyMetaObjectHandler</span> implement MetaObjectHandler &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 插入时填充</span></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">insertFill</span><span class=\"params\">(MetaObject metaObject)</span> &#123;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.setFieldValByName(<span class=\"string\">&quot;createTime&quot;</span>,<span class=\"keyword\">new</span> <span class=\"title class_\">Date</span>(),metaObject);</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.setFieldValByName(<span class=\"string\">&quot;updateTime&quot;</span>,<span class=\"keyword\">new</span> <span class=\"title class_\">Date</span>(),metaObject);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 更新时填充</span></span><br><span class=\"line\">   <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">updateFill</span><span class=\"params\">(MetaObject metaObject)</span> &#123;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.setFieldValByName(<span class=\"string\">&quot;updateTime&quot;</span>,<span class=\"keyword\">new</span> <span class=\"title class_\">Date</span>(),metaObject);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<br/>\n\n<h3 id=\"5、注意版本区别\"><a href=\"#5、注意版本区别\" class=\"headerlink\" title=\"5、注意版本区别\"></a>5、注意版本区别</h3><p>（1）mysql 5：驱动不同 com.mysql.jdbc.Driver<br>（2）mysql 8：驱动不同 com.mysql.cj.jdbc.Driver，需要增加时区的配置 serverTimezone&#x3D;GMT</p>\n<br/>\n\n<h3 id=\"6、使用方法\"><a href=\"#6、使用方法\" class=\"headerlink\" title=\"6、使用方法\"></a>6、使用方法</h3><p><strong>特别说明：</strong>dao要继承mybatis-plus的BaseMapper<T>，”&lt;&gt;”里的是具体的实体类，这里是什么类，增删改查就会针对这个实体类对应的数据库表来进行操作，如果需要查询其它表的信息，就必须自己在xml中写sql语句。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 查询全部</span></span><br><span class=\"line\">List&lt;User&gt; users = userDao.selectList(<span class=\"literal\">null</span>);</span><br><span class=\"line\">users.forEach(System.out::println);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 根据ID更新数据</span></span><br><span class=\"line\"><span class=\"type\">User</span> <span class=\"variable\">user</span> <span class=\"operator\">=</span> users.get(<span class=\"number\">1</span>); <span class=\"comment\">// 这里要从0开始，意思0对应数据库里的第一条数据</span></span><br><span class=\"line\">user.setAge(<span class=\"number\">28</span>);</span><br><span class=\"line\"><span class=\"comment\">// 它是动态拼接sql更新语句的</span></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> userDao.updateById(user);</span><br><span class=\"line\">System.out.println(i);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 通过ID查询一条数据</span></span><br><span class=\"line\"> <span class=\"type\">User</span> <span class=\"variable\">user1</span> <span class=\"operator\">=</span> userDao.selectById(<span class=\"number\">1</span>);</span><br><span class=\"line\">System.out.println(user1);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 批量查询</span></span><br><span class=\"line\"> List&lt;User&gt; users = userDao.selectBatchIds(Arrays.asList(<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>));</span><br><span class=\"line\">users.forEach(System.out::println);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 动态条件查询</span></span><br><span class=\"line\">Map&lt;String,Object&gt; map = <span class=\"keyword\">new</span> <span class=\"title class_\">HashMap</span>&lt;&gt;();</span><br><span class=\"line\">map.put(<span class=\"string\">&quot;name&quot;</span>,<span class=\"string\">&quot;左冲&quot;</span>);</span><br><span class=\"line\">map.put(<span class=\"string\">&quot;age&quot;</span>,<span class=\"number\">24</span>); <span class=\"comment\">// 加条件是在sql语句后加 and age=24</span></span><br><span class=\"line\">List&lt;User&gt; users = userDao.selectByMap(map);</span><br><span class=\"line\">users.forEach(System.out::println);</span><br></pre></td></tr></table></figure>\n\n<br/>\n\n<h3 id=\"7、乐观锁和悲观锁\"><a href=\"#7、乐观锁和悲观锁\" class=\"headerlink\" title=\"7、乐观锁和悲观锁\"></a>7、乐观锁和悲观锁</h3><h4 id=\"（1）乐观锁\"><a href=\"#（1）乐观锁\" class=\"headerlink\" title=\"（1）乐观锁\"></a>（1）乐观锁</h4><p>1、思想<br>乐观锁的基本思想是，认为并发冲突的概率较低，因此不需要提前加锁，而是在数据更新阶段进行冲突检测和处理。乐观锁的核心思想是”先修改，后校验”。在乐观锁的应用中，线程在读取共享资源时不会加锁，而是记录特定的版本信息。当线程准备更新资源时，会先检查该资源的版本信息是否与之前读取的版本信息一致，如果一致则执行更新操作，否则说明有其他线程修改了该资源，需要进行相应的冲突处理。乐观锁通过避免加锁操作，提高了系统的并发性能和吞吐量，但是在并发冲突较为频繁的情况下，乐观锁会导致较多的冲突处理和重试操作。<br>乐观锁实现方案和技术<br>（1）版本号&#x2F;时间戳：为数据添加一个版本号或时间戳字段，每次更新数据时，比较当前版本号或时间戳与期望值是否一致，若一致则更新成功，否则表示数据已被修改，需要进行冲突处理。<br>（2）CAS（Compare-and-Swap）：使用原子操作比较当前值与旧值是否一致，若一致则进行更新操作，否则重新尝试。<br>（3）无锁数据结构：采用无锁数据结构，如无锁队列、无锁哈希表等，通过使用原子操作实现并发安全。<br>2、介绍<br>A、B两个线程更新一条数据，A取出这条数据获取到的version为1.0，A更新这条数据的同时，B也取出这条数据获取到的version也为1.0，A完成更新，version变为2.0，但是B更新的时候version是1.0，所以B更新失败。<br>3、乐观锁实现方式<br>（1）取出数据，获取当前version<br>（2）更新时，带上这个version<br>（3）执行更新时，set version &#x3D; newVersion where version &#x3D; oldVersion，如果version不对，就更新失败。<br>4、操作<br>（1）在数据库中增加version字段，对应的实体类中也要增加一个属性version，并加上注解@Version。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Vsersion</span></span><br><span class=\"line\"><span class=\"keyword\">private</span> Integer version;</span><br></pre></td></tr></table></figure>\n<p>（2）添加配置类<br>之前配置（单独配置）：  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@MapperScan(&quot;com.zuo.dao&quot;)</span> <span class=\"comment\">// 扫描dao层</span></span><br><span class=\"line\"><span class=\"meta\">@EnableTransactionManagement</span> <span class=\"comment\">// 开启事务管理</span></span><br><span class=\"line\"><span class=\"meta\">@Configuration</span> <span class=\"comment\">// 配置类</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">MybatisPlusConfig</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 注册乐观锁插件</span></span><br><span class=\"line\">    <span class=\"meta\">@Bean</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> OptimisticLockerInterceptor <span class=\"title function_\">optimisticLockerInterceptor</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"title class_\">OptimisticLockerInterceptor</span>();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>现在配置（在总的配置类中配置）：<br>可以在<code>MybatisPlusInterceptor</code>这个方法中配置分页等插件。  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Bean</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> MybatisPlusInterceptor <span class=\"title function_\">mybatisPlusInterceptor</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">    <span class=\"type\">MybatisPlusInterceptor</span> <span class=\"variable\">interceptor</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">MybatisPlusInterceptor</span>();</span><br><span class=\"line\">    interceptor.addInnerInterceptor(<span class=\"keyword\">new</span> <span class=\"title class_\">OptimisticLockerInnerInterceptor</span>());</span><br><span class=\"line\">    <span class=\"keyword\">return</span> interceptor;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"（2）悲观锁\"><a href=\"#（2）悲观锁\" class=\"headerlink\" title=\"（2）悲观锁\"></a>（2）悲观锁</h4><p>1、思想<br>悲观锁的基本思想是，在整个数据访问过程中，将共享资源锁定，以确保其他线程或进程不能同时访问和修改该资源。悲观锁的核心思想是”先保护，再修改”。在悲观锁的应用中，线程在访问共享资源之前会获取到锁，并在整个操作过程中保持锁的状态，阻塞其他线程的访问。只有当前线程完成操作后，才会释放锁，让其他线程继续操作资源。这种锁机制可以确保资源独占性和数据的一致性，但是在高并发环境下，悲观锁的效率相对较低。<br>悲观锁实现方案和技术：<br>（1）锁机制：使用传统的锁机制，如互斥锁（Mutex Lock）或读写锁（Read-Write Lock）来保证对共享资源的独占访问。<br>（2）数据库锁：在数据库层面使用行级锁或表级锁来控制并发访问。<br>（3）信号量（Semaphore）：使用信号量来限制对资源的并发访问。  </p>\n<br/>\n\n<h3 id=\"8、分页\"><a href=\"#8、分页\" class=\"headerlink\" title=\"8、分页\"></a>8、分页</h3><p>1、之前版本<br>（1）需要在配置类中注入分页（新版本不知道需不需要配置）</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@MapperScan(&quot;com.zuo.dao&quot;)</span> <span class=\"comment\">// 扫描dao层</span></span><br><span class=\"line\"><span class=\"meta\">@EnableTransactionManagement</span> <span class=\"comment\">// 开启事务管理</span></span><br><span class=\"line\"><span class=\"meta\">@Configuration</span> <span class=\"comment\">// 配置类</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">MybatisPlusConfig</span> &#123;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">// 注册分页插件</span></span><br><span class=\"line\">    <span class=\"meta\">@Bean</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> PaginationInterceptor <span class=\"title function_\">paginationInterceptor</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"title class_\">PaginationInterceptor</span>();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>（2）操作  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// new Page&lt;&gt;(1,1)：（pageNo, pageSize）</span></span><br><span class=\"line\"><span class=\"comment\">// Page&lt;User&gt;，尖括号里面的实体类是什么就针对对应的表来进行查询分页</span></span><br><span class=\"line\">Page&lt;User&gt; page = <span class=\"keyword\">new</span> <span class=\"title class_\">Page</span>&lt;&gt;(<span class=\"number\">1</span>,<span class=\"number\">1</span>);</span><br><span class=\"line\"><span class=\"comment\">// null：条件查询器，下面会有第9点</span></span><br><span class=\"line\">Page&lt;User&gt; userPage = userDao.selectPage(page, <span class=\"literal\">null</span>);</span><br><span class=\"line\">System.out.println(userPage);</span><br><span class=\"line\"><span class=\"comment\">// page.getRecords()：是一个数组，它的样子是这样的</span></span><br><span class=\"line\">[</span><br><span class=\"line\">  User&#123;id=<span class=\"number\">1</span>, name=<span class=\"string\">&#x27;左冲&#x27;</span>, sex=<span class=\"string\">&#x27;男&#x27;</span>, age=<span class=\"number\">28</span>&#125;, </span><br><span class=\"line\">  User&#123;id=<span class=\"number\">2</span>, name=<span class=\"string\">&#x27;李四&#x27;</span>, sex=<span class=\"string\">&#x27;男&#x27;</span>, age=<span class=\"number\">28</span>&#125;, </span><br><span class=\"line\">  User&#123;id=<span class=\"number\">3</span>, name=<span class=\"string\">&#x27;小明&#x27;</span>, sex=<span class=\"string\">&#x27;男&#x27;</span>, age=<span class=\"number\">24</span>&#125;</span><br><span class=\"line\">]</span><br><span class=\"line\">System.out.println(page.getRecords());</span><br><span class=\"line\">page.getRecords().forEach(System.out::println);</span><br></pre></td></tr></table></figure>\n<p>2、现在版本<br>（1）在配置类中加入下面的方法  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Bean</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> MybatisPlusInterceptor <span class=\"title function_\">mybatisPlusInterceptor</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">    <span class=\"type\">MybatisPlusInterceptor</span> <span class=\"variable\">interceptor</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">MybatisPlusInterceptor</span>();</span><br><span class=\"line\">\t<span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">\t * 可以使用new PaginationInnerInterceptor(DbType.MYSQL)来配置分页属性，比如：配置分页上限</span></span><br><span class=\"line\"><span class=\"comment\">\t * PaginationInnerInterceptor pageInterceptor = new PaginationInnerInterceptor(DbType.MYSQL);</span></span><br><span class=\"line\"><span class=\"comment\">\t * pageInterceptor.setMaxLimit(500L);</span></span><br><span class=\"line\"><span class=\"comment\">\t */</span></span><br><span class=\"line\">    interceptor.addInnerInterceptor(<span class=\"keyword\">new</span> <span class=\"title class_\">PaginationInnerInterceptor</span>(DbType.MYSQL));</span><br><span class=\"line\">    <span class=\"keyword\">return</span> interceptor;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>（2）操作  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Test</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">testPageQuery</span><span class=\"params\">()</span>&#123;</span><br><span class=\"line\">\t<span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">\t * 设置分页参数一</span></span><br><span class=\"line\"><span class=\"comment\">\t * Page&lt;User&gt; page = Page.of(1, 5);</span></span><br><span class=\"line\"><span class=\"comment\">\t */</span></span><br><span class=\"line\">    <span class=\"comment\">//设置分页参数二</span></span><br><span class=\"line\">    Page&lt;User&gt; page = <span class=\"keyword\">new</span> <span class=\"title class_\">Page</span>&lt;&gt;(<span class=\"number\">1</span>, <span class=\"number\">5</span>);</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">\t * 设置排序</span></span><br><span class=\"line\"><span class=\"comment\">\t * 先根据创建时间排序升序，再根据id排序升序</span></span><br><span class=\"line\"><span class=\"comment\">\t * 下面的create_time是数据库中的字段名</span></span><br><span class=\"line\"><span class=\"comment\">\t * true：升序asc</span></span><br><span class=\"line\"><span class=\"comment\">\t * false：降序desc</span></span><br><span class=\"line\"><span class=\"comment\">\t * page.addOrder(new OrderItem(&quot;create_time&quot;, true));</span></span><br><span class=\"line\"><span class=\"comment\">\t * page.addOrder(new OrderItem(&quot;id&quot;, true));</span></span><br><span class=\"line\"><span class=\"comment\">\t */</span></span><br><span class=\"line\">\t</span><br><span class=\"line\">    userMapper.selectPage(page, <span class=\"literal\">null</span>);</span><br><span class=\"line\">    <span class=\"comment\">//获取分页数据</span></span><br><span class=\"line\">    List&lt;User&gt; list = page.getRecords();</span><br><span class=\"line\">    list.forEach(System.out::println);</span><br><span class=\"line\">    System.out.println(<span class=\"string\">&quot;当前页：&quot;</span>+page.getCurrent());</span><br><span class=\"line\">    System.out.println(<span class=\"string\">&quot;每页显示的条数：&quot;</span>+page.getSize());</span><br><span class=\"line\">    System.out.println(<span class=\"string\">&quot;总记录数：&quot;</span>+page.getTotal());</span><br><span class=\"line\">    System.out.println(<span class=\"string\">&quot;总页数：&quot;</span>+page.getPages());</span><br><span class=\"line\">    System.out.println(<span class=\"string\">&quot;是否有上一页：&quot;</span>+page.hasPrevious());</span><br><span class=\"line\">    System.out.println(<span class=\"string\">&quot;是否有下一页：&quot;</span>+page.hasNext());</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>3、自定义的mapper方法使用分页<br>（1）在mapper接口中定义方法  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//传入参数携带Ipage接口</span></span><br><span class=\"line\"><span class=\"comment\">//返回结果为IPage</span></span><br><span class=\"line\">IPage&lt;User&gt; <span class=\"title function_\">selectPageVo</span><span class=\"params\">(IPage&lt;?&gt; page, Integer id)</span>;</span><br></pre></td></tr></table></figure>\n<p>（2）在mapper.xml中编写sql  </p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">select</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;selectPageVo&quot;</span> <span class=\"attr\">resultType</span>=<span class=\"string\">&quot;xxx.xxx.xxx.User&quot;</span>&gt;</span></span><br><span class=\"line\">    SELECT * FROM user WHERE id &gt; #&#123;id&#125;</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">select</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>（3）测试  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Test</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">testQuick</span><span class=\"params\">()</span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"type\">IPage</span> <span class=\"variable\">page</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Page</span>(<span class=\"number\">1</span>,<span class=\"number\">2</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    userMapper.selectPageVo(page,<span class=\"number\">2</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"type\">long</span> <span class=\"variable\">current</span> <span class=\"operator\">=</span> page.getCurrent();</span><br><span class=\"line\">    System.out.println(<span class=\"string\">&quot;current = &quot;</span> + current);</span><br><span class=\"line\">    <span class=\"type\">long</span> <span class=\"variable\">pages</span> <span class=\"operator\">=</span> page.getPages();</span><br><span class=\"line\">    System.out.println(<span class=\"string\">&quot;pages = &quot;</span> + pages);</span><br><span class=\"line\">    <span class=\"type\">long</span> <span class=\"variable\">total</span> <span class=\"operator\">=</span> page.getTotal();</span><br><span class=\"line\">    System.out.println(<span class=\"string\">&quot;total = &quot;</span> + total);</span><br><span class=\"line\">    <span class=\"type\">List</span> <span class=\"variable\">records</span> <span class=\"operator\">=</span> page.getRecords();</span><br><span class=\"line\">    System.out.println(<span class=\"string\">&quot;records = &quot;</span> + records);</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<br/>\n\n<h3 id=\"9、逻辑删除\"><a href=\"#9、逻辑删除\" class=\"headerlink\" title=\"9、逻辑删除\"></a>9、逻辑删除</h3><p>1、在实体类中增加字段delFlag字段，并在字段上面使用注解@TableLogic，还需要在数据库中增加一个逻辑删除标识字段del_flag，0：存在，1：删除该数据。<br><strong>说明：</strong>在数据库中添加这个字段之后，执行删除操作的时候，它会自动将删除操作转变为更新操作，将del_flag更改为1，表示删除此数据，再执行查找的时候就查找不到该数据，但是数据库中还是存在该数据。<br>2、在配置类中注入逻辑删除组件，在配置文件中配置，新版本不知道需不需要配置：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 配置类中配置</span></span><br><span class=\"line\"><span class=\"meta\">@Bean</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> ISqlInjector <span class=\"title function_\">sqlInjector</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"title class_\">LogicSqlInjector</span>();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>这里使用的是单一指定逻辑删除，全局指定逻辑删除查看第<code>2</code>点各种配置。<br>3、操作</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@TableLogic</span></span><br><span class=\"line\"><span class=\"keyword\">private</span> Integer delFlag;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> userDao.deleteById(<span class=\"number\">2</span>);</span><br><span class=\"line\">System.out.println(i);</span><br><span class=\"line\">List&lt;User&gt; users = userDao.selectList(<span class=\"literal\">null</span>);</span><br><span class=\"line\">users.forEach(System.out::println);</span><br></pre></td></tr></table></figure>\n\n<br/>\n\n<h3 id=\"10、条件构造器的使用\"><a href=\"#10、条件构造器的使用\" class=\"headerlink\" title=\"10、条件构造器的使用\"></a>10、条件构造器的使用</h3><h4 id=\"（1）方法说明\"><a href=\"#（1）方法说明\" class=\"headerlink\" title=\"（1）方法说明\"></a>（1）方法说明</h4><img src=\"/2023/10/18/Mybatis-Plus%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/1.png\" class=\"\">\n\n<h4 id=\"（2）QueryWrapper查询器\"><a href=\"#（2）QueryWrapper查询器\" class=\"headerlink\" title=\"（2）QueryWrapper查询器\"></a>（2）QueryWrapper查询器</h4><p>1、组装查询条件  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Test</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">test01</span><span class=\"params\">()</span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">//查询用户名包含a，年龄在20到30之间，并且邮箱不为null的用户信息</span></span><br><span class=\"line\">    <span class=\"comment\">//SELECT id,username AS name,age,email,is_deleted FROM t_user WHERE is_deleted=0 AND (username LIKE ? AND age BETWEEN ? AND ? AND email IS NOT NULL)</span></span><br><span class=\"line\">    QueryWrapper&lt;User&gt; queryWrapper = <span class=\"keyword\">new</span> <span class=\"title class_\">QueryWrapper</span>&lt;&gt;();</span><br><span class=\"line\">    queryWrapper.like(<span class=\"string\">&quot;username&quot;</span>, <span class=\"string\">&quot;a&quot;</span>)</span><br><span class=\"line\">            .between(<span class=\"string\">&quot;age&quot;</span>, <span class=\"number\">20</span>, <span class=\"number\">30</span>)</span><br><span class=\"line\">            .isNotNull(<span class=\"string\">&quot;email&quot;</span>);</span><br><span class=\"line\">    List&lt;User&gt; list = userMapper.selectList(queryWrapper);</span><br><span class=\"line\">    list.forEach(System.out::println);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>2、组装排序条件  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Test</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">test02</span><span class=\"params\">()</span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">//按年龄降序查询用户，如果年龄相同则按id升序排列</span></span><br><span class=\"line\">    <span class=\"comment\">//SELECT id,username AS name,age,email,is_deleted FROM t_user WHERE is_deleted=0 ORDER BY age DESC,id ASC</span></span><br><span class=\"line\">    QueryWrapper&lt;User&gt; queryWrapper = <span class=\"keyword\">new</span> <span class=\"title class_\">QueryWrapper</span>&lt;&gt;();</span><br><span class=\"line\">    queryWrapper</span><br><span class=\"line\">            .orderByDesc(<span class=\"string\">&quot;age&quot;</span>)</span><br><span class=\"line\">            .orderByAsc(<span class=\"string\">&quot;id&quot;</span>);</span><br><span class=\"line\">    List&lt;User&gt; users = userMapper.selectList(queryWrapper);</span><br><span class=\"line\">    users.forEach(System.out::println);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>3、组装删除条件  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Test</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">test03</span><span class=\"params\">()</span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">//删除email为空的用户</span></span><br><span class=\"line\">    <span class=\"comment\">//DELETE FROM t_user WHERE (email IS NULL)</span></span><br><span class=\"line\">    QueryWrapper&lt;User&gt; queryWrapper = <span class=\"keyword\">new</span> <span class=\"title class_\">QueryWrapper</span>&lt;&gt;();</span><br><span class=\"line\">    queryWrapper.isNull(<span class=\"string\">&quot;email&quot;</span>);</span><br><span class=\"line\">    <span class=\"comment\">//条件构造器也可以构建删除语句的条件</span></span><br><span class=\"line\">    <span class=\"type\">int</span> <span class=\"variable\">result</span> <span class=\"operator\">=</span> userMapper.delete(queryWrapper);</span><br><span class=\"line\">    System.out.println(<span class=\"string\">&quot;受影响的行数：&quot;</span> + result);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>4、and和or关键字使用(修改)  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Test</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">test04</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">    QueryWrapper&lt;User&gt; queryWrapper = <span class=\"keyword\">new</span> <span class=\"title class_\">QueryWrapper</span>&lt;&gt;();</span><br><span class=\"line\">    <span class=\"comment\">//将年龄大于20并且用户名中包含有a或邮箱为null的用户信息修改</span></span><br><span class=\"line\">    <span class=\"comment\">//UPDATE t_user SET age=?, email=? WHERE username LIKE ? AND age &gt; ? OR email IS NULL)</span></span><br><span class=\"line\">    queryWrapper</span><br><span class=\"line\">            .like(<span class=\"string\">&quot;username&quot;</span>, <span class=\"string\">&quot;a&quot;</span>)</span><br><span class=\"line\">            .gt(<span class=\"string\">&quot;age&quot;</span>, <span class=\"number\">20</span>)</span><br><span class=\"line\">            .or()</span><br><span class=\"line\">            .isNull(<span class=\"string\">&quot;email&quot;</span>);</span><br><span class=\"line\">    <span class=\"type\">User</span> <span class=\"variable\">user</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">User</span>();</span><br><span class=\"line\">    user.setAge(<span class=\"number\">18</span>);</span><br><span class=\"line\">    user.setEmail(<span class=\"string\">&quot;user@atguigu.com&quot;</span>);</span><br><span class=\"line\">    <span class=\"type\">int</span> <span class=\"variable\">result</span> <span class=\"operator\">=</span> userMapper.update(user, queryWrapper);</span><br><span class=\"line\">    System.out.println(<span class=\"string\">&quot;受影响的行数：&quot;</span> + result);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>5、指定列映射查询  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Test</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">test05</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">//查询用户信息的username和age字段</span></span><br><span class=\"line\">    <span class=\"comment\">//SELECT username,age FROM t_user</span></span><br><span class=\"line\">    QueryWrapper&lt;User&gt; queryWrapper = <span class=\"keyword\">new</span> <span class=\"title class_\">QueryWrapper</span>&lt;&gt;();</span><br><span class=\"line\">    queryWrapper.select(<span class=\"string\">&quot;username&quot;</span>, <span class=\"string\">&quot;age&quot;</span>);</span><br><span class=\"line\">    <span class=\"comment\">//selectMaps()返回Map集合列表，通常配合select()使用，避免User对象中没有被查询到的列值为null</span></span><br><span class=\"line\">    List&lt;Map&lt;String, Object&gt;&gt; maps = userMapper.selectMaps(queryWrapper);</span><br><span class=\"line\">    maps.forEach(System.out::println);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>6、condition判断组织条件  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> <span class=\"meta\">@Test</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">testQuick3</span><span class=\"params\">()</span>&#123;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"type\">String</span> <span class=\"variable\">name</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;root&quot;</span>;</span><br><span class=\"line\">    <span class=\"type\">int</span>    <span class=\"variable\">age</span> <span class=\"operator\">=</span> <span class=\"number\">18</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    QueryWrapper&lt;User&gt; queryWrapper = <span class=\"keyword\">new</span> <span class=\"title class_\">QueryWrapper</span>&lt;&gt;();</span><br><span class=\"line\">    <span class=\"comment\">//判断条件拼接</span></span><br><span class=\"line\">    <span class=\"comment\">//当name不为null拼接等于, age &gt; 1 拼接等于判断</span></span><br><span class=\"line\">    <span class=\"comment\">//方案1: 手动判断</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!StringUtils.isEmpty(name))&#123;</span><br><span class=\"line\">        queryWrapper.eq(<span class=\"string\">&quot;name&quot;</span>,name);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (age &gt; <span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">        queryWrapper.eq(<span class=\"string\">&quot;age&quot;</span>,age);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">//方案2: 拼接condition判断</span></span><br><span class=\"line\">    <span class=\"comment\">//每个条件拼接方法都condition参数,这是一个比较运算,为true追加当前条件!</span></span><br><span class=\"line\">    <span class=\"comment\">//eq(condition,列名,值)</span></span><br><span class=\"line\">    queryWrapper.eq(!StringUtils.isEmpty(name),<span class=\"string\">&quot;name&quot;</span>,name)</span><br><span class=\"line\">            .eq(age&gt;<span class=\"number\">1</span>,<span class=\"string\">&quot;age&quot;</span>,age);   </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"（3）UpdateWrapper更新器\"><a href=\"#（3）UpdateWrapper更新器\" class=\"headerlink\" title=\"（3）UpdateWrapper更新器\"></a>（3）UpdateWrapper更新器</h4><p>特别说明：<br>（1）更新数据库时不仅可以用<code>UpdateWrapper</code>，也可以用<code>queryWrapper</code>，具体操作可以查看第<code>11</code>点；<br>（2）使用queryWrapper + 实体类形式可以实现修改，但是无法将列值修改为null值；<br>（3）使用updateWrapper可以随意设置列的值。  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Test</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">testQuick2</span><span class=\"params\">()</span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    UpdateWrapper&lt;User&gt; updateWrapper = <span class=\"keyword\">new</span> <span class=\"title class_\">UpdateWrapper</span>&lt;&gt;();</span><br><span class=\"line\">    <span class=\"comment\">//将id = 3 的email设置为null, age = 18</span></span><br><span class=\"line\">    updateWrapper.eq(<span class=\"string\">&quot;id&quot;</span>,<span class=\"number\">3</span>)</span><br><span class=\"line\">            .set(<span class=\"string\">&quot;email&quot;</span>,<span class=\"literal\">null</span>)  <span class=\"comment\">// set 指定列和结果</span></span><br><span class=\"line\">            .set(<span class=\"string\">&quot;age&quot;</span>,<span class=\"number\">18</span>);</span><br><span class=\"line\">    <span class=\"comment\">//如果使用updateWrapper 实体对象写null即可!</span></span><br><span class=\"line\">    <span class=\"type\">int</span> <span class=\"variable\">result</span> <span class=\"operator\">=</span> userMapper.update(<span class=\"literal\">null</span>, updateWrapper);</span><br><span class=\"line\">    System.out.println(<span class=\"string\">&quot;result = &quot;</span> + result);</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<br/>\n\n\n<h3 id=\"11、更新时需要注意的问题\"><a href=\"#11、更新时需要注意的问题\" class=\"headerlink\" title=\"11、更新时需要注意的问题\"></a>11、更新时需要注意的问题</h3><p>更新指定字段：  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">UpdateWrapper&lt;xxx&gt; updateWrapper = <span class=\"keyword\">new</span> <span class=\"title class_\">UpdateWrapper</span>&lt;&gt;();</span><br><span class=\"line\">updateWrapper.eq(<span class=\"string\">&quot;id&quot;</span>,id); <span class=\"comment\">// 根据id去判断更新那条数据</span></span><br><span class=\"line\">updateWrapper.set(<span class=\"string\">&quot;state&quot;</span>, <span class=\"number\">2</span>); <span class=\"comment\">// .set 就是去更改的字段，第一个参数为字段名， 第二个参数为更改的值</span></span><br><span class=\"line\">xxxMapper.update(<span class=\"literal\">null</span>, updateWrapper);</span><br></pre></td></tr></table></figure>\n<p>1、使用<code>QueryWrapper</code>修改需要注意<br>（1）需要new一个需要修改的实体类数据，比如下面例子中的User；<br>（2）它不能修改为null的数据，如果属性为null的，它不修改。  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 将年龄大于20并且用户名中包含有a或邮箱为null的用户信息修改</span></span><br><span class=\"line\"><span class=\"comment\">// 下面代码转为sql：update user set age=?,email=? where name like &#x27;a&#x27; and age&gt;20 or email is null</span></span><br><span class=\"line\">QueryWrapper&lt;User&gt; queryWrapper = <span class=\"keyword\">new</span> <span class=\"title class_\">QueryWrapper</span>&lt;&gt;();</span><br><span class=\"line\">queryWrapper.gt(<span class=\"string\">&quot;age&quot;</span>, <span class=\"number\">20</span>)</span><br><span class=\"line\">\t\t\t.like(<span class=\"string\">&quot;name&quot;</span>, <span class=\"string\">&quot;a&quot;</span>)</span><br><span class=\"line\">\t\t\t.or()</span><br><span class=\"line\">\t\t\t.isNull(<span class=\"string\">&quot;email&quot;</span>);</span><br><span class=\"line\"><span class=\"type\">User</span> <span class=\"variable\">user</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">User</span>();</span><br><span class=\"line\">user.setAge(<span class=\"number\">88</span>);</span><br><span class=\"line\">user.setEmail(<span class=\"literal\">null</span>); <span class=\"comment\">// 注意：这里是不能修改为null的</span></span><br><span class=\"line\">userMapper.update(user, queryWrapper);</span><br></pre></td></tr></table></figure>\n<p>2、使用<code>UpdateWrapper</code>修改<br>（1）不需要new实体类，直接使用<code>set</code>方法修改;<br>（2）可以将数据修改为null。  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 下面等同于：update user set age=99,email=null where name like &#x27;a&#x27; and age&gt;20 or email is null</span></span><br><span class=\"line\">UpdateWrapper&lt;User&gt; updateWrapper = <span class=\"keyword\">new</span> <span class=\"title class_\">UpdateWrapper</span>&lt;&gt;();</span><br><span class=\"line\">updateWrapper.gt(<span class=\"string\">&quot;age&quot;</span>, <span class=\"number\">20</span>)</span><br><span class=\"line\">\t\t\t.like(<span class=\"string\">&quot;name&quot;</span>, <span class=\"string\">&quot;a&quot;</span>)</span><br><span class=\"line\">\t\t\t.or()</span><br><span class=\"line\">\t\t\t.isNull(<span class=\"string\">&quot;email&quot;</span>)</span><br><span class=\"line\">\t\t\t.set(<span class=\"string\">&quot;email&quot;</span>, <span class=\"literal\">null</span>)</span><br><span class=\"line\">\t\t\t.set(<span class=\"string\">&quot;age&quot;</span>, <span class=\"number\">99</span>);</span><br><span class=\"line\"><span class=\"comment\">// 下面第一个参数必须为null</span></span><br><span class=\"line\">userMapper.update(<span class=\"literal\">null</span>, updateWrapper);</span><br></pre></td></tr></table></figure>\n\n<br/>\n\n\n\n<h3 id=\"12、批量插入\"><a href=\"#12、批量插入\" class=\"headerlink\" title=\"12、批量插入\"></a>12、批量插入</h3><p>两种方法：<br>1、第一种方法，调用<code>service</code>自带的<code>saveBatch</code>方法，底层也是通过<code>for</code>来完成，默认是一个事务一次提交1000条数据，点击进入<code>saveBatch</code>可以看到， 也可以自定义每次提交多少条；<br>2、<code>insertBatchSomeColumn</code><br>（1）自定义SQL注入器  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> com.baomidou.mybatisplus.core.injector.AbstractMethod;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.baomidou.mybatisplus.core.injector.DefaultSqlInjector;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.baomidou.mybatisplus.extension.injector.methods.InsertBatchSomeColumn;</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.List;</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">InsertBatchSqlInjector</span> <span class=\"keyword\">extends</span> <span class=\"title class_\">DefaultSqlInjector</span> &#123;</span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> List&lt;AbstractMethod&gt; <span class=\"title function_\">getMethodList</span><span class=\"params\">(Class&lt;?&gt; mapperClass)</span> &#123;</span><br><span class=\"line\">        List&lt;AbstractMethod&gt; methodList = <span class=\"built_in\">super</span>.getMethodList(mapperClass);</span><br><span class=\"line\">        methodList.add(<span class=\"keyword\">new</span> <span class=\"title class_\">InsertBatchSomeColumn</span>()); <span class=\"comment\">//添加InsertBatchSomeColumn方法</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> methodList;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>（2）把SQL注入器交给Spring  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.context.annotation.Bean;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.stereotype.Component;</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"meta\">@Component</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">MybatisPlusConfig</span> &#123;</span><br><span class=\"line\">    <span class=\"meta\">@Bean</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> InsertBatchSqlInjector <span class=\"title function_\">easySqlInjector</span> <span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"title class_\">InsertBatchSqlInjector</span>();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>到此定义完毕，在<code>Mapper</code>中生成<code>insertBatchSomeColumn</code>（必须是这个方法名）方法，你就可以撒手不管了，直接调用就行，或者直接在<code>ServiceImpl</code>通过<code>Mapper</code>调用<code>insertBatchSomeColumn</code>，然后<code>ALT+回车</code>生成此方法。<br>测试代码，调用<code>insertBatchSomeColumn</code>方法：  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Resource</span></span><br><span class=\"line\"><span class=\"keyword\">private</span> UserStudyMapper userStudyMapper;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\"> *批量插入</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"meta\">@Override</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">greatMany</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">    List&lt;UserStudy&gt; userStudyList = <span class=\"keyword\">new</span> <span class=\"title class_\">ArrayList</span>&lt;&gt;();</span><br><span class=\"line\">    <span class=\"type\">UserStudy</span> <span class=\"variable\">userStudy1</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">UserStudy</span>();</span><br><span class=\"line\">    userStudy1.setName(<span class=\"string\">&quot;张三&quot;</span>);</span><br><span class=\"line\">    <span class=\"type\">UserStudy</span> <span class=\"variable\">userStudy2</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">UserStudy</span>();</span><br><span class=\"line\">    userStudy2.setName(<span class=\"string\">&quot;李四&quot;</span>);</span><br><span class=\"line\">    userStudyList.add(userStudy1);</span><br><span class=\"line\">    userStudyList.add(userStudy2);</span><br><span class=\"line\">    <span class=\"comment\">//调用insertBatchSomeColumn方法</span></span><br><span class=\"line\">    userStudyMapper.insertBatchSomeColumn(userStudyList);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>注意：SQL有语句长度限制，在MySQL中被参数<code>max_allowed_packet</code>限制，默认为1M，如果拼接长度超过此限制就会报错，两种解决方式，一个是调整MySQL的<code>max_allowed_packet</code>限制，另一个则是通过代码控制每次的提交数量。<br>通过代码控制每次提交数量，模拟造五条数据，每次提交两条数据：  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\"> *批量插入</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"meta\">@Override</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">greatMany</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">    List&lt;UserStudy&gt; userStudyList = <span class=\"keyword\">new</span> <span class=\"title class_\">ArrayList</span>&lt;&gt;();</span><br><span class=\"line\">    <span class=\"type\">UserStudy</span> <span class=\"variable\">userStudy1</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">UserStudy</span>();</span><br><span class=\"line\">    userStudy1.setName(<span class=\"string\">&quot;张三&quot;</span>);</span><br><span class=\"line\">    <span class=\"type\">UserStudy</span> <span class=\"variable\">userStudy2</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">UserStudy</span>();</span><br><span class=\"line\">    userStudy2.setName(<span class=\"string\">&quot;李四&quot;</span>);</span><br><span class=\"line\">    <span class=\"type\">UserStudy</span> <span class=\"variable\">userStudy3</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">UserStudy</span>();</span><br><span class=\"line\">    userStudy3.setName(<span class=\"string\">&quot;王五&quot;</span>);</span><br><span class=\"line\">    <span class=\"type\">UserStudy</span> <span class=\"variable\">userStudy4</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">UserStudy</span>();</span><br><span class=\"line\">    userStudy4.setName(<span class=\"string\">&quot;赵六&quot;</span>);</span><br><span class=\"line\">    <span class=\"type\">UserStudy</span> <span class=\"variable\">userStudy5</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">UserStudy</span>();</span><br><span class=\"line\">    userStudy5.setName(<span class=\"string\">&quot;小红&quot;</span>);</span><br><span class=\"line\">    userStudyList.add(userStudy1);</span><br><span class=\"line\">    userStudyList.add(userStudy2);</span><br><span class=\"line\">    userStudyList.add(userStudy3);</span><br><span class=\"line\">    userStudyList.add(userStudy4);</span><br><span class=\"line\">    userStudyList.add(userStudy5);</span><br><span class=\"line\">    <span class=\"comment\">//创建入库的list</span></span><br><span class=\"line\">    List&lt;UserStudy&gt; userStudyCount = <span class=\"keyword\">new</span> <span class=\"title class_\">ArrayList</span>&lt;&gt;();</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; i &lt; userStudyList.size(); i++) &#123;</span><br><span class=\"line\">        <span class=\"comment\">//调用insertBatchSomeColumn方法</span></span><br><span class=\"line\">        userStudyCount.add(userStudyList.get(i));</span><br><span class=\"line\">        <span class=\"comment\">//控制每次提交数量</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span>(userStudyCount.size()==<span class=\"number\">2</span>)&#123;</span><br><span class=\"line\">            userStudyMapper.insertBatchSomeColumn(userStudyCount);</span><br><span class=\"line\">            <span class=\"comment\">//将入库的list清空重新新增</span></span><br><span class=\"line\">            userStudyCount.clear();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">//将list中size不够2的数据在此处新增</span></span><br><span class=\"line\">    userStudyMapper.insertBatchSomeColumn(userStudyCount);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<br/>\n\n\n\n\n<h3 id=\"13、多表联查\"><a href=\"#13、多表联查\" class=\"headerlink\" title=\"13、多表联查\"></a>13、多表联查</h3><p>1、方法一：<br>（1）使用<code>QueryWrapper</code>查询器  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">QueryWrapper&lt;Project&gt; queryWrapper = <span class=\"keyword\">new</span> <span class=\"title class_\">QueryWrapper</span>&lt;&gt;();</span><br><span class=\"line\">queryWrapper.eq(<span class=\"string\">&quot;create_by&quot;</span>, LoginInterceptor.threadLocal.get().getId()).or().eq(<span class=\"string\">&quot;user_id&quot;</span>, LoginInterceptor.threadLocal.get().getId());</span><br></pre></td></tr></table></figure>\n<p>（2）在<code>mapper</code>接口继承<code>BaseMapper</code>写  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">String</span> <span class=\"variable\">userProjectSql</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;SELECT tp.*,tup.user_id FROM t_project tp LEFT JOIN t_user_project tup ON tp.id = tup.project_id&quot;</span>;</span><br><span class=\"line\"><span class=\"type\">String</span> <span class=\"variable\">pageSql</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;SELECT * FROM ( &quot;</span>+ userProjectSql + <span class=\"string\">&quot; ) AS t $&#123;ew.getCustomSqlSegment()&#125;&quot;</span>;</span><br><span class=\"line\"><span class=\"comment\">// 有分页</span></span><br><span class=\"line\"><span class=\"meta\">@Select(pageSql)</span></span><br><span class=\"line\">IPage&lt;Project&gt; <span class=\"title function_\">getPage</span><span class=\"params\">(IPage&lt;Project&gt; page, <span class=\"meta\">@Param(&quot;ew&quot;)</span> Wrapper&lt;Project&gt; wrapper)</span>;</span><br><span class=\"line\"><span class=\"comment\">// 没有分页</span></span><br><span class=\"line\"><span class=\"meta\">@Select(pageSql)</span></span><br><span class=\"line\">List&lt;Project&gt; <span class=\"title function_\">page</span><span class=\"params\">(<span class=\"meta\">@Param(&quot;ew&quot;)</span> Wrapper&lt;Project&gt; wrapper)</span>;</span><br></pre></td></tr></table></figure>\n\n<p>2、方法二：<br><a href=\"https://blog.csdn.net/qq_47923467/article/details/132371979\">点击链接</a>  </p>\n<br/>\n\n\n<h3 id=\"14、Mybatis-Plus文档教程\"><a href=\"#14、Mybatis-Plus文档教程\" class=\"headerlink\" title=\"14、Mybatis-Plus文档教程\"></a>14、Mybatis-Plus文档教程</h3><p><a href=\"https://baomidou.com/pages/10c804/#kotlin%E4%BD%BF%E7%94%A8wrapper\">点击链接</a>  </p>\n<br/>\n\n\n\n<h3 id=\"15、数据权限\"><a href=\"#15、数据权限\" class=\"headerlink\" title=\"15、数据权限\"></a>15、数据权限</h3><p>1、MyBatisPlusConfig配置：  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.ruoyi.framework.config;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> com.baomidou.mybatisplus.annotation.DbType;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.baomidou.mybatisplus.extension.plugins.MybatisPlusInterceptor;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.baomidou.mybatisplus.extension.plugins.inner.OptimisticLockerInnerInterceptor;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.baomidou.mybatisplus.extension.plugins.inner.PaginationInnerInterceptor;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.ruoyi.framework.datascope.DataScopeInterceptor;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.context.annotation.Bean;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.context.annotation.Configuration;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.transaction.annotation.EnableTransactionManagement;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * Mybatis Plus 配置</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"meta\">@EnableTransactionManagement(proxyTargetClass = true)</span></span><br><span class=\"line\"><span class=\"meta\">@Configuration</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">MybatisPlusConfig</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Bean</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> MybatisPlusInterceptor <span class=\"title function_\">mybatisPlusInterceptor</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"type\">MybatisPlusInterceptor</span> <span class=\"variable\">interceptor</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">MybatisPlusInterceptor</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// 数据权限</span></span><br><span class=\"line\">        interceptor.addInnerInterceptor(dataScopeInterceptor());</span><br><span class=\"line\">        <span class=\"comment\">// 分页插件</span></span><br><span class=\"line\">        interceptor.addInnerInterceptor(paginationInnerInterceptor());</span><br><span class=\"line\">        <span class=\"comment\">// 乐观锁插件</span></span><br><span class=\"line\">        interceptor.addInnerInterceptor(optimisticLockerInnerInterceptor());</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">return</span> interceptor;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 分页插件，自动识别数据库类型</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> PaginationInnerInterceptor <span class=\"title function_\">paginationInnerInterceptor</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"type\">PaginationInnerInterceptor</span> <span class=\"variable\">paginationInnerInterceptor</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">PaginationInnerInterceptor</span>();</span><br><span class=\"line\">        <span class=\"comment\">// 设置数据库类型为mysql</span></span><br><span class=\"line\">        paginationInnerInterceptor.setDbType(DbType.MYSQL);</span><br><span class=\"line\">        <span class=\"comment\">// 设置最大单页限制数量，默认 500 条，-1 不受限制</span></span><br><span class=\"line\">        paginationInnerInterceptor.setMaxLimit(-<span class=\"number\">1L</span>);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> paginationInnerInterceptor;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 乐观锁插件</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> OptimisticLockerInnerInterceptor <span class=\"title function_\">optimisticLockerInnerInterceptor</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"title class_\">OptimisticLockerInnerInterceptor</span>();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 数据权限插件</span></span><br><span class=\"line\"><span class=\"comment\">     *</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span> DataScopeInterceptor</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> DataScopeInterceptor <span class=\"title function_\">dataScopeInterceptor</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"title class_\">DataScopeInterceptor</span>();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>2、DataScopeInnerInterceptor数据权限拦截器配置  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.ruoyi.framework.datascope;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> cn.hutool.core.collection.CollectionUtil;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.baomidou.mybatisplus.core.toolkit.PluginUtils;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.baomidou.mybatisplus.extension.plugins.inner.InnerInterceptor;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.ruoyi.common.Enum.DataScopeTypeEnum;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.ruoyi.common.core.data.DataScope;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.ruoyi.common.core.domain.entity.SysRole;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.ruoyi.common.core.domain.entity.SysUser;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.ruoyi.common.core.domain.model.LoginUser;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.ruoyi.common.utils.ServletUtils;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.ruoyi.common.utils.StringUtils;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.ruoyi.common.utils.spring.SpringUtils;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.ruoyi.framework.web.service.TokenService;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.apache.ibatis.executor.Executor;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.apache.ibatis.mapping.BoundSql;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.apache.ibatis.mapping.MappedStatement;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.apache.ibatis.session.ResultHandler;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.apache.ibatis.session.RowBounds;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.List;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Map;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 数据权限</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">DataScopeInterceptor</span> <span class=\"keyword\">implements</span> <span class=\"title class_\">InnerInterceptor</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">beforeQuery</span><span class=\"params\">(Executor executor, MappedStatement ms, Object parameter, RowBounds rowBounds,</span></span><br><span class=\"line\"><span class=\"params\">                            ResultHandler resultHandler, BoundSql boundSql)</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        PluginUtils.<span class=\"type\">MPBoundSql</span> <span class=\"variable\">mpBs</span> <span class=\"operator\">=</span> PluginUtils.mpBoundSql(boundSql);</span><br><span class=\"line\">        <span class=\"type\">String</span> <span class=\"variable\">originalSql</span> <span class=\"operator\">=</span> boundSql.getSql();</span><br><span class=\"line\">        <span class=\"type\">Object</span> <span class=\"variable\">parameterObject</span> <span class=\"operator\">=</span> boundSql.getParameterObject();</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// 查找参数中包含DataScope类型的参数</span></span><br><span class=\"line\">        <span class=\"type\">DataScope</span> <span class=\"variable\">dataScope</span> <span class=\"operator\">=</span> findDataScopeObject(parameterObject);</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (dataScope == <span class=\"literal\">null</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"type\">LoginUser</span> <span class=\"variable\">loginUser</span> <span class=\"operator\">=</span> SpringUtils.getBean(TokenService.class).getLoginUser(ServletUtils.getRequest());</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (StringUtils.isNotNull(loginUser)) &#123;</span><br><span class=\"line\">            <span class=\"type\">SysUser</span> <span class=\"variable\">currentUser</span> <span class=\"operator\">=</span> loginUser.getUser();</span><br><span class=\"line\">            <span class=\"comment\">// 如果是超级管理员，则不过滤数据</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (StringUtils.isNotNull(currentUser) &amp;&amp; !currentUser.isAdmin()) &#123;</span><br><span class=\"line\">                <span class=\"type\">String</span> <span class=\"variable\">scopeName</span> <span class=\"operator\">=</span> dataScope.getScopeName();</span><br><span class=\"line\">                List&lt;String&gt; deptIds = dataScope.getDeptIds();</span><br><span class=\"line\"></span><br><span class=\"line\">                dataScopeFilter(currentUser, deptIds);</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (deptIds.isEmpty()) &#123;</span><br><span class=\"line\">                    originalSql = String.format(<span class=\"string\">&quot;SELECT %s FROM (%s) temp_data_scope WHERE 1 = 2&quot;</span>,</span><br><span class=\"line\">                            dataScope.getFunc().getType(), originalSql);</span><br><span class=\"line\">                &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                    <span class=\"type\">String</span> <span class=\"variable\">join</span> <span class=\"operator\">=</span> CollectionUtil.join(deptIds, <span class=\"string\">&quot;,&quot;</span>);</span><br><span class=\"line\">                    originalSql = String.format(<span class=\"string\">&quot;SELECT %s FROM (%s) temp_data_scope WHERE temp_data_scope.%s IN (%s)&quot;</span>,</span><br><span class=\"line\">                            dataScope.getFunc().getType(), originalSql, scopeName, join);</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        mpBs.sql(originalSql);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 查找参数是否包括DataScope对象</span></span><br><span class=\"line\"><span class=\"comment\">     *</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> parameterObj 参数列表</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span> DataScope</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> DataScope <span class=\"title function_\">findDataScopeObject</span><span class=\"params\">(Object parameterObj)</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (parameterObj <span class=\"keyword\">instanceof</span> DataScope) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> (DataScope) parameterObj;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (parameterObj <span class=\"keyword\">instanceof</span> Map) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (Object val : ((Map&lt;?, ?&gt;) parameterObj).values()) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (val <span class=\"keyword\">instanceof</span> DataScope) &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">return</span> (DataScope) val;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">null</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 数据范围</span></span><br><span class=\"line\"><span class=\"comment\">     *</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span></span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title function_\">dataScopeFilter</span><span class=\"params\">(SysUser user, List&lt;String&gt; deptList)</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">for</span> (SysRole role : user.getRoles()) &#123;</span><br><span class=\"line\">            <span class=\"type\">String</span> <span class=\"variable\">roleScope</span> <span class=\"operator\">=</span> role.getDataScope();</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (DataScopeTypeEnum.ALL.getType().equals(roleScope)) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">return</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (DataScopeTypeEnum.CUSTOM.getType().equals(roleScope)) &#123;</span><br><span class=\"line\">                <span class=\"comment\">//   获取自定义</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (DataScopeTypeEnum.OWN_CHILD_LEVEL.getType().equals(roleScope)) &#123;</span><br><span class=\"line\">                <span class=\"comment\">// 获取子集</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (DataScopeTypeEnum.OWN_LEVEL.getType().equals(roleScope)) &#123;</span><br><span class=\"line\">                deptList.add(user.getDeptId().toString());</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.ruoyi.common.core.data;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> com.ruoyi.common.Enum.DataScopeFuncEnum;</span><br><span class=\"line\"><span class=\"keyword\">import</span> lombok.Data;</span><br><span class=\"line\"><span class=\"keyword\">import</span> lombok.EqualsAndHashCode;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.ArrayList;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.HashMap;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.List;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 数据权限查询参数</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"meta\">@Data</span></span><br><span class=\"line\"><span class=\"meta\">@EqualsAndHashCode(callSuper = true)</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">DataScope</span> <span class=\"keyword\">extends</span> <span class=\"title class_\">HashMap</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 限制范围的字段名称</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"type\">String</span> <span class=\"variable\">scopeName</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;dept_id&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 具体的数据范围</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> List&lt;String&gt; deptIds = <span class=\"keyword\">new</span> <span class=\"title class_\">ArrayList</span>&lt;&gt;();</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 是否只查询本部门</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"type\">Boolean</span> <span class=\"variable\">isOnly</span> <span class=\"operator\">=</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 函数名称，默认 SELECT * ;</span></span><br><span class=\"line\"><span class=\"comment\">     *</span></span><br><span class=\"line\"><span class=\"comment\">     * &lt;ul&gt;</span></span><br><span class=\"line\"><span class=\"comment\">     * &lt;li&gt;COUNT(1)&lt;/li&gt;</span></span><br><span class=\"line\"><span class=\"comment\">     * &lt;/ul&gt;</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"type\">DataScopeFuncEnum</span> <span class=\"variable\">func</span> <span class=\"operator\">=</span> DataScopeFuncEnum.ALL;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.ruoyi.common.Enum;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> lombok.AllArgsConstructor;</span><br><span class=\"line\"><span class=\"keyword\">import</span> lombok.Getter;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 数据权限函数类型</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"meta\">@Getter</span></span><br><span class=\"line\"><span class=\"meta\">@AllArgsConstructor</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">enum</span> <span class=\"title class_\">DataScopeFuncEnum</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 查询全部数据 SELECT * FROM (originSql) temp_data_scope WHERE temp_data_scope.dept_id IN</span></span><br><span class=\"line\"><span class=\"comment\">     * (1)</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    ALL(<span class=\"string\">&quot;*&quot;</span>, <span class=\"string\">&quot;全部&quot;</span>),</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 查询函数COUNT SELECT COUNT(1) FROM (originSql) temp_data_scope WHERE</span></span><br><span class=\"line\"><span class=\"comment\">     * temp_data_scope.dept_id IN (1)</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    COUNT(<span class=\"string\">&quot;COUNT(1)&quot;</span>, <span class=\"string\">&quot;自定义&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 类型</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">final</span> String type;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 描述</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">final</span> String description;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n<br/>\n\n\n\n<h3 id=\"16、代码生成器\"><a href=\"#16、代码生成器\" class=\"headerlink\" title=\"16、代码生成器\"></a>16、代码生成器</h3><p><strong>说明：</strong>使用代码生成器之前，一定要配置好数据库。<br><a href=\"https://baomidou.com/guides/new-code-generator/\">查看官网使用方法</a></p>\n<br/>\n\n\n\n<h3 id=\"17、Service层的设置\"><a href=\"#17、Service层的设置\" class=\"headerlink\" title=\"17、Service层的设置\"></a>17、Service层的设置</h3><p>1、接口继承IService接口  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">interface</span> <span class=\"title class_\">UserService</span> <span class=\"keyword\">extends</span> <span class=\"title class_\">IService</span>&lt;User&gt; &#123;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>2、类继承ServiceImpl实现类  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Service</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">UserServiceImpl</span> <span class=\"keyword\">extends</span> <span class=\"title class_\">ServiceImpl</span>&lt;UserMapper,User&gt; <span class=\"keyword\">implements</span> <span class=\"title class_\">UserService</span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<br/>\n\n\n<h3 id=\"18、防止全表更新和删除\"><a href=\"#18、防止全表更新和删除\" class=\"headerlink\" title=\"18、防止全表更新和删除\"></a>18、防止全表更新和删除</h3><p>1、说明<br>针对 update 和 delete 语句 作用: 阻止恶意的全表更新删除。<br>2、在总的配置类中配置  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Bean</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> MybatisPlusInterceptor <span class=\"title function_\">mybatisPlusInterceptor</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">  <span class=\"type\">MybatisPlusInterceptor</span> <span class=\"variable\">interceptor</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">MybatisPlusInterceptor</span>();</span><br><span class=\"line\">  interceptor.addInnerInterceptor(<span class=\"keyword\">new</span> <span class=\"title class_\">BlockAttackInnerInterceptor</span>());</span><br><span class=\"line\">  <span class=\"keyword\">return</span> interceptor;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>3、测试  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Test</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">testQuick8</span><span class=\"params\">()</span>&#123;</span><br><span class=\"line\">    <span class=\"type\">User</span> <span class=\"variable\">user</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">User</span>();</span><br><span class=\"line\">    user.setName(<span class=\"string\">&quot;custom_name&quot;</span>);</span><br><span class=\"line\">    user.setEmail(<span class=\"string\">&quot;xxx@mail.com&quot;</span>);</span><br><span class=\"line\">    <span class=\"comment\">//Caused by: com.baomidou.mybatisplus.core.exceptions.MybatisPlusException: Prohibition of table update operation</span></span><br><span class=\"line\">    <span class=\"comment\">//全局更新,报错</span></span><br><span class=\"line\">    userService.saveOrUpdate(user,<span class=\"literal\">null</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<br/>  \n\n\n\n<h3 id=\"19、MyBatis-Plus代码生成器-MyBatisX插件\"><a href=\"#19、MyBatis-Plus代码生成器-MyBatisX插件\" class=\"headerlink\" title=\"19、MyBatis-Plus代码生成器(MyBatisX插件)\"></a>19、MyBatis-Plus代码生成器(MyBatisX插件)</h3><p>1、Mybatisx插件逆向工程<br>MyBatis-Plus为我们提供了强大的mapper和service模板，能够大大的提高开发效率<br>但是在真正开发过程中，MyBatis-Plus并不能为我们解决所有问题，例如一些复杂的SQL，多表联查，我们就需要自己去编写代码和SQL语句，我们该如何快速的解决这个问题呢，这个时候可以使用MyBatisX插件。<br>MyBatisX一款基于 IDEA 的快速开发插件，为效率而生。  </p>\n<img src=\"/2023/10/18/Mybatis-Plus%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/2.png\" class=\"\">  \n<img src=\"/2023/10/18/Mybatis-Plus%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/3.png\" class=\"\">  \n<img src=\"/2023/10/18/Mybatis-Plus%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/4.png\" class=\"\">  \n<p>2、MyBatisX快速代码生成<br>使用mybatisX插件,自动生成sql语句实现。<br><a href=\"https://baomidou.com/guides/mybatis-x/\">查看官网使用方法</a></p>\n<br/>\n\n\n<h3 id=\"20、自定义sql\"><a href=\"#20、自定义sql\" class=\"headerlink\" title=\"20、自定义sql\"></a>20、自定义sql</h3><p>利用<code>Wrapper</code>来构建复杂的<code>where</code>条件，然后自己定义sql语句中剩下的部分。<br>需求：将id在指定范围的用户（例如1、2、4）的余额扣减指定值。<br>原来使用mybatis时：  </p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">update</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;updateBalanceByIds&quot;</span>&gt;</span></span><br><span class=\"line\">  update user</span><br><span class=\"line\">  set balance = balance - #&#123;money&#125;</span><br><span class=\"line\">  where id in</span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">foreach</span> <span class=\"attr\">collection</span>=<span class=\"string\">&quot;ids&quot;</span> <span class=\"attr\">item</span>=<span class=\"string\">&quot;id&quot;</span> <span class=\"attr\">open</span>=<span class=\"string\">&quot;(&quot;</span> <span class=\"attr\">separator</span>=<span class=\"string\">&quot;,&quot;</span> <span class=\"attr\">close</span>=<span class=\"string\">&quot;)&quot;</span>&gt;</span></span><br><span class=\"line\">    #&#123;id&#125;</span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">foreach</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">update</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>现在使用mybatis-plus：<br>第一步：基于<code>Wrapper</code>构建<code>where</code>条件。  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">List&lt;Long&gt; ids = List.of(<span class=\"number\">1L</span>, <span class=\"number\">2L</span>, <span class=\"number\">4L</span>);</span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"variable\">money</span> <span class=\"operator\">=</span> <span class=\"number\">200</span>;</span><br><span class=\"line\">LambdaQueryWrapper&lt;User&gt; wrapper = <span class=\"keyword\">new</span> <span class=\"title class_\">LambdaQueryWrapper</span>&lt;User&gt;().in(User::getId, ids);</span><br><span class=\"line\">userMapper.updateBalanceByIds(wrapper, money);</span><br></pre></td></tr></table></figure>\n<p>第二步：在<code>mapper</code>方法参数中用<code>@Param</code>注解声明<code>wrapper</code>变量名称，必须是<code>ew</code>！！！  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// @Param(&quot;ew&quot;)可以使用@Param(Constants.WRAPPER)来替换</span></span><br><span class=\"line\"><span class=\"comment\">// Constants.WRAPPER是mybatis-plus中定义的常量，值为ew</span></span><br><span class=\"line\"><span class=\"keyword\">void</span> <span class=\"title function_\">updateBalanceByIds</span><span class=\"params\">(<span class=\"meta\">@Param(&quot;ew&quot;)</span> LambdaQueryWrapper&lt;User&gt; wrapper, <span class=\"meta\">@Param(&quot;money&quot;)</span> <span class=\"type\">int</span> money)</span>;</span><br></pre></td></tr></table></figure>\n<p>第三步：在<code>xml</code>或者使用注解形式自定义sql语句。<br><code>xml</code>方式：  </p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">update</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;updateBalanceByIds&quot;</span>&gt;</span></span><br><span class=\"line\">  update user set balance = balance - #&#123;money&#125; $&#123;ew.customSqlSegment&#125;</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">update</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>注解方式：  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Update(&quot;update user set balance = balance - #&#123;money&#125; $&#123;ew.customSqlSegment&#125;&quot;)</span></span><br><span class=\"line\"><span class=\"keyword\">void</span> <span class=\"title function_\">updateBalanceByIds</span><span class=\"params\">(<span class=\"meta\">@Param(&quot;ew&quot;)</span> LambdaQueryWrapper&lt;User&gt; wrapper, <span class=\"meta\">@Param(&quot;money&quot;)</span> <span class=\"type\">int</span> money)</span>;</span><br></pre></td></tr></table></figure>\n\n\n<br/>\n\n\n<h3 id=\"21、MP提供的Db工具类\"><a href=\"#21、MP提供的Db工具类\" class=\"headerlink\" title=\"21、MP提供的Db工具类\"></a>21、MP提供的Db工具类</h3><p>使用场景：当<code>UserService</code>中注入了<code>OrderService</code>，<code>OrderService</code>中注入了<code>UserService</code>，这样会产生循环依赖问题，此时可以使用<code>MybatisPlus</code>提供的<code>Db</code>工具类来避免这个问题。  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">UserService</span> &#123;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"meta\">@Autowired</span></span><br><span class=\"line\">\t<span class=\"keyword\">private</span> UserMapper userMapper;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">test</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"comment\">// 根据用户id查询用户</span></span><br><span class=\"line\">\t\t<span class=\"type\">User</span> <span class=\"variable\">user</span> <span class=\"operator\">=</span> userMapper.selectById(<span class=\"number\">1L</span>);</span><br><span class=\"line\">\t\t<span class=\"comment\">// 根据用户id查询订单</span></span><br><span class=\"line\">\t\t<span class=\"comment\">// 使用Db，Order为对应数据库的实体类</span></span><br><span class=\"line\">\t\tList&lt;Order&gt; orderList = Db.lambdaQuery(Order.class)</span><br><span class=\"line\">\t\t\t.eq(Order::getUserId, user.getId())</span><br><span class=\"line\">\t\t\t.list();</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n<br/>\n\n\n<h3 id=\"22、枚举处理器\"><a href=\"#22、枚举处理器\" class=\"headerlink\" title=\"22、枚举处理器\"></a>22、枚举处理器</h3><p>枚举类：  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Getter</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">enum</span> <span class=\"title class_\">UserStatus</span> &#123;</span><br><span class=\"line\">\tNORMAL(<span class=\"number\">1</span>, <span class=\"string\">&quot;正常&quot;</span>),</span><br><span class=\"line\">\tFREEZE(<span class=\"number\">2</span>, <span class=\"string\">&quot;冻结&quot;</span>);</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"comment\">// 此注解的含义是告诉数据库，在插入时，使用被此注解标注的属性入库</span></span><br><span class=\"line\">\t<span class=\"comment\">// com.baomidou.mybatisplus.annotation.EnumValue</span></span><br><span class=\"line\">\t<span class=\"meta\">@EnumValue</span></span><br><span class=\"line\">\t<span class=\"keyword\">private</span> <span class=\"keyword\">final</span> <span class=\"type\">int</span> value;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"comment\">// 此注解的含义是返回前端时，使用被此注解标注的属性显示</span></span><br><span class=\"line\">\t<span class=\"comment\">// com.fasterxml.jackson.annotation.JsonValue</span></span><br><span class=\"line\">\t<span class=\"meta\">@JsonValue</span></span><br><span class=\"line\">\t<span class=\"keyword\">private</span> <span class=\"keyword\">final</span> String desc;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\tUserStatus(<span class=\"type\">int</span> value, String desc) &#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">this</span>.value = value;</span><br><span class=\"line\">\t\t<span class=\"built_in\">this</span>.desc = desc;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>实体类：  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Date</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">User</span> &#123;</span><br><span class=\"line\">\t<span class=\"comment\">// ...其他属性</span></span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"comment\">// 用户状态(1正常，2冻结)</span></span><br><span class=\"line\">\t<span class=\"keyword\">private</span> UserStatus status;</span><br><span class=\"line\">\t<span class=\"comment\">// ...其他属性</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>需要在<code>application.yml</code>中配置枚举处理器：  </p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">mybatis-plus:</span></span><br><span class=\"line\">  <span class=\"attr\">configuration:</span></span><br><span class=\"line\">    <span class=\"comment\"># 枚举处理器</span></span><br><span class=\"line\">    <span class=\"attr\">default-enum-type-handler:</span> <span class=\"string\">com.baomidou.mybatisplus.core.handlers.MybatisEnumTypeHandler</span></span><br></pre></td></tr></table></figure>\n<p>这样在查询时，数据库中的枚举值会被自动转换为枚举对象。  </p>\n<br/>\n\n\n<h3 id=\"23、JSON处理器\"><a href=\"#23、JSON处理器\" class=\"headerlink\" title=\"23、JSON处理器\"></a>23、JSON处理器</h3><p>使用场景：当mysql中存储json类型的数据，我们查询出来时，json类型的数据在实体类中对应的是string类型，如果我们需要获取json中的某些属性，还得将string类型转换成json再获取，相当麻烦。<br>解决办法：我们可以创建一个实体类，对应json，实体类中的属性对应json中的属性，将使用原来的<code>String json</code>的string类型修改为该实体类，然后再使用JSON处理器。<br>json实体类：  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Date</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">JsonDemo</span> &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">private</span> String name;</span><br><span class=\"line\">\t<span class=\"keyword\">private</span> <span class=\"type\">int</span> age;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>数据库实体类：  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 一定要加autoResultMap = true</span></span><br><span class=\"line\"><span class=\"meta\">@Date</span></span><br><span class=\"line\"><span class=\"meta\">@TableName(value = &quot;user&quot;, autoResultMap = true)</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">User</span> &#123;</span><br><span class=\"line\">\t<span class=\"comment\">// ...其他属性</span></span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"comment\">// json数据，对应数据库中的json类型</span></span><br><span class=\"line\">\t<span class=\"comment\">// 原来是：private String jsonDemo;</span></span><br><span class=\"line\">\t<span class=\"comment\">// 现在修改为：private JsonDemo jsonDemo;</span></span><br><span class=\"line\">\t<span class=\"comment\">// JacksonTypeHandler是mybatis-plus提供的JSON处理器，一共有三个：JacksonTypeHandler、FastjsonTypeHandler、GsonTypeHandler</span></span><br><span class=\"line\">\t<span class=\"meta\">@TableField(typeHandler = JacksonTypeHandler.class)</span></span><br><span class=\"line\">\t<span class=\"keyword\">private</span> JsonDemo jsonDemo;</span><br><span class=\"line\">\t<span class=\"comment\">// ...其他属性</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>这样在查询时，数据库中的json类型的数据会被自动转换为json实体类对象。  </p>\n<br/>\n\n\n<h3 id=\"24、批量新增\"><a href=\"#24、批量新增\" class=\"headerlink\" title=\"24、批量新增\"></a>24、批量新增</h3><p>在<code>yaml</code>配置文件的连接数据库信息中，添加<code>rewriteBatchedStatements=true</code>（mysql 3.1.13开始就有了这个配置），这样就可以使用批量新增了。  </p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">spring:</span></span><br><span class=\"line\">  <span class=\"attr\">datasource:</span></span><br><span class=\"line\">    <span class=\"attr\">url:</span> <span class=\"string\">jdbc:mysql://localhost:3306/mybatis_plus?useUnicode=true&amp;characterEncoding=utf-8&amp;useSSL=false&amp;serverTimezone=UTC&amp;rewriteBatchedStatements=true</span></span><br></pre></td></tr></table></figure>\n<p>使用<code>mybatis-plus</code>的批量新增：  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Test</span></span><br><span class=\"line\"><span class=\"keyword\">void</span> <span class=\"title function_\">test</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">\t<span class=\"comment\">// 需求：一次性插入10万条数据</span></span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"comment\">// 我们可以每次批量插入1000条，插入100次</span></span><br><span class=\"line\">\t<span class=\"comment\">// 1、准备一个容量为1000的集合</span></span><br><span class=\"line\">\tList&lt;User&gt; userList = <span class=\"keyword\">new</span> <span class=\"title class_\">ArrayList</span>&lt;&gt;(<span class=\"number\">1000</span>);</span><br><span class=\"line\">\t<span class=\"comment\">// 2、循环100次，每次往集合中添加1000条数据</span></span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; i &lt; <span class=\"number\">100000</span>; i++) &#123;</span><br><span class=\"line\">\t\tlist.add(<span class=\"keyword\">new</span> <span class=\"title class_\">User</span>(<span class=\"literal\">null</span>, <span class=\"string\">&quot;张三&quot;</span> + i));</span><br><span class=\"line\">\t\t<span class=\"comment\">// 每1000条批量插入一次</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (i % <span class=\"number\">1000</span> == <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">\t\t\t<span class=\"comment\">// 3、批量插入</span></span><br><span class=\"line\">\t\t\tuserService.saveBatch(userList);</span><br><span class=\"line\">\t\t\t<span class=\"comment\">// 4、清空集合</span></span><br><span class=\"line\">\t\t\tuserList.clear();</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n","more":"<hr>\n<br/>\n\n\n<hr>\n<h1 id=\"一、快速入门一\"><a href=\"#一、快速入门一\" class=\"headerlink\" title=\"一、快速入门一\"></a>一、快速入门一</h1><p>1、数据库  </p>\n<table>\n<thead>\n<tr>\n<th>id</th>\n<th>name</th>\n<th>age</th>\n<th>email</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>1</td>\n<td>Jone</td>\n<td>18</td>\n<td><a href=\"mailto:test1@baomidou.com\">test1@baomidou.com</a></td>\n</tr>\n<tr>\n<td>2</td>\n<td>Jack</td>\n<td>20</td>\n<td><a href=\"mailto:test2@baomidou.com\">test2@baomidou.com</a></td>\n</tr>\n<tr>\n<td>3</td>\n<td>Tom</td>\n<td>28</td>\n<td><a href=\"mailto:test3@baomidou.com\">test3@baomidou.com</a></td>\n</tr>\n<tr>\n<td>4</td>\n<td>Sandy</td>\n<td>21</td>\n<td><a href=\"mailto:test4@baomidou.com\">test4@baomidou.com</a></td>\n</tr>\n<tr>\n<td>5</td>\n<td>Billie</td>\n<td>24</td>\n<td><a href=\"mailto:test5@baomidou.com\">test5@baomidou.com</a></td>\n</tr>\n</tbody></table>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">DROP</span> <span class=\"keyword\">TABLE</span> IF <span class=\"keyword\">EXISTS</span> <span class=\"keyword\">user</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">CREATE</span> <span class=\"keyword\">TABLE</span> <span class=\"keyword\">user</span></span><br><span class=\"line\">(</span><br><span class=\"line\">    id <span class=\"type\">BIGINT</span>(<span class=\"number\">20</span>) <span class=\"keyword\">NOT</span> <span class=\"keyword\">NULL</span> COMMENT <span class=\"string\">&#x27;主键ID&#x27;</span>,</span><br><span class=\"line\">    name <span class=\"type\">VARCHAR</span>(<span class=\"number\">30</span>) <span class=\"keyword\">NULL</span> <span class=\"keyword\">DEFAULT</span> <span class=\"keyword\">NULL</span> COMMENT <span class=\"string\">&#x27;姓名&#x27;</span>,</span><br><span class=\"line\">    age <span class=\"type\">INT</span>(<span class=\"number\">11</span>) <span class=\"keyword\">NULL</span> <span class=\"keyword\">DEFAULT</span> <span class=\"keyword\">NULL</span> COMMENT <span class=\"string\">&#x27;年龄&#x27;</span>,</span><br><span class=\"line\">    email <span class=\"type\">VARCHAR</span>(<span class=\"number\">50</span>) <span class=\"keyword\">NULL</span> <span class=\"keyword\">DEFAULT</span> <span class=\"keyword\">NULL</span> COMMENT <span class=\"string\">&#x27;邮箱&#x27;</span>,</span><br><span class=\"line\">    <span class=\"keyword\">PRIMARY</span> KEY (id)</span><br><span class=\"line\">);</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">INSERT</span> <span class=\"keyword\">INTO</span> <span class=\"keyword\">user</span> (id, name, age, email) <span class=\"keyword\">VALUES</span></span><br><span class=\"line\">(<span class=\"number\">1</span>, <span class=\"string\">&#x27;Jone&#x27;</span>, <span class=\"number\">18</span>, <span class=\"string\">&#x27;test1@baomidou.com&#x27;</span>),</span><br><span class=\"line\">(<span class=\"number\">2</span>, <span class=\"string\">&#x27;Jack&#x27;</span>, <span class=\"number\">20</span>, <span class=\"string\">&#x27;test2@baomidou.com&#x27;</span>),</span><br><span class=\"line\">(<span class=\"number\">3</span>, <span class=\"string\">&#x27;Tom&#x27;</span>, <span class=\"number\">28</span>, <span class=\"string\">&#x27;test3@baomidou.com&#x27;</span>),</span><br><span class=\"line\">(<span class=\"number\">4</span>, <span class=\"string\">&#x27;Sandy&#x27;</span>, <span class=\"number\">21</span>, <span class=\"string\">&#x27;test4@baomidou.com&#x27;</span>),</span><br><span class=\"line\">(<span class=\"number\">5</span>, <span class=\"string\">&#x27;Billie&#x27;</span>, <span class=\"number\">24</span>, <span class=\"string\">&#x27;test5@baomidou.com&#x27;</span>);</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>2、导入依赖  </p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?xml version=<span class=\"string\">&quot;1.0&quot;</span> encoding=<span class=\"string\">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">project</span> <span class=\"attr\">xmlns</span>=<span class=\"string\">&quot;http://maven.apache.org/POM/4.0.0&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">         <span class=\"attr\">xmlns:xsi</span>=<span class=\"string\">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">         <span class=\"attr\">xsi:schemaLocation</span>=<span class=\"string\">&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">modelVersion</span>&gt;</span>4.0.0<span class=\"tag\">&lt;/<span class=\"name\">modelVersion</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">parent</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework.boot<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-boot-starter-parent<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>3.0.5<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">parent</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>com.atguigu<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>springboot-starter-mybatis-plus-06<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>1.0-SNAPSHOT<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">properties</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">maven.compiler.source</span>&gt;</span>17<span class=\"tag\">&lt;/<span class=\"name\">maven.compiler.source</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">maven.compiler.target</span>&gt;</span>17<span class=\"tag\">&lt;/<span class=\"name\">maven.compiler.target</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">project.build.sourceEncoding</span>&gt;</span>UTF-8<span class=\"tag\">&lt;/<span class=\"name\">project.build.sourceEncoding</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">properties</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">dependencies</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework.boot<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-boot-starter<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"comment\">&lt;!-- 测试环境 --&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework.boot<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-boot-starter-test<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"comment\">&lt;!-- mybatis-plus  --&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>com.baomidou<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>mybatis-plus-boot-starter<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>3.5.3.1<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">&lt;!-- 数据库相关配置启动器 --&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework.boot<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-boot-starter-jdbc<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">&lt;!-- druid启动器的依赖  --&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>com.alibaba<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>druid-spring-boot-3-starter<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>1.2.18<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">&lt;!-- 驱动类--&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>mysql<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>mysql-connector-java<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>8.0.28<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.projectlombok<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>lombok<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>1.18.28<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">dependencies</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--    SpringBoot应用打包插件--&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">build</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">plugins</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">plugin</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework.boot<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-boot-maven-plugin<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">plugin</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">plugins</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">build</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">project</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>3、配置文件  </p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 连接池配置</span></span><br><span class=\"line\"><span class=\"attr\">spring:</span></span><br><span class=\"line\">  <span class=\"attr\">datasource:</span></span><br><span class=\"line\">    <span class=\"attr\">type:</span> <span class=\"string\">com.alibaba.druid.pool.DruidDataSource</span></span><br><span class=\"line\">    <span class=\"attr\">druid:</span></span><br><span class=\"line\">      <span class=\"attr\">url:</span> <span class=\"string\">jdbc:mysql:///day01</span></span><br><span class=\"line\">      <span class=\"attr\">username:</span> <span class=\"string\">root</span></span><br><span class=\"line\">      <span class=\"attr\">password:</span> <span class=\"string\">root</span></span><br><span class=\"line\">      <span class=\"attr\">driver-class-name:</span> <span class=\"string\">com.mysql.cj.jdbc.Driver</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>因为<code>Druid 1.2.18</code>版本对于springboot3不兼容，还需要进行兼容设置（<code>1.2.20</code>以上版本已经兼容了，不需要进行下面的兼容设置）：<br>（1）在<code>resources</code>资源目录下创建<code>META-INF.spring</code>文件夹，注意：<code>META-INF</code>和<code>spring</code>都是文件夹！<br>（2）在<code>META-INF.spring</code>文件夹下创建<code>org.springframework.boot.autoconfigure.AutoConfiguration.imports</code>文件（注意：这里全部都是文件名！）<br>（3）文件内容为：<code>com.alibaba.druid.spring.boot3.autoconfigure.DruidDataSourceAutoConfigure</code>。<br>4、启动类  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@MapperScan(&quot;xxx.xxx.mapper&quot;)</span></span><br><span class=\"line\"><span class=\"meta\">@SpringBootApplication</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">MainApplication</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        SpringApplication.run(MainApplication.class,args);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>5、Java实体类  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Data</span> <span class=\"comment\">// 此处使用了Lombok简化代码</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">User</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> Long id;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> String name;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> Integer age;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> String email;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>6、Mapper接口  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 继承mybatis-plus提供的基础Mapper接口，自带crud方法！</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">interface</span> <span class=\"title class_\">UserMapper</span> <span class=\"keyword\">extends</span> <span class=\"title class_\">BaseMapper</span>&lt;User&gt; &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>7、测试  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@SpringBootTest</span> <span class=\"comment\">//springboot下测试环境注解</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">SampleTest</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Autowired</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> UserMapper userMapper;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Test</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">testSelect</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        System.out.println((<span class=\"string\">&quot;----- selectAll method test ------&quot;</span>));</span><br><span class=\"line\">        List&lt;User&gt; userList = userMapper.selectList(<span class=\"literal\">null</span>);</span><br><span class=\"line\">        userList.forEach(System.out::println);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<br/>\n\n\n<hr>\n<br/>\n\n\n\n<h1 id=\"二、快速入门二\"><a href=\"#二、快速入门二\" class=\"headerlink\" title=\"二、快速入门二\"></a>二、快速入门二</h1><p>1、使用可视化工具创建数据库时：<br>（1）字符集：<code>utf8mb4</code>；<br>（2）排序规则：<code>utf8mb4_general_ci</code>。<br>建议大家选择utf8mb4这种字符集，做过微信的同学应该会知道，微信用户名称的表情，是需要这种字符集才能存储的。  </p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">CREATE</span> <span class=\"keyword\">TABLE</span> <span class=\"keyword\">user</span> (</span><br><span class=\"line\">  id <span class=\"type\">int</span>(<span class=\"number\">11</span>) <span class=\"keyword\">NOT</span> <span class=\"keyword\">NULL</span> AUTO_INCREMENT,</span><br><span class=\"line\">  nickname <span class=\"type\">varchar</span>(<span class=\"number\">255</span>) <span class=\"keyword\">NOT</span> <span class=\"keyword\">NULL</span> COMMENT <span class=\"string\">&#x27;昵称&#x27;</span>,</span><br><span class=\"line\">  sex tinyint(<span class=\"number\">1</span>) <span class=\"keyword\">NOT</span> <span class=\"keyword\">NULL</span> COMMENT <span class=\"string\">&#x27;性别，1男2女&#x27;</span>,</span><br><span class=\"line\">  create_time datetime <span class=\"keyword\">NOT</span> <span class=\"keyword\">NULL</span> COMMENT <span class=\"string\">&#x27;创建时间&#x27;</span>,</span><br><span class=\"line\">  is_delete tinyint(<span class=\"number\">1</span>) <span class=\"keyword\">NOT</span> <span class=\"keyword\">NULL</span> <span class=\"keyword\">DEFAULT</span> <span class=\"string\">&#x27;0&#x27;</span> COMMENT <span class=\"string\">&#x27;是否删除 1是，0否&#x27;</span>,</span><br><span class=\"line\">  <span class=\"keyword\">PRIMARY</span> KEY (id)</span><br><span class=\"line\">) ENGINE<span class=\"operator\">=</span>InnoDB AUTO_INCREMENT<span class=\"operator\">=</span><span class=\"number\">50</span> <span class=\"keyword\">DEFAULT</span> CHARSET<span class=\"operator\">=</span>utf8mb4;</span><br></pre></td></tr></table></figure>\n\n<p>2、引入依赖  </p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- mybatis-plus依赖 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>com.baomidou<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>mybatis-plus-boot-starter<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>3.5.0<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- mysql依赖 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>mysql<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>mysql-connector-java<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>8.0.27<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- 多数项目会有多数据源的要求，或者是主从部署的要求，所以我们还需要引入mybatis-plus关于多数据源的依赖 --&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- mybatis-plus 多数据源 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>com.baomidou<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>dynamic-datasource-spring-boot-starter<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>3.5.0<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>3、创建启动类  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 配置<span class=\"doctag\">@MapperScan</span>注解，用于扫描Mapper文件位置</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"meta\">@MapperScan(&quot;com.wjbgn.user.mapper&quot;)</span></span><br><span class=\"line\"><span class=\"meta\">@SpringBootApplication</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">RobNecessitiesUserApplication</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        SpringApplication.run(RobNecessitiesUserApplication.class, args);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>4、配置文件  </p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">spring:</span></span><br><span class=\"line\">  <span class=\"attr\">datasource:</span></span><br><span class=\"line\">    <span class=\"attr\">dynamic:</span></span><br><span class=\"line\">      <span class=\"attr\">primary:</span> <span class=\"string\">master设置默认的数据源或者数据源组,默认值即为master</span></span><br><span class=\"line\">      <span class=\"attr\">strict:</span> <span class=\"literal\">false</span><span class=\"string\">严格匹配数据源,默认false.</span> <span class=\"literal\">true</span><span class=\"string\">未匹配到指定数据源时抛异常,false使用默认数据源</span></span><br><span class=\"line\">      <span class=\"attr\">datasource:</span></span><br><span class=\"line\">        <span class=\"attr\">master:</span></span><br><span class=\"line\">          <span class=\"attr\">url:</span> <span class=\"string\">jdbc:mysql://127.0.0.1:3306/rob_necessities?useUnicode=true&amp;characterEncoding=utf-8&amp;useSSL=false&amp;serverTimezone</span> <span class=\"string\">=Asia/Shanghai</span></span><br><span class=\"line\">          <span class=\"attr\">username:</span> <span class=\"string\">root</span></span><br><span class=\"line\">          <span class=\"attr\">password:</span> <span class=\"number\">123456</span></span><br><span class=\"line\">        <span class=\"attr\">slave_1:</span></span><br><span class=\"line\">          <span class=\"attr\">url:</span> <span class=\"string\">jdbc:mysql://127.0.0.1:3306/rob_necessities?useUnicode=true&amp;characterEncoding=utf-8&amp;useSSL=false&amp;serverTimezone</span> <span class=\"string\">=Asia/Shanghai</span></span><br><span class=\"line\">          <span class=\"attr\">username:</span> <span class=\"string\">root</span></span><br><span class=\"line\">          <span class=\"attr\">password:</span> <span class=\"number\">123456</span></span><br></pre></td></tr></table></figure>\n<p>补充：这里面因为默认使用的是HikariCP数据源,目前也推荐使用这个，相比于druid有更高的性能，但是不能忽略下面的配置，否则服务会不断抛出异常，原因是数据库的连接时常和连接池的配置没有做好。  </p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">spring:</span></span><br><span class=\"line\">  <span class=\"attr\">datasource:</span></span><br><span class=\"line\">    <span class=\"attr\">dynamic:</span></span><br><span class=\"line\">      <span class=\"attr\">hikari:</span></span><br><span class=\"line\">        <span class=\"attr\">max-lifetime:</span> <span class=\"number\">1800000</span></span><br><span class=\"line\">        <span class=\"attr\">connection-timeout:</span> <span class=\"number\">5000</span></span><br><span class=\"line\">        <span class=\"attr\">idle-timeout:</span> <span class=\"number\">3600000</span></span><br><span class=\"line\">        <span class=\"attr\">max-pool-size:</span> <span class=\"number\">12</span></span><br><span class=\"line\">        <span class=\"attr\">min-idle:</span> <span class=\"number\">4</span></span><br><span class=\"line\">        <span class=\"attr\">connection-test-query:</span> <span class=\"string\">/**ping*/</span></span><br></pre></td></tr></table></figure>\n\n<p>5、实体类  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@TableName(value = &quot;user&quot;)</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">UserDO</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 主键</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"meta\">@TableId(value = &quot;id&quot;, type = IdType.AUTO)</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> Long id;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 昵称</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"meta\">@TableField(&quot;nickname&quot;)</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> String nickname;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 真实姓名</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> String realName;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>（1）@TableName：表名注解，用于标识实体类对应的表：  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@TableName</span>源码</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"meta\">@Documented</span></span><br><span class=\"line\"><span class=\"meta\">@Retention(RetentionPolicy.RUNTIME)</span></span><br><span class=\"line\"><span class=\"meta\">@Target(&#123;ElementType.TYPE, ElementType.ANNOTATION_TYPE&#125;)</span></span><br><span class=\"line\"><span class=\"keyword\">public</span><span class=\"meta\">@interface</span> TableName &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 实体对应的表名</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    String <span class=\"title function_\">value</span><span class=\"params\">()</span> <span class=\"keyword\">default</span> <span class=\"string\">&quot;&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * schema</span></span><br><span class=\"line\"><span class=\"comment\">     *</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@since</span> 3.1.1</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    String <span class=\"title function_\">schema</span><span class=\"params\">()</span> <span class=\"keyword\">default</span> <span class=\"string\">&quot;&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 是否保持使用全局的 tablePrefix 的值</span></span><br><span class=\"line\"><span class=\"comment\">     * &lt;p&gt; 只生效于 既设置了全局的 tablePrefix 也设置了上面 &#123;<span class=\"doctag\">@linkvalue</span>()&#125; 的值 &lt;/p&gt;</span></span><br><span class=\"line\"><span class=\"comment\">     * &lt;li&gt; 如果是 false , 全局的 tablePrefix 不生效 &lt;/li&gt;</span></span><br><span class=\"line\"><span class=\"comment\">     *</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@since</span> 3.1.1</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"type\">boolean</span> <span class=\"title function_\">keepGlobalPrefix</span><span class=\"params\">()</span> <span class=\"keyword\">default</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 实体映射结果集,</span></span><br><span class=\"line\"><span class=\"comment\">     * 只生效与 mp 自动注入的 method</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    String <span class=\"title function_\">resultMap</span><span class=\"params\">()</span> <span class=\"keyword\">default</span> <span class=\"string\">&quot;&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 是否自动构建 resultMap 并使用,</span></span><br><span class=\"line\"><span class=\"comment\">     * 只生效与 mp 自动注入的 method,</span></span><br><span class=\"line\"><span class=\"comment\">     * 如果设置 resultMap 则不会进行 resultMap 的自动构建并注入,</span></span><br><span class=\"line\"><span class=\"comment\">     * 只适合个别字段 设置了 typeHandler 或 jdbcType 的情况</span></span><br><span class=\"line\"><span class=\"comment\">     *</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@since</span> 3.1.2</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"type\">boolean</span> <span class=\"title function_\">autoResultMap</span><span class=\"params\">()</span> <span class=\"keyword\">default</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 需要排除的属性名</span></span><br><span class=\"line\"><span class=\"comment\">     *</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@since</span> 3.3.1</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    String[] excludeProperty() <span class=\"keyword\">default</span> &#123;&#125;;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>（2）@TableId：主键注解  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@TableId</span>源码</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"meta\">@Documented</span></span><br><span class=\"line\"><span class=\"meta\">@Retention(RetentionPolicy.RUNTIME)</span></span><br><span class=\"line\"><span class=\"meta\">@Target(&#123;ElementType.FIELD, ElementType.ANNOTATION_TYPE&#125;)</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"meta\">@interface</span> TableId &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 字段值（驼峰命名方式，该值可无）</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    String <span class=\"title function_\">value</span><span class=\"params\">()</span> <span class=\"keyword\">default</span> <span class=\"string\">&quot;&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 主键ID</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    IdType <span class=\"title function_\">type</span><span class=\"params\">()</span> <span class=\"keyword\">default</span> IdType.NONE;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>（3）@TableFiled：表字段标识  </p>\n<p>6、service层  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">interface</span> <span class=\"title class_\">IUserService</span> <span class=\"keyword\">extends</span> <span class=\"title class_\">IService</span>&lt;UserDO&gt; &#123;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@Service</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">UserServiceImpl</span> <span class=\"keyword\">extends</span> <span class=\"title class_\">ServiceImpl</span>&lt;UserMapper, UserDO&gt; <span class=\"keyword\">implements</span> <span class=\"title class_\">IUserService</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>7、mapper层  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Mapper</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">interface</span> <span class=\"title class_\">UserMapper</span> <span class=\"keyword\">extends</span> <span class=\"title class_\">BaseMapper</span>&lt;UserDO&gt; &#123;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>8、分页<br>使用分页话需要增加分页插件的配置：  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Configuration</span></span><br><span class=\"line\"><span class=\"meta\">@MapperScan(&quot;com.wjbgn.*.mapper*&quot;)</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">MybatisPlusConfig</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Bean</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> MybatisPlusInterceptor <span class=\"title function_\">mybatisPlusInterceptor</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"type\">MybatisPlusInterceptor</span> <span class=\"variable\">interceptor</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">MybatisPlusInterceptor</span>();</span><br><span class=\"line\">        interceptor.addInnerInterceptor(<span class=\"keyword\">new</span> <span class=\"title class_\">PaginationInnerInterceptor</span>(DbType.MYSQL));</span><br><span class=\"line\">        <span class=\"keyword\">return</span> interceptor;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>如上配置后，我们直接使用分页方法就行。  </p>\n<p>9、逻辑删除配置<br>很多情况下我们的系统都需要逻辑删除，方便恢复查找误删除的数据。<br>通过mybatis-plus可以通过全局配置的方式，而不需要再去手动处理。针对更新和查询操作有效，新增不做限制。<br>通常以我的习惯逻辑删除字段通常定义为is_delete,在实体类当中就是isDelete。那么在配置文件中就可以有如下的配置：  </p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mybatis-plus:</span><br><span class=\"line\">  global-config:</span><br><span class=\"line\">    db-config:</span><br><span class=\"line\">      logic-delete-field: isDelete 全局逻辑删除的实体字段名(since 3.3.0,配置后可以忽略不配置步骤2)</span><br><span class=\"line\">      logic-delete-value: 1 逻辑已删除值(默认为 1)</span><br><span class=\"line\">      logic-not-delete-value: 0 逻辑未删除值(默认为 0)</span><br></pre></td></tr></table></figure>\n<p>或者通过注解@TableLogic：  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@TableLogic</span></span><br><span class=\"line\"><span class=\"keyword\">private</span> Integer isDelete;</span><br></pre></td></tr></table></figure>\n\n<p>10、设置枚举类配置<br>相信后端的同学都经历过一个情况，比如性别这个字段，分别值和名称对应1男、2女,这个字段在数据库时是数值类型，而前端展示则是展示字符串的名称。有几种常见实现方案呢？<br>（1）数据库查询sql通过case判断，返回名称，以前oracle经常这么做；<br>（2）数据库返回的值，重新遍历赋值进去，这时候还需要判断这个值到底是男是女；<br>（3）前端写死，返回1就是男，返回2就是女。<br>相信无论哪种方法都有其缺点，所以我们可以使用mybatis-plus提供的方式。我们在返回给前端时：<br>（1）只需要在遍历时get这个枚举，直接赋值其名称，不需要再次判断；<br>（2）直接返回给前端，让前端去去枚举的name。<br>这样大家都不需要写死这个值。<br>实现步骤：<br>（1）创建枚举类，实现IEnum接口：  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@description</span>： 性别枚举</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@JsonFormat</span>注解为了解决枚举类返回前端只展示构造器名称的问题。</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"meta\">@JsonFormat(shape = JsonFormat.Shape.OBJECT)</span></span><br><span class=\"line\">publicenum SexEnum <span class=\"keyword\">implements</span> <span class=\"title class_\">IEnum</span>&lt;Integer&gt; &#123;</span><br><span class=\"line\">    MAN(<span class=\"number\">1</span>, <span class=\"string\">&quot;男&quot;</span>),</span><br><span class=\"line\">    WOMAN(<span class=\"number\">2</span>, <span class=\"string\">&quot;女&quot;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">private</span> Integer code;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> String name;</span><br><span class=\"line\"></span><br><span class=\"line\">    SexEnum(Integer code, String name) &#123;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.code = code;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.name = name;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> Integer <span class=\"title function_\">getValue</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> code;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> String <span class=\"title function_\">getName</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> name;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>（2）实体类性别字段  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@TableField(value = &quot;sex&quot;)</span></span><br><span class=\"line\"><span class=\"meta\">@JSONField(serialzeFeatures= SerializerFeature.WriteEnumUsingToString)</span></span><br><span class=\"line\"><span class=\"keyword\">private</span> SexEnum sex;</span><br></pre></td></tr></table></figure>\n<p>（3）配置文件扫描枚举  </p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">mybatis-plus:</span></span><br><span class=\"line\">  <span class=\"comment\"># 支持统配符 * 或者 ; 分割</span></span><br><span class=\"line\">  <span class=\"attr\">typeEnumsPackage:</span> <span class=\"string\">com.wjbgn.*.enums</span></span><br></pre></td></tr></table></figure>\n<p>（4）配置类  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> <span class=\"meta\">@Bean</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> MybatisPlusPropertiesCustomizer <span class=\"title function_\">mybatisPlusPropertiesCustomizer</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">     <span class=\"comment\">// 序列化枚举值为数据库存储值</span></span><br><span class=\"line\">     <span class=\"type\">FastJsonConfig</span> <span class=\"variable\">config</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">FastJsonConfig</span>();</span><br><span class=\"line\">     config.setSerializerFeatures(SerializerFeature.WriteEnumUsingToString);</span><br><span class=\"line\"></span><br><span class=\"line\">     <span class=\"keyword\">return</span> properties -&gt; &#123;</span><br><span class=\"line\">         <span class=\"type\">GlobalConfig</span> <span class=\"variable\">globalConfig</span> <span class=\"operator\">=</span> properties.getGlobalConfig();</span><br><span class=\"line\">         globalConfig.setBanner(<span class=\"literal\">false</span>);</span><br><span class=\"line\">         <span class=\"type\">MybatisConfiguration</span> <span class=\"variable\">configuration</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">MybatisConfiguration</span>();</span><br><span class=\"line\">         configuration.setDefaultEnumTypeHandler(MybatisEnumTypeHandler.class);</span><br><span class=\"line\">         properties.setConfiguration(configuration);</span><br><span class=\"line\">     &#125;;</span><br><span class=\"line\"> &#125;</span><br></pre></td></tr></table></figure>\n\n<p>11、自动填充<br>还记得前面提到的实体类当中的注解@TableFeild吗？当中有个属性叫做fill，通过FieldFill设置属性，这个就是做自动填充用的。  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">enum</span> <span class=\"title class_\">FieldFill</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 默认不处理</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    DEFAULT,</span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 插入填充字段</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    INSERT,</span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 更新填充字段</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    UPDATE,</span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 插入和更新填充字段</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    INSERT_UPDATE</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>但是这个直接是不能使用的，需要通过实现mybatis-plus提供的接口，增加如下配置：  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * description: 启动自动填充功能</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span>:</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"meta\">@Component</span></span><br><span class=\"line\">publicclass MyMetaObjectHandler <span class=\"keyword\">implements</span> <span class=\"title class_\">MetaObjectHandler</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">insertFill</span><span class=\"params\">(MetaObject metaObject)</span> &#123;</span><br><span class=\"line\">        <span class=\"comment\">// 起始版本 3.3.0(推荐使用)</span></span><br><span class=\"line\">        <span class=\"built_in\">this</span>.strictInsertFill(metaObject, <span class=\"string\">&quot;createTime&quot;</span>, LocalDateTime.class, LocalDateTime.now());</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">updateFill</span><span class=\"params\">(MetaObject metaObject)</span> &#123;</span><br><span class=\"line\">        <span class=\"comment\">// 起始版本 3.3.0(推荐)</span></span><br><span class=\"line\">        <span class=\"built_in\">this</span>.strictUpdateFill(metaObject, <span class=\"string\">&quot;updateTime&quot;</span>, LocalDateTime.class, LocalDateTime.now());</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>使用示例：  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@TableField(value = &quot;create_time&quot;,fill = FieldFill.INSERT)</span></span><br><span class=\"line\"><span class=\"keyword\">private</span> LocalDateTime createTime;</span><br></pre></td></tr></table></figure>\n\n<p>12、多数据源<br>（1）多主多从  </p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">spring:</span></span><br><span class=\"line\">  <span class=\"attr\">datasource:</span></span><br><span class=\"line\">    <span class=\"attr\">dynamic:</span></span><br><span class=\"line\">      <span class=\"attr\">primary:</span> <span class=\"string\">master设置默认的数据源或者数据源组,默认值即为master</span></span><br><span class=\"line\">      <span class=\"attr\">strict:</span> <span class=\"literal\">false</span><span class=\"string\">严格匹配数据源,默认false.</span> <span class=\"literal\">true</span><span class=\"string\">未匹配到指定数据源时抛异常,false使用默认数据源</span></span><br><span class=\"line\">      <span class=\"attr\">datasource:</span></span><br><span class=\"line\">        <span class=\"attr\">master_1:</span></span><br><span class=\"line\">        <span class=\"attr\">master_2:</span></span><br><span class=\"line\">        <span class=\"attr\">slave_1:</span></span><br><span class=\"line\">        <span class=\"attr\">slave_2:</span></span><br><span class=\"line\">        <span class=\"attr\">slave_3:</span></span><br></pre></td></tr></table></figure>\n<p>（2）多种数据库  </p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">spring:</span></span><br><span class=\"line\">  <span class=\"attr\">datasource:</span></span><br><span class=\"line\">    <span class=\"attr\">dynamic:</span></span><br><span class=\"line\">      <span class=\"attr\">primary:</span> <span class=\"string\">mysql设置默认的数据源或者数据源组,默认值即为master</span></span><br><span class=\"line\">      <span class=\"attr\">strict:</span> <span class=\"literal\">false</span><span class=\"string\">严格匹配数据源,默认false.</span> <span class=\"literal\">true</span><span class=\"string\">未匹配到指定数据源时抛异常,false使用默认数据源</span></span><br><span class=\"line\">      <span class=\"attr\">datasource:</span></span><br><span class=\"line\">        <span class=\"attr\">mysql:</span></span><br><span class=\"line\">        <span class=\"attr\">oracle:</span></span><br><span class=\"line\">        <span class=\"attr\">postgresql:</span></span><br><span class=\"line\">        <span class=\"attr\">h2:</span></span><br><span class=\"line\">        <span class=\"attr\">sqlserver:</span></span><br></pre></td></tr></table></figure>\n<p>（3）混合配置  </p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">spring:</span></span><br><span class=\"line\">  <span class=\"attr\">datasource:</span></span><br><span class=\"line\">    <span class=\"attr\">dynamic:</span></span><br><span class=\"line\">      <span class=\"attr\">primary:</span> <span class=\"string\">master设置默认的数据源或者数据源组,默认值即为master</span></span><br><span class=\"line\">      <span class=\"attr\">strict:</span> <span class=\"literal\">false</span><span class=\"string\">严格匹配数据源,默认false.</span> <span class=\"literal\">true</span><span class=\"string\">未匹配到指定数据源时抛异常,false使用默认数据源</span></span><br><span class=\"line\">      <span class=\"attr\">datasource:</span></span><br><span class=\"line\">        <span class=\"attr\">master_1:</span></span><br><span class=\"line\">        <span class=\"attr\">slave_1:</span></span><br><span class=\"line\">        <span class=\"attr\">slave_2:</span></span><br><span class=\"line\">        <span class=\"attr\">oracle_1:</span></span><br><span class=\"line\">        <span class=\"attr\">oracle_2:</span></span><br></pre></td></tr></table></figure>\n<p>（4）@DS注解<br>可以注解在方法上或类上，同时存在就近原则【方法上注解】优先于【类上注解】：  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@DS(&quot;slave_1&quot;)</span></span><br><span class=\"line\">publicclass UserServiceImpl <span class=\"keyword\">extends</span> <span class=\"title class_\">ServiceImpl</span>&lt;UserMapper, UserDO&gt; <span class=\"keyword\">implements</span> <span class=\"title class_\">IUserService</span> &#123;</span><br><span class=\"line\">    <span class=\"meta\">@DS(&quot;salve_1&quot;)</span></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> List&lt;UserDO&gt; <span class=\"title function_\">getList</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        returnthis.getList();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@DS(&quot;master&quot;)</span></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"type\">int</span> <span class=\"title function_\">saveUser</span><span class=\"params\">(UserDO userDO)</span> &#123;</span><br><span class=\"line\">        <span class=\"type\">boolean</span> <span class=\"variable\">save</span> <span class=\"operator\">=</span> <span class=\"built_in\">this</span>.save(userDO);</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (save)&#123;</span><br><span class=\"line\">            return1;</span><br><span class=\"line\">        &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">            return0;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>13、controller层  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@RestController</span></span><br><span class=\"line\"><span class=\"meta\">@RequestMapping(&quot;/user&quot;)</span></span><br><span class=\"line\">publicclass UserController &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Autowired</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> IUserService userService;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * description: 新增</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span>: boolean</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@author</span>: weirx</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@time</span>: 2022/1/17 19:11</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"meta\">@RequestMapping(&quot;/save&quot;)</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"type\">boolean</span> <span class=\"title function_\">save</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"type\">UserDO</span> <span class=\"variable\">userDO</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">UserDO</span>();</span><br><span class=\"line\">        userDO.setNickname(<span class=\"string\">&quot;大漂亮&quot;</span>);</span><br><span class=\"line\">        userDO.setSex(SexEnum.MAN);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">return</span> userService.save(userDO);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * description: 修改</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> nickname</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> id</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span>: boolean</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@author</span>: weirx</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@time</span>: 2022/1/17 19:11</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"meta\">@RequestMapping(&quot;/update&quot;)</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"type\">boolean</span> <span class=\"title function_\">update</span><span class=\"params\">(<span class=\"meta\">@RequestParam</span> String nickname,<span class=\"meta\">@RequestParam</span> Long id)</span> &#123;</span><br><span class=\"line\">        <span class=\"type\">UserDO</span> <span class=\"variable\">userDO</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">UserDO</span>();</span><br><span class=\"line\">        userDO.setNickname(nickname);</span><br><span class=\"line\">        userDO.setId(id);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> userService.updateById(userDO);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * description: 删除</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> id</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span>: boolean</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@author</span>: weirx</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@time</span>: 2022/1/17 19:11</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"meta\">@RequestMapping(&quot;/delete&quot;)</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"type\">boolean</span> <span class=\"title function_\">delete</span><span class=\"params\">(<span class=\"meta\">@RequestParam</span> Long id)</span> &#123;</span><br><span class=\"line\">        <span class=\"type\">UserDO</span> <span class=\"variable\">userDO</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">UserDO</span>();</span><br><span class=\"line\">        userDO.setId(id);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> userService.removeById(userDO);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * description: 列表</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span>: java.util.List&lt;com.wjbgn.user.entity.UserDO&gt;</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@author</span>: weirx</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@time</span>: 2022/1/17 19:11</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"meta\">@RequestMapping(&quot;/list&quot;)</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> List&lt;UserDO&gt; <span class=\"title function_\">list</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> userService.list();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * description: 分页列表</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> current</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> size</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span>: com.baomidou.mybatisplus.extension.plugins.pagination.Page</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@author</span>: weirx</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@time</span>: 2022/1/17 19:11</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"meta\">@RequestMapping(&quot;/page&quot;)</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> Page <span class=\"title function_\">page</span><span class=\"params\">(<span class=\"meta\">@RequestParam</span> <span class=\"type\">int</span> current,<span class=\"meta\">@RequestParam</span> <span class=\"type\">int</span> size)</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> userService.page(<span class=\"keyword\">new</span> <span class=\"title class_\">Page</span>&lt;&gt;(current,size), <span class=\"keyword\">new</span> <span class=\"title class_\">QueryWrapper</span>(<span class=\"keyword\">new</span> <span class=\"title class_\">UserDO</span>()));</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n\n<br/>\n\n\n<hr>\n<br/>\n\n\n\n\n\n<h1 id=\"三、基础知识与操作\"><a href=\"#三、基础知识与操作\" class=\"headerlink\" title=\"三、基础知识与操作\"></a>三、基础知识与操作</h1><h3 id=\"1、MybatisPlus需要的依赖\"><a href=\"#1、MybatisPlus需要的依赖\" class=\"headerlink\" title=\"1、MybatisPlus需要的依赖\"></a>1、MybatisPlus需要的依赖</h3><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- mysql连接驱动 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>mysql<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>mysql-connector-java<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>8.0.27<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>com.baomidou<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>mybatis-plus-boot-starter<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>3.4.3.1<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- 代码生成器依赖 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>com.baomidou<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>mybatis-plus-generator<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>3.4.0<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<br/>\n\n<h3 id=\"2、各种配置及日志输出\"><a href=\"#2、各种配置及日志输出\" class=\"headerlink\" title=\"2、各种配置及日志输出\"></a>2、各种配置及日志输出</h3><p>1、日志  </p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 这个默认的日志，输出到控制台，其它的需要导入依赖</span></span><br><span class=\"line\"><span class=\"string\">mybatis-plus.configuration.log-impl=org.apache.ibatis.logging.stdout.StdOutImpl</span></span><br></pre></td></tr></table></figure>\n<p>2、配置mapper.xml文件的位置<br>（1）配置  </p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">mybatis-plus:</span> <span class=\"comment\"># mybatis-plus的配置</span></span><br><span class=\"line\">  <span class=\"comment\"># 默认位置 private String[] mapperLocations = new String[]&#123;&quot;classpath*:/mapper/**/*.xml&quot;&#125;;    </span></span><br><span class=\"line\">  <span class=\"attr\">mapper-locations:</span> <span class=\"string\">classpath:/mapper/*.xml</span></span><br></pre></td></tr></table></figure>\n<p>（2）自定义mapper方法：  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">interface</span> <span class=\"title class_\">UserMapper</span> <span class=\"keyword\">extends</span> <span class=\"title class_\">BaseMapper</span>&lt;User&gt; &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//正常自定义方法！</span></span><br><span class=\"line\">    <span class=\"comment\">//可以使用注解@Select或者mapper.xml实现</span></span><br><span class=\"line\">    List&lt;User&gt; <span class=\"title function_\">queryAll</span><span class=\"params\">()</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>（3）基于mapper.xml实现：  </p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?xml version=<span class=\"string\">&quot;1.0&quot;</span> encoding=<span class=\"string\">&quot;UTF-8&quot;</span> ?&gt;</span></span><br><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"keyword\">mapper</span></span></span><br><span class=\"line\"><span class=\"meta\">        <span class=\"keyword\">PUBLIC</span> <span class=\"string\">&quot;-//mybatis.org//DTD Mapper 3.0//EN&quot;</span></span></span><br><span class=\"line\"><span class=\"meta\">        <span class=\"string\">&quot;https://mybatis.org/dtd/mybatis-3-mapper.dtd&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- namespace = 接口的全限定符 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">mapper</span> <span class=\"attr\">namespace</span>=<span class=\"string\">&quot;com.atguigu.mapper.UserMapper&quot;</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"tag\">&lt;<span class=\"name\">select</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;queryAll&quot;</span> <span class=\"attr\">resultType</span>=<span class=\"string\">&quot;user&quot;</span> &gt;</span></span><br><span class=\"line\">       select * from user</span><br><span class=\"line\">   <span class=\"tag\">&lt;/<span class=\"name\">select</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>3、配置实体类映射数据库表名前缀以及主键策略  </p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">mybatis-plus:</span></span><br><span class=\"line\">  <span class=\"attr\">configuration:</span></span><br><span class=\"line\">    <span class=\"comment\"># 配置MyBatis日志</span></span><br><span class=\"line\">    <span class=\"attr\">log-impl:</span> <span class=\"string\">org.apache.ibatis.logging.stdout.StdOutImpl</span></span><br><span class=\"line\">  <span class=\"attr\">global-config:</span></span><br><span class=\"line\">    <span class=\"attr\">db-config:</span></span><br><span class=\"line\">      <span class=\"comment\"># 配置MyBatis-Plus操作表的默认前缀</span></span><br><span class=\"line\">      <span class=\"attr\">table-prefix:</span> <span class=\"string\">t_</span></span><br><span class=\"line\">      <span class=\"comment\"># 配置MyBatis-Plus的主键策略</span></span><br><span class=\"line\">      <span class=\"attr\">id-type:</span> <span class=\"string\">auto</span></span><br></pre></td></tr></table></figure>\n<p>4、全局配置逻辑删除  </p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">mybatis-plus:</span></span><br><span class=\"line\">  <span class=\"attr\">global-config:</span></span><br><span class=\"line\">    <span class=\"attr\">db-config:</span></span><br><span class=\"line\">      <span class=\"attr\">logic-delete-field:</span> <span class=\"string\">deleted</span> <span class=\"comment\"># 全局逻辑删除的实体字段名(since 3.3.0,这里配置后可以不去实体类中配置@TableLogic)</span></span><br><span class=\"line\">      <span class=\"attr\">logic-delete-value:</span> <span class=\"number\">1</span> <span class=\"comment\"># 逻辑已删除值(默认为 1)</span></span><br><span class=\"line\">      <span class=\"attr\">logic-not-delete-value:</span> <span class=\"number\">0</span> <span class=\"comment\"># 逻辑未删除值(默认为 0)</span></span><br></pre></td></tr></table></figure>\n\n<br/>\n\n<h3 id=\"3、实体类中主键以及其他属性配置\"><a href=\"#3、实体类中主键以及其他属性配置\" class=\"headerlink\" title=\"3、实体类中主键以及其他属性配置\"></a>3、实体类中主键以及其他属性配置</h3><p>1、主键  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/** type的值：</span></span><br><span class=\"line\"><span class=\"comment\">  * ID_WORKER： 全局唯一id，默认方式</span></span><br><span class=\"line\"><span class=\"comment\">  * AUTO： 自增，设置了这个之后，数据库里也一定要设置自增才会生效，不然会报错</span></span><br><span class=\"line\"><span class=\"comment\">  * NONE：  未设置主键</span></span><br><span class=\"line\"><span class=\"comment\">  * INPUT：  手动输入</span></span><br><span class=\"line\"><span class=\"comment\">  * UUID：  全局唯一id，uuid</span></span><br><span class=\"line\"><span class=\"comment\">  * ID_WORKER_STR：  ID_WORKER字符串标识法</span></span><br><span class=\"line\"><span class=\"comment\">  * ASSIGN_ID：分配 D(主键类型为 Number(Long )或 String)(since 3.3.0),使用接口IdentifierGenerator的方法nextId(默认实现类为DefaultIdentifierGenerator雪花算法)</span></span><br><span class=\"line\"><span class=\"comment\">**/</span></span><br><span class=\"line\">   <span class=\"meta\">@TableId(value = &quot;id&quot;, type = IdType.INPUT)</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> String id;</span><br></pre></td></tr></table></figure>\n<p>雪花算法使用场景<br>雪花算法（Snowflake Algorithm）是一种用于生成唯一ID的算法。它由Twitter公司提出，用于解决分布式系统中生成全局唯一ID的需求。<br>在传统的自增ID生成方式中，使用单点数据库生成ID会成为系统的瓶颈，而雪花算法通过在分布式系统中生成唯一ID，避免了单点故障和性能瓶颈的问题。<br>雪花算法生成的ID是一个64位的整数，由以下几个部分组成：<br>（1）时间戳：41位，精确到毫秒级，可以使用69年。<br>（2）节点ID：10位，用于标识分布式系统中的不同节点。<br>（3）序列号：12位，表示在同一毫秒内生成的不同ID的序号。<br>通过将这三个部分组合在一起，雪花算法可以在分布式系统中生成全局唯一的ID，并保证ID的生成顺序性。<br>雪花算法的工作方式如下：<br>（1）当前时间戳从某一固定的起始时间开始计算，可以用于计算ID的时间部分。<br>（2）节点ID是分布式系统中每个节点的唯一标识，可以通过配置或自动分配的方式获得。<br>（3）序列号用于记录在同一毫秒内生成的不同ID的序号，从0开始自增，最多支持4096个ID生成。<br>需要注意的是，雪花算法依赖于系统的时钟，需要确保系统时钟的准确性和单调性，否则可能会导致生成的ID不唯一或不符合预期的顺序。<br>雪花算法是一种简单但有效的生成唯一ID的算法，广泛应用于分布式系统中，如微服务架构、分布式数据库、分布式锁等场景，以满足全局唯一标识的需求。<br> <strong>你需要记住的: 雪花算法生成的数字,需要使用Long 或者 String类型主键!!</strong>  </p>\n<p>2、其他属性  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 使用场景：</span></span><br><span class=\"line\"><span class=\"comment\"> * 1、成员变量名与数据库字段名不一致</span></span><br><span class=\"line\"><span class=\"comment\"> * 2、成员变量名以is开头，且是布尔值</span></span><br><span class=\"line\"><span class=\"comment\"> * 3、成员变量名与数据库关键字冲突</span></span><br><span class=\"line\"><span class=\"comment\"> * 4、成员变量不是数据库字段</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"comment\">// 成员变量名与数据库字段名不一致</span></span><br><span class=\"line\"><span class=\"meta\">@TableField(value = &quot;name&quot;)</span></span><br><span class=\"line\"><span class=\"keyword\">private</span> String username;</span><br><span class=\"line\"><span class=\"comment\">// 成员变量名以is开头，且是布尔值</span></span><br><span class=\"line\"><span class=\"meta\">@TableField(value = &quot;is_flag&quot;)</span></span><br><span class=\"line\"><span class=\"keyword\">private</span> Boolean isFlag;</span><br><span class=\"line\"><span class=\"comment\">// 成员变量名与数据库关键字冲突，注意这里使用反引号</span></span><br><span class=\"line\"><span class=\"meta\">@TableField(value = &quot;`order`&quot;)</span></span><br><span class=\"line\"><span class=\"keyword\">private</span> Integer order;</span><br><span class=\"line\"><span class=\"comment\">// 成员变量不是数据库字段</span></span><br><span class=\"line\"><span class=\"meta\">@TableField(exist=false)</span></span><br><span class=\"line\"><span class=\"keyword\">private</span> String username;</span><br></pre></td></tr></table></figure>\n\n<br/>\n\n<h3 id=\"4、自动填充数据\"><a href=\"#4、自动填充数据\" class=\"headerlink\" title=\"4、自动填充数据\"></a>4、自动填充数据</h3><p>1、第一种：数据库操作<br>在数据库表中创建两个字段，分别是create_time,update_time，填上默认值：CURRENT_TIMESTAMP （时间戳），然后将更新勾选上，然后需要在实体类中同步这两个属性，在实体类中创建这两个属性。<br>2、第二种：代码级别<br>在数据库和实体类都创建这两个字段，然后添加注解TableField，在创建时间属性上为@TableField(fill &#x3D; FieldFill.INSERT)，在更新时间属性上为@TableField(fill &#x3D; FieldFill.UPDATE)，然后创建一个配置类来处理，如下：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Component</span></span><br><span class=\"line\">  <span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">MyMetaObjectHandler</span> implement MetaObjectHandler &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 插入时填充</span></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">insertFill</span><span class=\"params\">(MetaObject metaObject)</span> &#123;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.setFieldValByName(<span class=\"string\">&quot;createTime&quot;</span>,<span class=\"keyword\">new</span> <span class=\"title class_\">Date</span>(),metaObject);</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.setFieldValByName(<span class=\"string\">&quot;updateTime&quot;</span>,<span class=\"keyword\">new</span> <span class=\"title class_\">Date</span>(),metaObject);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 更新时填充</span></span><br><span class=\"line\">   <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">updateFill</span><span class=\"params\">(MetaObject metaObject)</span> &#123;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.setFieldValByName(<span class=\"string\">&quot;updateTime&quot;</span>,<span class=\"keyword\">new</span> <span class=\"title class_\">Date</span>(),metaObject);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<br/>\n\n<h3 id=\"5、注意版本区别\"><a href=\"#5、注意版本区别\" class=\"headerlink\" title=\"5、注意版本区别\"></a>5、注意版本区别</h3><p>（1）mysql 5：驱动不同 com.mysql.jdbc.Driver<br>（2）mysql 8：驱动不同 com.mysql.cj.jdbc.Driver，需要增加时区的配置 serverTimezone&#x3D;GMT</p>\n<br/>\n\n<h3 id=\"6、使用方法\"><a href=\"#6、使用方法\" class=\"headerlink\" title=\"6、使用方法\"></a>6、使用方法</h3><p><strong>特别说明：</strong>dao要继承mybatis-plus的BaseMapper<T>，”&lt;&gt;”里的是具体的实体类，这里是什么类，增删改查就会针对这个实体类对应的数据库表来进行操作，如果需要查询其它表的信息，就必须自己在xml中写sql语句。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 查询全部</span></span><br><span class=\"line\">List&lt;User&gt; users = userDao.selectList(<span class=\"literal\">null</span>);</span><br><span class=\"line\">users.forEach(System.out::println);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 根据ID更新数据</span></span><br><span class=\"line\"><span class=\"type\">User</span> <span class=\"variable\">user</span> <span class=\"operator\">=</span> users.get(<span class=\"number\">1</span>); <span class=\"comment\">// 这里要从0开始，意思0对应数据库里的第一条数据</span></span><br><span class=\"line\">user.setAge(<span class=\"number\">28</span>);</span><br><span class=\"line\"><span class=\"comment\">// 它是动态拼接sql更新语句的</span></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> userDao.updateById(user);</span><br><span class=\"line\">System.out.println(i);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 通过ID查询一条数据</span></span><br><span class=\"line\"> <span class=\"type\">User</span> <span class=\"variable\">user1</span> <span class=\"operator\">=</span> userDao.selectById(<span class=\"number\">1</span>);</span><br><span class=\"line\">System.out.println(user1);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 批量查询</span></span><br><span class=\"line\"> List&lt;User&gt; users = userDao.selectBatchIds(Arrays.asList(<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>));</span><br><span class=\"line\">users.forEach(System.out::println);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 动态条件查询</span></span><br><span class=\"line\">Map&lt;String,Object&gt; map = <span class=\"keyword\">new</span> <span class=\"title class_\">HashMap</span>&lt;&gt;();</span><br><span class=\"line\">map.put(<span class=\"string\">&quot;name&quot;</span>,<span class=\"string\">&quot;左冲&quot;</span>);</span><br><span class=\"line\">map.put(<span class=\"string\">&quot;age&quot;</span>,<span class=\"number\">24</span>); <span class=\"comment\">// 加条件是在sql语句后加 and age=24</span></span><br><span class=\"line\">List&lt;User&gt; users = userDao.selectByMap(map);</span><br><span class=\"line\">users.forEach(System.out::println);</span><br></pre></td></tr></table></figure>\n\n<br/>\n\n<h3 id=\"7、乐观锁和悲观锁\"><a href=\"#7、乐观锁和悲观锁\" class=\"headerlink\" title=\"7、乐观锁和悲观锁\"></a>7、乐观锁和悲观锁</h3><h4 id=\"（1）乐观锁\"><a href=\"#（1）乐观锁\" class=\"headerlink\" title=\"（1）乐观锁\"></a>（1）乐观锁</h4><p>1、思想<br>乐观锁的基本思想是，认为并发冲突的概率较低，因此不需要提前加锁，而是在数据更新阶段进行冲突检测和处理。乐观锁的核心思想是”先修改，后校验”。在乐观锁的应用中，线程在读取共享资源时不会加锁，而是记录特定的版本信息。当线程准备更新资源时，会先检查该资源的版本信息是否与之前读取的版本信息一致，如果一致则执行更新操作，否则说明有其他线程修改了该资源，需要进行相应的冲突处理。乐观锁通过避免加锁操作，提高了系统的并发性能和吞吐量，但是在并发冲突较为频繁的情况下，乐观锁会导致较多的冲突处理和重试操作。<br>乐观锁实现方案和技术<br>（1）版本号&#x2F;时间戳：为数据添加一个版本号或时间戳字段，每次更新数据时，比较当前版本号或时间戳与期望值是否一致，若一致则更新成功，否则表示数据已被修改，需要进行冲突处理。<br>（2）CAS（Compare-and-Swap）：使用原子操作比较当前值与旧值是否一致，若一致则进行更新操作，否则重新尝试。<br>（3）无锁数据结构：采用无锁数据结构，如无锁队列、无锁哈希表等，通过使用原子操作实现并发安全。<br>2、介绍<br>A、B两个线程更新一条数据，A取出这条数据获取到的version为1.0，A更新这条数据的同时，B也取出这条数据获取到的version也为1.0，A完成更新，version变为2.0，但是B更新的时候version是1.0，所以B更新失败。<br>3、乐观锁实现方式<br>（1）取出数据，获取当前version<br>（2）更新时，带上这个version<br>（3）执行更新时，set version &#x3D; newVersion where version &#x3D; oldVersion，如果version不对，就更新失败。<br>4、操作<br>（1）在数据库中增加version字段，对应的实体类中也要增加一个属性version，并加上注解@Version。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Vsersion</span></span><br><span class=\"line\"><span class=\"keyword\">private</span> Integer version;</span><br></pre></td></tr></table></figure>\n<p>（2）添加配置类<br>之前配置（单独配置）：  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@MapperScan(&quot;com.zuo.dao&quot;)</span> <span class=\"comment\">// 扫描dao层</span></span><br><span class=\"line\"><span class=\"meta\">@EnableTransactionManagement</span> <span class=\"comment\">// 开启事务管理</span></span><br><span class=\"line\"><span class=\"meta\">@Configuration</span> <span class=\"comment\">// 配置类</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">MybatisPlusConfig</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 注册乐观锁插件</span></span><br><span class=\"line\">    <span class=\"meta\">@Bean</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> OptimisticLockerInterceptor <span class=\"title function_\">optimisticLockerInterceptor</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"title class_\">OptimisticLockerInterceptor</span>();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>现在配置（在总的配置类中配置）：<br>可以在<code>MybatisPlusInterceptor</code>这个方法中配置分页等插件。  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Bean</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> MybatisPlusInterceptor <span class=\"title function_\">mybatisPlusInterceptor</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">    <span class=\"type\">MybatisPlusInterceptor</span> <span class=\"variable\">interceptor</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">MybatisPlusInterceptor</span>();</span><br><span class=\"line\">    interceptor.addInnerInterceptor(<span class=\"keyword\">new</span> <span class=\"title class_\">OptimisticLockerInnerInterceptor</span>());</span><br><span class=\"line\">    <span class=\"keyword\">return</span> interceptor;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"（2）悲观锁\"><a href=\"#（2）悲观锁\" class=\"headerlink\" title=\"（2）悲观锁\"></a>（2）悲观锁</h4><p>1、思想<br>悲观锁的基本思想是，在整个数据访问过程中，将共享资源锁定，以确保其他线程或进程不能同时访问和修改该资源。悲观锁的核心思想是”先保护，再修改”。在悲观锁的应用中，线程在访问共享资源之前会获取到锁，并在整个操作过程中保持锁的状态，阻塞其他线程的访问。只有当前线程完成操作后，才会释放锁，让其他线程继续操作资源。这种锁机制可以确保资源独占性和数据的一致性，但是在高并发环境下，悲观锁的效率相对较低。<br>悲观锁实现方案和技术：<br>（1）锁机制：使用传统的锁机制，如互斥锁（Mutex Lock）或读写锁（Read-Write Lock）来保证对共享资源的独占访问。<br>（2）数据库锁：在数据库层面使用行级锁或表级锁来控制并发访问。<br>（3）信号量（Semaphore）：使用信号量来限制对资源的并发访问。  </p>\n<br/>\n\n<h3 id=\"8、分页\"><a href=\"#8、分页\" class=\"headerlink\" title=\"8、分页\"></a>8、分页</h3><p>1、之前版本<br>（1）需要在配置类中注入分页（新版本不知道需不需要配置）</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@MapperScan(&quot;com.zuo.dao&quot;)</span> <span class=\"comment\">// 扫描dao层</span></span><br><span class=\"line\"><span class=\"meta\">@EnableTransactionManagement</span> <span class=\"comment\">// 开启事务管理</span></span><br><span class=\"line\"><span class=\"meta\">@Configuration</span> <span class=\"comment\">// 配置类</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">MybatisPlusConfig</span> &#123;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">// 注册分页插件</span></span><br><span class=\"line\">    <span class=\"meta\">@Bean</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> PaginationInterceptor <span class=\"title function_\">paginationInterceptor</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"title class_\">PaginationInterceptor</span>();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>（2）操作  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// new Page&lt;&gt;(1,1)：（pageNo, pageSize）</span></span><br><span class=\"line\"><span class=\"comment\">// Page&lt;User&gt;，尖括号里面的实体类是什么就针对对应的表来进行查询分页</span></span><br><span class=\"line\">Page&lt;User&gt; page = <span class=\"keyword\">new</span> <span class=\"title class_\">Page</span>&lt;&gt;(<span class=\"number\">1</span>,<span class=\"number\">1</span>);</span><br><span class=\"line\"><span class=\"comment\">// null：条件查询器，下面会有第9点</span></span><br><span class=\"line\">Page&lt;User&gt; userPage = userDao.selectPage(page, <span class=\"literal\">null</span>);</span><br><span class=\"line\">System.out.println(userPage);</span><br><span class=\"line\"><span class=\"comment\">// page.getRecords()：是一个数组，它的样子是这样的</span></span><br><span class=\"line\">[</span><br><span class=\"line\">  User&#123;id=<span class=\"number\">1</span>, name=<span class=\"string\">&#x27;左冲&#x27;</span>, sex=<span class=\"string\">&#x27;男&#x27;</span>, age=<span class=\"number\">28</span>&#125;, </span><br><span class=\"line\">  User&#123;id=<span class=\"number\">2</span>, name=<span class=\"string\">&#x27;李四&#x27;</span>, sex=<span class=\"string\">&#x27;男&#x27;</span>, age=<span class=\"number\">28</span>&#125;, </span><br><span class=\"line\">  User&#123;id=<span class=\"number\">3</span>, name=<span class=\"string\">&#x27;小明&#x27;</span>, sex=<span class=\"string\">&#x27;男&#x27;</span>, age=<span class=\"number\">24</span>&#125;</span><br><span class=\"line\">]</span><br><span class=\"line\">System.out.println(page.getRecords());</span><br><span class=\"line\">page.getRecords().forEach(System.out::println);</span><br></pre></td></tr></table></figure>\n<p>2、现在版本<br>（1）在配置类中加入下面的方法  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Bean</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> MybatisPlusInterceptor <span class=\"title function_\">mybatisPlusInterceptor</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">    <span class=\"type\">MybatisPlusInterceptor</span> <span class=\"variable\">interceptor</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">MybatisPlusInterceptor</span>();</span><br><span class=\"line\">\t<span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">\t * 可以使用new PaginationInnerInterceptor(DbType.MYSQL)来配置分页属性，比如：配置分页上限</span></span><br><span class=\"line\"><span class=\"comment\">\t * PaginationInnerInterceptor pageInterceptor = new PaginationInnerInterceptor(DbType.MYSQL);</span></span><br><span class=\"line\"><span class=\"comment\">\t * pageInterceptor.setMaxLimit(500L);</span></span><br><span class=\"line\"><span class=\"comment\">\t */</span></span><br><span class=\"line\">    interceptor.addInnerInterceptor(<span class=\"keyword\">new</span> <span class=\"title class_\">PaginationInnerInterceptor</span>(DbType.MYSQL));</span><br><span class=\"line\">    <span class=\"keyword\">return</span> interceptor;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>（2）操作  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Test</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">testPageQuery</span><span class=\"params\">()</span>&#123;</span><br><span class=\"line\">\t<span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">\t * 设置分页参数一</span></span><br><span class=\"line\"><span class=\"comment\">\t * Page&lt;User&gt; page = Page.of(1, 5);</span></span><br><span class=\"line\"><span class=\"comment\">\t */</span></span><br><span class=\"line\">    <span class=\"comment\">//设置分页参数二</span></span><br><span class=\"line\">    Page&lt;User&gt; page = <span class=\"keyword\">new</span> <span class=\"title class_\">Page</span>&lt;&gt;(<span class=\"number\">1</span>, <span class=\"number\">5</span>);</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">\t * 设置排序</span></span><br><span class=\"line\"><span class=\"comment\">\t * 先根据创建时间排序升序，再根据id排序升序</span></span><br><span class=\"line\"><span class=\"comment\">\t * 下面的create_time是数据库中的字段名</span></span><br><span class=\"line\"><span class=\"comment\">\t * true：升序asc</span></span><br><span class=\"line\"><span class=\"comment\">\t * false：降序desc</span></span><br><span class=\"line\"><span class=\"comment\">\t * page.addOrder(new OrderItem(&quot;create_time&quot;, true));</span></span><br><span class=\"line\"><span class=\"comment\">\t * page.addOrder(new OrderItem(&quot;id&quot;, true));</span></span><br><span class=\"line\"><span class=\"comment\">\t */</span></span><br><span class=\"line\">\t</span><br><span class=\"line\">    userMapper.selectPage(page, <span class=\"literal\">null</span>);</span><br><span class=\"line\">    <span class=\"comment\">//获取分页数据</span></span><br><span class=\"line\">    List&lt;User&gt; list = page.getRecords();</span><br><span class=\"line\">    list.forEach(System.out::println);</span><br><span class=\"line\">    System.out.println(<span class=\"string\">&quot;当前页：&quot;</span>+page.getCurrent());</span><br><span class=\"line\">    System.out.println(<span class=\"string\">&quot;每页显示的条数：&quot;</span>+page.getSize());</span><br><span class=\"line\">    System.out.println(<span class=\"string\">&quot;总记录数：&quot;</span>+page.getTotal());</span><br><span class=\"line\">    System.out.println(<span class=\"string\">&quot;总页数：&quot;</span>+page.getPages());</span><br><span class=\"line\">    System.out.println(<span class=\"string\">&quot;是否有上一页：&quot;</span>+page.hasPrevious());</span><br><span class=\"line\">    System.out.println(<span class=\"string\">&quot;是否有下一页：&quot;</span>+page.hasNext());</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>3、自定义的mapper方法使用分页<br>（1）在mapper接口中定义方法  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//传入参数携带Ipage接口</span></span><br><span class=\"line\"><span class=\"comment\">//返回结果为IPage</span></span><br><span class=\"line\">IPage&lt;User&gt; <span class=\"title function_\">selectPageVo</span><span class=\"params\">(IPage&lt;?&gt; page, Integer id)</span>;</span><br></pre></td></tr></table></figure>\n<p>（2）在mapper.xml中编写sql  </p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">select</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;selectPageVo&quot;</span> <span class=\"attr\">resultType</span>=<span class=\"string\">&quot;xxx.xxx.xxx.User&quot;</span>&gt;</span></span><br><span class=\"line\">    SELECT * FROM user WHERE id &gt; #&#123;id&#125;</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">select</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>（3）测试  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Test</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">testQuick</span><span class=\"params\">()</span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"type\">IPage</span> <span class=\"variable\">page</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Page</span>(<span class=\"number\">1</span>,<span class=\"number\">2</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    userMapper.selectPageVo(page,<span class=\"number\">2</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"type\">long</span> <span class=\"variable\">current</span> <span class=\"operator\">=</span> page.getCurrent();</span><br><span class=\"line\">    System.out.println(<span class=\"string\">&quot;current = &quot;</span> + current);</span><br><span class=\"line\">    <span class=\"type\">long</span> <span class=\"variable\">pages</span> <span class=\"operator\">=</span> page.getPages();</span><br><span class=\"line\">    System.out.println(<span class=\"string\">&quot;pages = &quot;</span> + pages);</span><br><span class=\"line\">    <span class=\"type\">long</span> <span class=\"variable\">total</span> <span class=\"operator\">=</span> page.getTotal();</span><br><span class=\"line\">    System.out.println(<span class=\"string\">&quot;total = &quot;</span> + total);</span><br><span class=\"line\">    <span class=\"type\">List</span> <span class=\"variable\">records</span> <span class=\"operator\">=</span> page.getRecords();</span><br><span class=\"line\">    System.out.println(<span class=\"string\">&quot;records = &quot;</span> + records);</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<br/>\n\n<h3 id=\"9、逻辑删除\"><a href=\"#9、逻辑删除\" class=\"headerlink\" title=\"9、逻辑删除\"></a>9、逻辑删除</h3><p>1、在实体类中增加字段delFlag字段，并在字段上面使用注解@TableLogic，还需要在数据库中增加一个逻辑删除标识字段del_flag，0：存在，1：删除该数据。<br><strong>说明：</strong>在数据库中添加这个字段之后，执行删除操作的时候，它会自动将删除操作转变为更新操作，将del_flag更改为1，表示删除此数据，再执行查找的时候就查找不到该数据，但是数据库中还是存在该数据。<br>2、在配置类中注入逻辑删除组件，在配置文件中配置，新版本不知道需不需要配置：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 配置类中配置</span></span><br><span class=\"line\"><span class=\"meta\">@Bean</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> ISqlInjector <span class=\"title function_\">sqlInjector</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"title class_\">LogicSqlInjector</span>();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>这里使用的是单一指定逻辑删除，全局指定逻辑删除查看第<code>2</code>点各种配置。<br>3、操作</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@TableLogic</span></span><br><span class=\"line\"><span class=\"keyword\">private</span> Integer delFlag;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> userDao.deleteById(<span class=\"number\">2</span>);</span><br><span class=\"line\">System.out.println(i);</span><br><span class=\"line\">List&lt;User&gt; users = userDao.selectList(<span class=\"literal\">null</span>);</span><br><span class=\"line\">users.forEach(System.out::println);</span><br></pre></td></tr></table></figure>\n\n<br/>\n\n<h3 id=\"10、条件构造器的使用\"><a href=\"#10、条件构造器的使用\" class=\"headerlink\" title=\"10、条件构造器的使用\"></a>10、条件构造器的使用</h3><h4 id=\"（1）方法说明\"><a href=\"#（1）方法说明\" class=\"headerlink\" title=\"（1）方法说明\"></a>（1）方法说明</h4><img src=\"/2023/10/18/Mybatis-Plus%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/1.png\" class=\"\">\n\n<h4 id=\"（2）QueryWrapper查询器\"><a href=\"#（2）QueryWrapper查询器\" class=\"headerlink\" title=\"（2）QueryWrapper查询器\"></a>（2）QueryWrapper查询器</h4><p>1、组装查询条件  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Test</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">test01</span><span class=\"params\">()</span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">//查询用户名包含a，年龄在20到30之间，并且邮箱不为null的用户信息</span></span><br><span class=\"line\">    <span class=\"comment\">//SELECT id,username AS name,age,email,is_deleted FROM t_user WHERE is_deleted=0 AND (username LIKE ? AND age BETWEEN ? AND ? AND email IS NOT NULL)</span></span><br><span class=\"line\">    QueryWrapper&lt;User&gt; queryWrapper = <span class=\"keyword\">new</span> <span class=\"title class_\">QueryWrapper</span>&lt;&gt;();</span><br><span class=\"line\">    queryWrapper.like(<span class=\"string\">&quot;username&quot;</span>, <span class=\"string\">&quot;a&quot;</span>)</span><br><span class=\"line\">            .between(<span class=\"string\">&quot;age&quot;</span>, <span class=\"number\">20</span>, <span class=\"number\">30</span>)</span><br><span class=\"line\">            .isNotNull(<span class=\"string\">&quot;email&quot;</span>);</span><br><span class=\"line\">    List&lt;User&gt; list = userMapper.selectList(queryWrapper);</span><br><span class=\"line\">    list.forEach(System.out::println);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>2、组装排序条件  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Test</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">test02</span><span class=\"params\">()</span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">//按年龄降序查询用户，如果年龄相同则按id升序排列</span></span><br><span class=\"line\">    <span class=\"comment\">//SELECT id,username AS name,age,email,is_deleted FROM t_user WHERE is_deleted=0 ORDER BY age DESC,id ASC</span></span><br><span class=\"line\">    QueryWrapper&lt;User&gt; queryWrapper = <span class=\"keyword\">new</span> <span class=\"title class_\">QueryWrapper</span>&lt;&gt;();</span><br><span class=\"line\">    queryWrapper</span><br><span class=\"line\">            .orderByDesc(<span class=\"string\">&quot;age&quot;</span>)</span><br><span class=\"line\">            .orderByAsc(<span class=\"string\">&quot;id&quot;</span>);</span><br><span class=\"line\">    List&lt;User&gt; users = userMapper.selectList(queryWrapper);</span><br><span class=\"line\">    users.forEach(System.out::println);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>3、组装删除条件  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Test</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">test03</span><span class=\"params\">()</span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">//删除email为空的用户</span></span><br><span class=\"line\">    <span class=\"comment\">//DELETE FROM t_user WHERE (email IS NULL)</span></span><br><span class=\"line\">    QueryWrapper&lt;User&gt; queryWrapper = <span class=\"keyword\">new</span> <span class=\"title class_\">QueryWrapper</span>&lt;&gt;();</span><br><span class=\"line\">    queryWrapper.isNull(<span class=\"string\">&quot;email&quot;</span>);</span><br><span class=\"line\">    <span class=\"comment\">//条件构造器也可以构建删除语句的条件</span></span><br><span class=\"line\">    <span class=\"type\">int</span> <span class=\"variable\">result</span> <span class=\"operator\">=</span> userMapper.delete(queryWrapper);</span><br><span class=\"line\">    System.out.println(<span class=\"string\">&quot;受影响的行数：&quot;</span> + result);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>4、and和or关键字使用(修改)  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Test</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">test04</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">    QueryWrapper&lt;User&gt; queryWrapper = <span class=\"keyword\">new</span> <span class=\"title class_\">QueryWrapper</span>&lt;&gt;();</span><br><span class=\"line\">    <span class=\"comment\">//将年龄大于20并且用户名中包含有a或邮箱为null的用户信息修改</span></span><br><span class=\"line\">    <span class=\"comment\">//UPDATE t_user SET age=?, email=? WHERE username LIKE ? AND age &gt; ? OR email IS NULL)</span></span><br><span class=\"line\">    queryWrapper</span><br><span class=\"line\">            .like(<span class=\"string\">&quot;username&quot;</span>, <span class=\"string\">&quot;a&quot;</span>)</span><br><span class=\"line\">            .gt(<span class=\"string\">&quot;age&quot;</span>, <span class=\"number\">20</span>)</span><br><span class=\"line\">            .or()</span><br><span class=\"line\">            .isNull(<span class=\"string\">&quot;email&quot;</span>);</span><br><span class=\"line\">    <span class=\"type\">User</span> <span class=\"variable\">user</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">User</span>();</span><br><span class=\"line\">    user.setAge(<span class=\"number\">18</span>);</span><br><span class=\"line\">    user.setEmail(<span class=\"string\">&quot;user@atguigu.com&quot;</span>);</span><br><span class=\"line\">    <span class=\"type\">int</span> <span class=\"variable\">result</span> <span class=\"operator\">=</span> userMapper.update(user, queryWrapper);</span><br><span class=\"line\">    System.out.println(<span class=\"string\">&quot;受影响的行数：&quot;</span> + result);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>5、指定列映射查询  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Test</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">test05</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">//查询用户信息的username和age字段</span></span><br><span class=\"line\">    <span class=\"comment\">//SELECT username,age FROM t_user</span></span><br><span class=\"line\">    QueryWrapper&lt;User&gt; queryWrapper = <span class=\"keyword\">new</span> <span class=\"title class_\">QueryWrapper</span>&lt;&gt;();</span><br><span class=\"line\">    queryWrapper.select(<span class=\"string\">&quot;username&quot;</span>, <span class=\"string\">&quot;age&quot;</span>);</span><br><span class=\"line\">    <span class=\"comment\">//selectMaps()返回Map集合列表，通常配合select()使用，避免User对象中没有被查询到的列值为null</span></span><br><span class=\"line\">    List&lt;Map&lt;String, Object&gt;&gt; maps = userMapper.selectMaps(queryWrapper);</span><br><span class=\"line\">    maps.forEach(System.out::println);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>6、condition判断组织条件  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> <span class=\"meta\">@Test</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">testQuick3</span><span class=\"params\">()</span>&#123;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"type\">String</span> <span class=\"variable\">name</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;root&quot;</span>;</span><br><span class=\"line\">    <span class=\"type\">int</span>    <span class=\"variable\">age</span> <span class=\"operator\">=</span> <span class=\"number\">18</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    QueryWrapper&lt;User&gt; queryWrapper = <span class=\"keyword\">new</span> <span class=\"title class_\">QueryWrapper</span>&lt;&gt;();</span><br><span class=\"line\">    <span class=\"comment\">//判断条件拼接</span></span><br><span class=\"line\">    <span class=\"comment\">//当name不为null拼接等于, age &gt; 1 拼接等于判断</span></span><br><span class=\"line\">    <span class=\"comment\">//方案1: 手动判断</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!StringUtils.isEmpty(name))&#123;</span><br><span class=\"line\">        queryWrapper.eq(<span class=\"string\">&quot;name&quot;</span>,name);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (age &gt; <span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">        queryWrapper.eq(<span class=\"string\">&quot;age&quot;</span>,age);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">//方案2: 拼接condition判断</span></span><br><span class=\"line\">    <span class=\"comment\">//每个条件拼接方法都condition参数,这是一个比较运算,为true追加当前条件!</span></span><br><span class=\"line\">    <span class=\"comment\">//eq(condition,列名,值)</span></span><br><span class=\"line\">    queryWrapper.eq(!StringUtils.isEmpty(name),<span class=\"string\">&quot;name&quot;</span>,name)</span><br><span class=\"line\">            .eq(age&gt;<span class=\"number\">1</span>,<span class=\"string\">&quot;age&quot;</span>,age);   </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"（3）UpdateWrapper更新器\"><a href=\"#（3）UpdateWrapper更新器\" class=\"headerlink\" title=\"（3）UpdateWrapper更新器\"></a>（3）UpdateWrapper更新器</h4><p>特别说明：<br>（1）更新数据库时不仅可以用<code>UpdateWrapper</code>，也可以用<code>queryWrapper</code>，具体操作可以查看第<code>11</code>点；<br>（2）使用queryWrapper + 实体类形式可以实现修改，但是无法将列值修改为null值；<br>（3）使用updateWrapper可以随意设置列的值。  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Test</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">testQuick2</span><span class=\"params\">()</span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    UpdateWrapper&lt;User&gt; updateWrapper = <span class=\"keyword\">new</span> <span class=\"title class_\">UpdateWrapper</span>&lt;&gt;();</span><br><span class=\"line\">    <span class=\"comment\">//将id = 3 的email设置为null, age = 18</span></span><br><span class=\"line\">    updateWrapper.eq(<span class=\"string\">&quot;id&quot;</span>,<span class=\"number\">3</span>)</span><br><span class=\"line\">            .set(<span class=\"string\">&quot;email&quot;</span>,<span class=\"literal\">null</span>)  <span class=\"comment\">// set 指定列和结果</span></span><br><span class=\"line\">            .set(<span class=\"string\">&quot;age&quot;</span>,<span class=\"number\">18</span>);</span><br><span class=\"line\">    <span class=\"comment\">//如果使用updateWrapper 实体对象写null即可!</span></span><br><span class=\"line\">    <span class=\"type\">int</span> <span class=\"variable\">result</span> <span class=\"operator\">=</span> userMapper.update(<span class=\"literal\">null</span>, updateWrapper);</span><br><span class=\"line\">    System.out.println(<span class=\"string\">&quot;result = &quot;</span> + result);</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<br/>\n\n\n<h3 id=\"11、更新时需要注意的问题\"><a href=\"#11、更新时需要注意的问题\" class=\"headerlink\" title=\"11、更新时需要注意的问题\"></a>11、更新时需要注意的问题</h3><p>更新指定字段：  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">UpdateWrapper&lt;xxx&gt; updateWrapper = <span class=\"keyword\">new</span> <span class=\"title class_\">UpdateWrapper</span>&lt;&gt;();</span><br><span class=\"line\">updateWrapper.eq(<span class=\"string\">&quot;id&quot;</span>,id); <span class=\"comment\">// 根据id去判断更新那条数据</span></span><br><span class=\"line\">updateWrapper.set(<span class=\"string\">&quot;state&quot;</span>, <span class=\"number\">2</span>); <span class=\"comment\">// .set 就是去更改的字段，第一个参数为字段名， 第二个参数为更改的值</span></span><br><span class=\"line\">xxxMapper.update(<span class=\"literal\">null</span>, updateWrapper);</span><br></pre></td></tr></table></figure>\n<p>1、使用<code>QueryWrapper</code>修改需要注意<br>（1）需要new一个需要修改的实体类数据，比如下面例子中的User；<br>（2）它不能修改为null的数据，如果属性为null的，它不修改。  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 将年龄大于20并且用户名中包含有a或邮箱为null的用户信息修改</span></span><br><span class=\"line\"><span class=\"comment\">// 下面代码转为sql：update user set age=?,email=? where name like &#x27;a&#x27; and age&gt;20 or email is null</span></span><br><span class=\"line\">QueryWrapper&lt;User&gt; queryWrapper = <span class=\"keyword\">new</span> <span class=\"title class_\">QueryWrapper</span>&lt;&gt;();</span><br><span class=\"line\">queryWrapper.gt(<span class=\"string\">&quot;age&quot;</span>, <span class=\"number\">20</span>)</span><br><span class=\"line\">\t\t\t.like(<span class=\"string\">&quot;name&quot;</span>, <span class=\"string\">&quot;a&quot;</span>)</span><br><span class=\"line\">\t\t\t.or()</span><br><span class=\"line\">\t\t\t.isNull(<span class=\"string\">&quot;email&quot;</span>);</span><br><span class=\"line\"><span class=\"type\">User</span> <span class=\"variable\">user</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">User</span>();</span><br><span class=\"line\">user.setAge(<span class=\"number\">88</span>);</span><br><span class=\"line\">user.setEmail(<span class=\"literal\">null</span>); <span class=\"comment\">// 注意：这里是不能修改为null的</span></span><br><span class=\"line\">userMapper.update(user, queryWrapper);</span><br></pre></td></tr></table></figure>\n<p>2、使用<code>UpdateWrapper</code>修改<br>（1）不需要new实体类，直接使用<code>set</code>方法修改;<br>（2）可以将数据修改为null。  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 下面等同于：update user set age=99,email=null where name like &#x27;a&#x27; and age&gt;20 or email is null</span></span><br><span class=\"line\">UpdateWrapper&lt;User&gt; updateWrapper = <span class=\"keyword\">new</span> <span class=\"title class_\">UpdateWrapper</span>&lt;&gt;();</span><br><span class=\"line\">updateWrapper.gt(<span class=\"string\">&quot;age&quot;</span>, <span class=\"number\">20</span>)</span><br><span class=\"line\">\t\t\t.like(<span class=\"string\">&quot;name&quot;</span>, <span class=\"string\">&quot;a&quot;</span>)</span><br><span class=\"line\">\t\t\t.or()</span><br><span class=\"line\">\t\t\t.isNull(<span class=\"string\">&quot;email&quot;</span>)</span><br><span class=\"line\">\t\t\t.set(<span class=\"string\">&quot;email&quot;</span>, <span class=\"literal\">null</span>)</span><br><span class=\"line\">\t\t\t.set(<span class=\"string\">&quot;age&quot;</span>, <span class=\"number\">99</span>);</span><br><span class=\"line\"><span class=\"comment\">// 下面第一个参数必须为null</span></span><br><span class=\"line\">userMapper.update(<span class=\"literal\">null</span>, updateWrapper);</span><br></pre></td></tr></table></figure>\n\n<br/>\n\n\n\n<h3 id=\"12、批量插入\"><a href=\"#12、批量插入\" class=\"headerlink\" title=\"12、批量插入\"></a>12、批量插入</h3><p>两种方法：<br>1、第一种方法，调用<code>service</code>自带的<code>saveBatch</code>方法，底层也是通过<code>for</code>来完成，默认是一个事务一次提交1000条数据，点击进入<code>saveBatch</code>可以看到， 也可以自定义每次提交多少条；<br>2、<code>insertBatchSomeColumn</code><br>（1）自定义SQL注入器  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> com.baomidou.mybatisplus.core.injector.AbstractMethod;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.baomidou.mybatisplus.core.injector.DefaultSqlInjector;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.baomidou.mybatisplus.extension.injector.methods.InsertBatchSomeColumn;</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.List;</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">InsertBatchSqlInjector</span> <span class=\"keyword\">extends</span> <span class=\"title class_\">DefaultSqlInjector</span> &#123;</span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> List&lt;AbstractMethod&gt; <span class=\"title function_\">getMethodList</span><span class=\"params\">(Class&lt;?&gt; mapperClass)</span> &#123;</span><br><span class=\"line\">        List&lt;AbstractMethod&gt; methodList = <span class=\"built_in\">super</span>.getMethodList(mapperClass);</span><br><span class=\"line\">        methodList.add(<span class=\"keyword\">new</span> <span class=\"title class_\">InsertBatchSomeColumn</span>()); <span class=\"comment\">//添加InsertBatchSomeColumn方法</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> methodList;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>（2）把SQL注入器交给Spring  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.context.annotation.Bean;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.stereotype.Component;</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"meta\">@Component</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">MybatisPlusConfig</span> &#123;</span><br><span class=\"line\">    <span class=\"meta\">@Bean</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> InsertBatchSqlInjector <span class=\"title function_\">easySqlInjector</span> <span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"title class_\">InsertBatchSqlInjector</span>();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>到此定义完毕，在<code>Mapper</code>中生成<code>insertBatchSomeColumn</code>（必须是这个方法名）方法，你就可以撒手不管了，直接调用就行，或者直接在<code>ServiceImpl</code>通过<code>Mapper</code>调用<code>insertBatchSomeColumn</code>，然后<code>ALT+回车</code>生成此方法。<br>测试代码，调用<code>insertBatchSomeColumn</code>方法：  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Resource</span></span><br><span class=\"line\"><span class=\"keyword\">private</span> UserStudyMapper userStudyMapper;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\"> *批量插入</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"meta\">@Override</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">greatMany</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">    List&lt;UserStudy&gt; userStudyList = <span class=\"keyword\">new</span> <span class=\"title class_\">ArrayList</span>&lt;&gt;();</span><br><span class=\"line\">    <span class=\"type\">UserStudy</span> <span class=\"variable\">userStudy1</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">UserStudy</span>();</span><br><span class=\"line\">    userStudy1.setName(<span class=\"string\">&quot;张三&quot;</span>);</span><br><span class=\"line\">    <span class=\"type\">UserStudy</span> <span class=\"variable\">userStudy2</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">UserStudy</span>();</span><br><span class=\"line\">    userStudy2.setName(<span class=\"string\">&quot;李四&quot;</span>);</span><br><span class=\"line\">    userStudyList.add(userStudy1);</span><br><span class=\"line\">    userStudyList.add(userStudy2);</span><br><span class=\"line\">    <span class=\"comment\">//调用insertBatchSomeColumn方法</span></span><br><span class=\"line\">    userStudyMapper.insertBatchSomeColumn(userStudyList);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>注意：SQL有语句长度限制，在MySQL中被参数<code>max_allowed_packet</code>限制，默认为1M，如果拼接长度超过此限制就会报错，两种解决方式，一个是调整MySQL的<code>max_allowed_packet</code>限制，另一个则是通过代码控制每次的提交数量。<br>通过代码控制每次提交数量，模拟造五条数据，每次提交两条数据：  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\"> *批量插入</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"meta\">@Override</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">greatMany</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">    List&lt;UserStudy&gt; userStudyList = <span class=\"keyword\">new</span> <span class=\"title class_\">ArrayList</span>&lt;&gt;();</span><br><span class=\"line\">    <span class=\"type\">UserStudy</span> <span class=\"variable\">userStudy1</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">UserStudy</span>();</span><br><span class=\"line\">    userStudy1.setName(<span class=\"string\">&quot;张三&quot;</span>);</span><br><span class=\"line\">    <span class=\"type\">UserStudy</span> <span class=\"variable\">userStudy2</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">UserStudy</span>();</span><br><span class=\"line\">    userStudy2.setName(<span class=\"string\">&quot;李四&quot;</span>);</span><br><span class=\"line\">    <span class=\"type\">UserStudy</span> <span class=\"variable\">userStudy3</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">UserStudy</span>();</span><br><span class=\"line\">    userStudy3.setName(<span class=\"string\">&quot;王五&quot;</span>);</span><br><span class=\"line\">    <span class=\"type\">UserStudy</span> <span class=\"variable\">userStudy4</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">UserStudy</span>();</span><br><span class=\"line\">    userStudy4.setName(<span class=\"string\">&quot;赵六&quot;</span>);</span><br><span class=\"line\">    <span class=\"type\">UserStudy</span> <span class=\"variable\">userStudy5</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">UserStudy</span>();</span><br><span class=\"line\">    userStudy5.setName(<span class=\"string\">&quot;小红&quot;</span>);</span><br><span class=\"line\">    userStudyList.add(userStudy1);</span><br><span class=\"line\">    userStudyList.add(userStudy2);</span><br><span class=\"line\">    userStudyList.add(userStudy3);</span><br><span class=\"line\">    userStudyList.add(userStudy4);</span><br><span class=\"line\">    userStudyList.add(userStudy5);</span><br><span class=\"line\">    <span class=\"comment\">//创建入库的list</span></span><br><span class=\"line\">    List&lt;UserStudy&gt; userStudyCount = <span class=\"keyword\">new</span> <span class=\"title class_\">ArrayList</span>&lt;&gt;();</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; i &lt; userStudyList.size(); i++) &#123;</span><br><span class=\"line\">        <span class=\"comment\">//调用insertBatchSomeColumn方法</span></span><br><span class=\"line\">        userStudyCount.add(userStudyList.get(i));</span><br><span class=\"line\">        <span class=\"comment\">//控制每次提交数量</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span>(userStudyCount.size()==<span class=\"number\">2</span>)&#123;</span><br><span class=\"line\">            userStudyMapper.insertBatchSomeColumn(userStudyCount);</span><br><span class=\"line\">            <span class=\"comment\">//将入库的list清空重新新增</span></span><br><span class=\"line\">            userStudyCount.clear();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">//将list中size不够2的数据在此处新增</span></span><br><span class=\"line\">    userStudyMapper.insertBatchSomeColumn(userStudyCount);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<br/>\n\n\n\n\n<h3 id=\"13、多表联查\"><a href=\"#13、多表联查\" class=\"headerlink\" title=\"13、多表联查\"></a>13、多表联查</h3><p>1、方法一：<br>（1）使用<code>QueryWrapper</code>查询器  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">QueryWrapper&lt;Project&gt; queryWrapper = <span class=\"keyword\">new</span> <span class=\"title class_\">QueryWrapper</span>&lt;&gt;();</span><br><span class=\"line\">queryWrapper.eq(<span class=\"string\">&quot;create_by&quot;</span>, LoginInterceptor.threadLocal.get().getId()).or().eq(<span class=\"string\">&quot;user_id&quot;</span>, LoginInterceptor.threadLocal.get().getId());</span><br></pre></td></tr></table></figure>\n<p>（2）在<code>mapper</code>接口继承<code>BaseMapper</code>写  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">String</span> <span class=\"variable\">userProjectSql</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;SELECT tp.*,tup.user_id FROM t_project tp LEFT JOIN t_user_project tup ON tp.id = tup.project_id&quot;</span>;</span><br><span class=\"line\"><span class=\"type\">String</span> <span class=\"variable\">pageSql</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;SELECT * FROM ( &quot;</span>+ userProjectSql + <span class=\"string\">&quot; ) AS t $&#123;ew.getCustomSqlSegment()&#125;&quot;</span>;</span><br><span class=\"line\"><span class=\"comment\">// 有分页</span></span><br><span class=\"line\"><span class=\"meta\">@Select(pageSql)</span></span><br><span class=\"line\">IPage&lt;Project&gt; <span class=\"title function_\">getPage</span><span class=\"params\">(IPage&lt;Project&gt; page, <span class=\"meta\">@Param(&quot;ew&quot;)</span> Wrapper&lt;Project&gt; wrapper)</span>;</span><br><span class=\"line\"><span class=\"comment\">// 没有分页</span></span><br><span class=\"line\"><span class=\"meta\">@Select(pageSql)</span></span><br><span class=\"line\">List&lt;Project&gt; <span class=\"title function_\">page</span><span class=\"params\">(<span class=\"meta\">@Param(&quot;ew&quot;)</span> Wrapper&lt;Project&gt; wrapper)</span>;</span><br></pre></td></tr></table></figure>\n\n<p>2、方法二：<br><a href=\"https://blog.csdn.net/qq_47923467/article/details/132371979\">点击链接</a>  </p>\n<br/>\n\n\n<h3 id=\"14、Mybatis-Plus文档教程\"><a href=\"#14、Mybatis-Plus文档教程\" class=\"headerlink\" title=\"14、Mybatis-Plus文档教程\"></a>14、Mybatis-Plus文档教程</h3><p><a href=\"https://baomidou.com/pages/10c804/#kotlin%E4%BD%BF%E7%94%A8wrapper\">点击链接</a>  </p>\n<br/>\n\n\n\n<h3 id=\"15、数据权限\"><a href=\"#15、数据权限\" class=\"headerlink\" title=\"15、数据权限\"></a>15、数据权限</h3><p>1、MyBatisPlusConfig配置：  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.ruoyi.framework.config;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> com.baomidou.mybatisplus.annotation.DbType;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.baomidou.mybatisplus.extension.plugins.MybatisPlusInterceptor;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.baomidou.mybatisplus.extension.plugins.inner.OptimisticLockerInnerInterceptor;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.baomidou.mybatisplus.extension.plugins.inner.PaginationInnerInterceptor;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.ruoyi.framework.datascope.DataScopeInterceptor;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.context.annotation.Bean;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.context.annotation.Configuration;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.transaction.annotation.EnableTransactionManagement;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * Mybatis Plus 配置</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"meta\">@EnableTransactionManagement(proxyTargetClass = true)</span></span><br><span class=\"line\"><span class=\"meta\">@Configuration</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">MybatisPlusConfig</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Bean</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> MybatisPlusInterceptor <span class=\"title function_\">mybatisPlusInterceptor</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"type\">MybatisPlusInterceptor</span> <span class=\"variable\">interceptor</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">MybatisPlusInterceptor</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// 数据权限</span></span><br><span class=\"line\">        interceptor.addInnerInterceptor(dataScopeInterceptor());</span><br><span class=\"line\">        <span class=\"comment\">// 分页插件</span></span><br><span class=\"line\">        interceptor.addInnerInterceptor(paginationInnerInterceptor());</span><br><span class=\"line\">        <span class=\"comment\">// 乐观锁插件</span></span><br><span class=\"line\">        interceptor.addInnerInterceptor(optimisticLockerInnerInterceptor());</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">return</span> interceptor;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 分页插件，自动识别数据库类型</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> PaginationInnerInterceptor <span class=\"title function_\">paginationInnerInterceptor</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"type\">PaginationInnerInterceptor</span> <span class=\"variable\">paginationInnerInterceptor</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">PaginationInnerInterceptor</span>();</span><br><span class=\"line\">        <span class=\"comment\">// 设置数据库类型为mysql</span></span><br><span class=\"line\">        paginationInnerInterceptor.setDbType(DbType.MYSQL);</span><br><span class=\"line\">        <span class=\"comment\">// 设置最大单页限制数量，默认 500 条，-1 不受限制</span></span><br><span class=\"line\">        paginationInnerInterceptor.setMaxLimit(-<span class=\"number\">1L</span>);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> paginationInnerInterceptor;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 乐观锁插件</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> OptimisticLockerInnerInterceptor <span class=\"title function_\">optimisticLockerInnerInterceptor</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"title class_\">OptimisticLockerInnerInterceptor</span>();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 数据权限插件</span></span><br><span class=\"line\"><span class=\"comment\">     *</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span> DataScopeInterceptor</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> DataScopeInterceptor <span class=\"title function_\">dataScopeInterceptor</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"title class_\">DataScopeInterceptor</span>();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>2、DataScopeInnerInterceptor数据权限拦截器配置  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.ruoyi.framework.datascope;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> cn.hutool.core.collection.CollectionUtil;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.baomidou.mybatisplus.core.toolkit.PluginUtils;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.baomidou.mybatisplus.extension.plugins.inner.InnerInterceptor;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.ruoyi.common.Enum.DataScopeTypeEnum;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.ruoyi.common.core.data.DataScope;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.ruoyi.common.core.domain.entity.SysRole;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.ruoyi.common.core.domain.entity.SysUser;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.ruoyi.common.core.domain.model.LoginUser;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.ruoyi.common.utils.ServletUtils;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.ruoyi.common.utils.StringUtils;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.ruoyi.common.utils.spring.SpringUtils;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.ruoyi.framework.web.service.TokenService;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.apache.ibatis.executor.Executor;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.apache.ibatis.mapping.BoundSql;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.apache.ibatis.mapping.MappedStatement;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.apache.ibatis.session.ResultHandler;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.apache.ibatis.session.RowBounds;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.List;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Map;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 数据权限</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">DataScopeInterceptor</span> <span class=\"keyword\">implements</span> <span class=\"title class_\">InnerInterceptor</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">beforeQuery</span><span class=\"params\">(Executor executor, MappedStatement ms, Object parameter, RowBounds rowBounds,</span></span><br><span class=\"line\"><span class=\"params\">                            ResultHandler resultHandler, BoundSql boundSql)</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        PluginUtils.<span class=\"type\">MPBoundSql</span> <span class=\"variable\">mpBs</span> <span class=\"operator\">=</span> PluginUtils.mpBoundSql(boundSql);</span><br><span class=\"line\">        <span class=\"type\">String</span> <span class=\"variable\">originalSql</span> <span class=\"operator\">=</span> boundSql.getSql();</span><br><span class=\"line\">        <span class=\"type\">Object</span> <span class=\"variable\">parameterObject</span> <span class=\"operator\">=</span> boundSql.getParameterObject();</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// 查找参数中包含DataScope类型的参数</span></span><br><span class=\"line\">        <span class=\"type\">DataScope</span> <span class=\"variable\">dataScope</span> <span class=\"operator\">=</span> findDataScopeObject(parameterObject);</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (dataScope == <span class=\"literal\">null</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"type\">LoginUser</span> <span class=\"variable\">loginUser</span> <span class=\"operator\">=</span> SpringUtils.getBean(TokenService.class).getLoginUser(ServletUtils.getRequest());</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (StringUtils.isNotNull(loginUser)) &#123;</span><br><span class=\"line\">            <span class=\"type\">SysUser</span> <span class=\"variable\">currentUser</span> <span class=\"operator\">=</span> loginUser.getUser();</span><br><span class=\"line\">            <span class=\"comment\">// 如果是超级管理员，则不过滤数据</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (StringUtils.isNotNull(currentUser) &amp;&amp; !currentUser.isAdmin()) &#123;</span><br><span class=\"line\">                <span class=\"type\">String</span> <span class=\"variable\">scopeName</span> <span class=\"operator\">=</span> dataScope.getScopeName();</span><br><span class=\"line\">                List&lt;String&gt; deptIds = dataScope.getDeptIds();</span><br><span class=\"line\"></span><br><span class=\"line\">                dataScopeFilter(currentUser, deptIds);</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (deptIds.isEmpty()) &#123;</span><br><span class=\"line\">                    originalSql = String.format(<span class=\"string\">&quot;SELECT %s FROM (%s) temp_data_scope WHERE 1 = 2&quot;</span>,</span><br><span class=\"line\">                            dataScope.getFunc().getType(), originalSql);</span><br><span class=\"line\">                &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                    <span class=\"type\">String</span> <span class=\"variable\">join</span> <span class=\"operator\">=</span> CollectionUtil.join(deptIds, <span class=\"string\">&quot;,&quot;</span>);</span><br><span class=\"line\">                    originalSql = String.format(<span class=\"string\">&quot;SELECT %s FROM (%s) temp_data_scope WHERE temp_data_scope.%s IN (%s)&quot;</span>,</span><br><span class=\"line\">                            dataScope.getFunc().getType(), originalSql, scopeName, join);</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        mpBs.sql(originalSql);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 查找参数是否包括DataScope对象</span></span><br><span class=\"line\"><span class=\"comment\">     *</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> parameterObj 参数列表</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span> DataScope</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> DataScope <span class=\"title function_\">findDataScopeObject</span><span class=\"params\">(Object parameterObj)</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (parameterObj <span class=\"keyword\">instanceof</span> DataScope) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> (DataScope) parameterObj;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (parameterObj <span class=\"keyword\">instanceof</span> Map) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (Object val : ((Map&lt;?, ?&gt;) parameterObj).values()) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (val <span class=\"keyword\">instanceof</span> DataScope) &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">return</span> (DataScope) val;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">null</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 数据范围</span></span><br><span class=\"line\"><span class=\"comment\">     *</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span></span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title function_\">dataScopeFilter</span><span class=\"params\">(SysUser user, List&lt;String&gt; deptList)</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">for</span> (SysRole role : user.getRoles()) &#123;</span><br><span class=\"line\">            <span class=\"type\">String</span> <span class=\"variable\">roleScope</span> <span class=\"operator\">=</span> role.getDataScope();</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (DataScopeTypeEnum.ALL.getType().equals(roleScope)) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">return</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (DataScopeTypeEnum.CUSTOM.getType().equals(roleScope)) &#123;</span><br><span class=\"line\">                <span class=\"comment\">//   获取自定义</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (DataScopeTypeEnum.OWN_CHILD_LEVEL.getType().equals(roleScope)) &#123;</span><br><span class=\"line\">                <span class=\"comment\">// 获取子集</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (DataScopeTypeEnum.OWN_LEVEL.getType().equals(roleScope)) &#123;</span><br><span class=\"line\">                deptList.add(user.getDeptId().toString());</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.ruoyi.common.core.data;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> com.ruoyi.common.Enum.DataScopeFuncEnum;</span><br><span class=\"line\"><span class=\"keyword\">import</span> lombok.Data;</span><br><span class=\"line\"><span class=\"keyword\">import</span> lombok.EqualsAndHashCode;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.ArrayList;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.HashMap;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.List;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 数据权限查询参数</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"meta\">@Data</span></span><br><span class=\"line\"><span class=\"meta\">@EqualsAndHashCode(callSuper = true)</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">DataScope</span> <span class=\"keyword\">extends</span> <span class=\"title class_\">HashMap</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 限制范围的字段名称</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"type\">String</span> <span class=\"variable\">scopeName</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;dept_id&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 具体的数据范围</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> List&lt;String&gt; deptIds = <span class=\"keyword\">new</span> <span class=\"title class_\">ArrayList</span>&lt;&gt;();</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 是否只查询本部门</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"type\">Boolean</span> <span class=\"variable\">isOnly</span> <span class=\"operator\">=</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 函数名称，默认 SELECT * ;</span></span><br><span class=\"line\"><span class=\"comment\">     *</span></span><br><span class=\"line\"><span class=\"comment\">     * &lt;ul&gt;</span></span><br><span class=\"line\"><span class=\"comment\">     * &lt;li&gt;COUNT(1)&lt;/li&gt;</span></span><br><span class=\"line\"><span class=\"comment\">     * &lt;/ul&gt;</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"type\">DataScopeFuncEnum</span> <span class=\"variable\">func</span> <span class=\"operator\">=</span> DataScopeFuncEnum.ALL;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.ruoyi.common.Enum;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> lombok.AllArgsConstructor;</span><br><span class=\"line\"><span class=\"keyword\">import</span> lombok.Getter;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 数据权限函数类型</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"meta\">@Getter</span></span><br><span class=\"line\"><span class=\"meta\">@AllArgsConstructor</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">enum</span> <span class=\"title class_\">DataScopeFuncEnum</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 查询全部数据 SELECT * FROM (originSql) temp_data_scope WHERE temp_data_scope.dept_id IN</span></span><br><span class=\"line\"><span class=\"comment\">     * (1)</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    ALL(<span class=\"string\">&quot;*&quot;</span>, <span class=\"string\">&quot;全部&quot;</span>),</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 查询函数COUNT SELECT COUNT(1) FROM (originSql) temp_data_scope WHERE</span></span><br><span class=\"line\"><span class=\"comment\">     * temp_data_scope.dept_id IN (1)</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    COUNT(<span class=\"string\">&quot;COUNT(1)&quot;</span>, <span class=\"string\">&quot;自定义&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 类型</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">final</span> String type;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 描述</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">final</span> String description;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n<br/>\n\n\n\n<h3 id=\"16、代码生成器\"><a href=\"#16、代码生成器\" class=\"headerlink\" title=\"16、代码生成器\"></a>16、代码生成器</h3><p><strong>说明：</strong>使用代码生成器之前，一定要配置好数据库。<br><a href=\"https://baomidou.com/guides/new-code-generator/\">查看官网使用方法</a></p>\n<br/>\n\n\n\n<h3 id=\"17、Service层的设置\"><a href=\"#17、Service层的设置\" class=\"headerlink\" title=\"17、Service层的设置\"></a>17、Service层的设置</h3><p>1、接口继承IService接口  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">interface</span> <span class=\"title class_\">UserService</span> <span class=\"keyword\">extends</span> <span class=\"title class_\">IService</span>&lt;User&gt; &#123;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>2、类继承ServiceImpl实现类  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Service</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">UserServiceImpl</span> <span class=\"keyword\">extends</span> <span class=\"title class_\">ServiceImpl</span>&lt;UserMapper,User&gt; <span class=\"keyword\">implements</span> <span class=\"title class_\">UserService</span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<br/>\n\n\n<h3 id=\"18、防止全表更新和删除\"><a href=\"#18、防止全表更新和删除\" class=\"headerlink\" title=\"18、防止全表更新和删除\"></a>18、防止全表更新和删除</h3><p>1、说明<br>针对 update 和 delete 语句 作用: 阻止恶意的全表更新删除。<br>2、在总的配置类中配置  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Bean</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> MybatisPlusInterceptor <span class=\"title function_\">mybatisPlusInterceptor</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">  <span class=\"type\">MybatisPlusInterceptor</span> <span class=\"variable\">interceptor</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">MybatisPlusInterceptor</span>();</span><br><span class=\"line\">  interceptor.addInnerInterceptor(<span class=\"keyword\">new</span> <span class=\"title class_\">BlockAttackInnerInterceptor</span>());</span><br><span class=\"line\">  <span class=\"keyword\">return</span> interceptor;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>3、测试  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Test</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">testQuick8</span><span class=\"params\">()</span>&#123;</span><br><span class=\"line\">    <span class=\"type\">User</span> <span class=\"variable\">user</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">User</span>();</span><br><span class=\"line\">    user.setName(<span class=\"string\">&quot;custom_name&quot;</span>);</span><br><span class=\"line\">    user.setEmail(<span class=\"string\">&quot;xxx@mail.com&quot;</span>);</span><br><span class=\"line\">    <span class=\"comment\">//Caused by: com.baomidou.mybatisplus.core.exceptions.MybatisPlusException: Prohibition of table update operation</span></span><br><span class=\"line\">    <span class=\"comment\">//全局更新,报错</span></span><br><span class=\"line\">    userService.saveOrUpdate(user,<span class=\"literal\">null</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<br/>  \n\n\n\n<h3 id=\"19、MyBatis-Plus代码生成器-MyBatisX插件\"><a href=\"#19、MyBatis-Plus代码生成器-MyBatisX插件\" class=\"headerlink\" title=\"19、MyBatis-Plus代码生成器(MyBatisX插件)\"></a>19、MyBatis-Plus代码生成器(MyBatisX插件)</h3><p>1、Mybatisx插件逆向工程<br>MyBatis-Plus为我们提供了强大的mapper和service模板，能够大大的提高开发效率<br>但是在真正开发过程中，MyBatis-Plus并不能为我们解决所有问题，例如一些复杂的SQL，多表联查，我们就需要自己去编写代码和SQL语句，我们该如何快速的解决这个问题呢，这个时候可以使用MyBatisX插件。<br>MyBatisX一款基于 IDEA 的快速开发插件，为效率而生。  </p>\n<img src=\"/2023/10/18/Mybatis-Plus%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/2.png\" class=\"\">  \n<img src=\"/2023/10/18/Mybatis-Plus%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/3.png\" class=\"\">  \n<img src=\"/2023/10/18/Mybatis-Plus%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/4.png\" class=\"\">  \n<p>2、MyBatisX快速代码生成<br>使用mybatisX插件,自动生成sql语句实现。<br><a href=\"https://baomidou.com/guides/mybatis-x/\">查看官网使用方法</a></p>\n<br/>\n\n\n<h3 id=\"20、自定义sql\"><a href=\"#20、自定义sql\" class=\"headerlink\" title=\"20、自定义sql\"></a>20、自定义sql</h3><p>利用<code>Wrapper</code>来构建复杂的<code>where</code>条件，然后自己定义sql语句中剩下的部分。<br>需求：将id在指定范围的用户（例如1、2、4）的余额扣减指定值。<br>原来使用mybatis时：  </p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">update</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;updateBalanceByIds&quot;</span>&gt;</span></span><br><span class=\"line\">  update user</span><br><span class=\"line\">  set balance = balance - #&#123;money&#125;</span><br><span class=\"line\">  where id in</span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">foreach</span> <span class=\"attr\">collection</span>=<span class=\"string\">&quot;ids&quot;</span> <span class=\"attr\">item</span>=<span class=\"string\">&quot;id&quot;</span> <span class=\"attr\">open</span>=<span class=\"string\">&quot;(&quot;</span> <span class=\"attr\">separator</span>=<span class=\"string\">&quot;,&quot;</span> <span class=\"attr\">close</span>=<span class=\"string\">&quot;)&quot;</span>&gt;</span></span><br><span class=\"line\">    #&#123;id&#125;</span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">foreach</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">update</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>现在使用mybatis-plus：<br>第一步：基于<code>Wrapper</code>构建<code>where</code>条件。  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">List&lt;Long&gt; ids = List.of(<span class=\"number\">1L</span>, <span class=\"number\">2L</span>, <span class=\"number\">4L</span>);</span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"variable\">money</span> <span class=\"operator\">=</span> <span class=\"number\">200</span>;</span><br><span class=\"line\">LambdaQueryWrapper&lt;User&gt; wrapper = <span class=\"keyword\">new</span> <span class=\"title class_\">LambdaQueryWrapper</span>&lt;User&gt;().in(User::getId, ids);</span><br><span class=\"line\">userMapper.updateBalanceByIds(wrapper, money);</span><br></pre></td></tr></table></figure>\n<p>第二步：在<code>mapper</code>方法参数中用<code>@Param</code>注解声明<code>wrapper</code>变量名称，必须是<code>ew</code>！！！  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// @Param(&quot;ew&quot;)可以使用@Param(Constants.WRAPPER)来替换</span></span><br><span class=\"line\"><span class=\"comment\">// Constants.WRAPPER是mybatis-plus中定义的常量，值为ew</span></span><br><span class=\"line\"><span class=\"keyword\">void</span> <span class=\"title function_\">updateBalanceByIds</span><span class=\"params\">(<span class=\"meta\">@Param(&quot;ew&quot;)</span> LambdaQueryWrapper&lt;User&gt; wrapper, <span class=\"meta\">@Param(&quot;money&quot;)</span> <span class=\"type\">int</span> money)</span>;</span><br></pre></td></tr></table></figure>\n<p>第三步：在<code>xml</code>或者使用注解形式自定义sql语句。<br><code>xml</code>方式：  </p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">update</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;updateBalanceByIds&quot;</span>&gt;</span></span><br><span class=\"line\">  update user set balance = balance - #&#123;money&#125; $&#123;ew.customSqlSegment&#125;</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">update</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>注解方式：  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Update(&quot;update user set balance = balance - #&#123;money&#125; $&#123;ew.customSqlSegment&#125;&quot;)</span></span><br><span class=\"line\"><span class=\"keyword\">void</span> <span class=\"title function_\">updateBalanceByIds</span><span class=\"params\">(<span class=\"meta\">@Param(&quot;ew&quot;)</span> LambdaQueryWrapper&lt;User&gt; wrapper, <span class=\"meta\">@Param(&quot;money&quot;)</span> <span class=\"type\">int</span> money)</span>;</span><br></pre></td></tr></table></figure>\n\n\n<br/>\n\n\n<h3 id=\"21、MP提供的Db工具类\"><a href=\"#21、MP提供的Db工具类\" class=\"headerlink\" title=\"21、MP提供的Db工具类\"></a>21、MP提供的Db工具类</h3><p>使用场景：当<code>UserService</code>中注入了<code>OrderService</code>，<code>OrderService</code>中注入了<code>UserService</code>，这样会产生循环依赖问题，此时可以使用<code>MybatisPlus</code>提供的<code>Db</code>工具类来避免这个问题。  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">UserService</span> &#123;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"meta\">@Autowired</span></span><br><span class=\"line\">\t<span class=\"keyword\">private</span> UserMapper userMapper;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">test</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"comment\">// 根据用户id查询用户</span></span><br><span class=\"line\">\t\t<span class=\"type\">User</span> <span class=\"variable\">user</span> <span class=\"operator\">=</span> userMapper.selectById(<span class=\"number\">1L</span>);</span><br><span class=\"line\">\t\t<span class=\"comment\">// 根据用户id查询订单</span></span><br><span class=\"line\">\t\t<span class=\"comment\">// 使用Db，Order为对应数据库的实体类</span></span><br><span class=\"line\">\t\tList&lt;Order&gt; orderList = Db.lambdaQuery(Order.class)</span><br><span class=\"line\">\t\t\t.eq(Order::getUserId, user.getId())</span><br><span class=\"line\">\t\t\t.list();</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n<br/>\n\n\n<h3 id=\"22、枚举处理器\"><a href=\"#22、枚举处理器\" class=\"headerlink\" title=\"22、枚举处理器\"></a>22、枚举处理器</h3><p>枚举类：  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Getter</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">enum</span> <span class=\"title class_\">UserStatus</span> &#123;</span><br><span class=\"line\">\tNORMAL(<span class=\"number\">1</span>, <span class=\"string\">&quot;正常&quot;</span>),</span><br><span class=\"line\">\tFREEZE(<span class=\"number\">2</span>, <span class=\"string\">&quot;冻结&quot;</span>);</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"comment\">// 此注解的含义是告诉数据库，在插入时，使用被此注解标注的属性入库</span></span><br><span class=\"line\">\t<span class=\"comment\">// com.baomidou.mybatisplus.annotation.EnumValue</span></span><br><span class=\"line\">\t<span class=\"meta\">@EnumValue</span></span><br><span class=\"line\">\t<span class=\"keyword\">private</span> <span class=\"keyword\">final</span> <span class=\"type\">int</span> value;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"comment\">// 此注解的含义是返回前端时，使用被此注解标注的属性显示</span></span><br><span class=\"line\">\t<span class=\"comment\">// com.fasterxml.jackson.annotation.JsonValue</span></span><br><span class=\"line\">\t<span class=\"meta\">@JsonValue</span></span><br><span class=\"line\">\t<span class=\"keyword\">private</span> <span class=\"keyword\">final</span> String desc;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\tUserStatus(<span class=\"type\">int</span> value, String desc) &#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">this</span>.value = value;</span><br><span class=\"line\">\t\t<span class=\"built_in\">this</span>.desc = desc;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>实体类：  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Date</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">User</span> &#123;</span><br><span class=\"line\">\t<span class=\"comment\">// ...其他属性</span></span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"comment\">// 用户状态(1正常，2冻结)</span></span><br><span class=\"line\">\t<span class=\"keyword\">private</span> UserStatus status;</span><br><span class=\"line\">\t<span class=\"comment\">// ...其他属性</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>需要在<code>application.yml</code>中配置枚举处理器：  </p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">mybatis-plus:</span></span><br><span class=\"line\">  <span class=\"attr\">configuration:</span></span><br><span class=\"line\">    <span class=\"comment\"># 枚举处理器</span></span><br><span class=\"line\">    <span class=\"attr\">default-enum-type-handler:</span> <span class=\"string\">com.baomidou.mybatisplus.core.handlers.MybatisEnumTypeHandler</span></span><br></pre></td></tr></table></figure>\n<p>这样在查询时，数据库中的枚举值会被自动转换为枚举对象。  </p>\n<br/>\n\n\n<h3 id=\"23、JSON处理器\"><a href=\"#23、JSON处理器\" class=\"headerlink\" title=\"23、JSON处理器\"></a>23、JSON处理器</h3><p>使用场景：当mysql中存储json类型的数据，我们查询出来时，json类型的数据在实体类中对应的是string类型，如果我们需要获取json中的某些属性，还得将string类型转换成json再获取，相当麻烦。<br>解决办法：我们可以创建一个实体类，对应json，实体类中的属性对应json中的属性，将使用原来的<code>String json</code>的string类型修改为该实体类，然后再使用JSON处理器。<br>json实体类：  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Date</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">JsonDemo</span> &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">private</span> String name;</span><br><span class=\"line\">\t<span class=\"keyword\">private</span> <span class=\"type\">int</span> age;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>数据库实体类：  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 一定要加autoResultMap = true</span></span><br><span class=\"line\"><span class=\"meta\">@Date</span></span><br><span class=\"line\"><span class=\"meta\">@TableName(value = &quot;user&quot;, autoResultMap = true)</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">User</span> &#123;</span><br><span class=\"line\">\t<span class=\"comment\">// ...其他属性</span></span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"comment\">// json数据，对应数据库中的json类型</span></span><br><span class=\"line\">\t<span class=\"comment\">// 原来是：private String jsonDemo;</span></span><br><span class=\"line\">\t<span class=\"comment\">// 现在修改为：private JsonDemo jsonDemo;</span></span><br><span class=\"line\">\t<span class=\"comment\">// JacksonTypeHandler是mybatis-plus提供的JSON处理器，一共有三个：JacksonTypeHandler、FastjsonTypeHandler、GsonTypeHandler</span></span><br><span class=\"line\">\t<span class=\"meta\">@TableField(typeHandler = JacksonTypeHandler.class)</span></span><br><span class=\"line\">\t<span class=\"keyword\">private</span> JsonDemo jsonDemo;</span><br><span class=\"line\">\t<span class=\"comment\">// ...其他属性</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>这样在查询时，数据库中的json类型的数据会被自动转换为json实体类对象。  </p>\n<br/>\n\n\n<h3 id=\"24、批量新增\"><a href=\"#24、批量新增\" class=\"headerlink\" title=\"24、批量新增\"></a>24、批量新增</h3><p>在<code>yaml</code>配置文件的连接数据库信息中，添加<code>rewriteBatchedStatements=true</code>（mysql 3.1.13开始就有了这个配置），这样就可以使用批量新增了。  </p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">spring:</span></span><br><span class=\"line\">  <span class=\"attr\">datasource:</span></span><br><span class=\"line\">    <span class=\"attr\">url:</span> <span class=\"string\">jdbc:mysql://localhost:3306/mybatis_plus?useUnicode=true&amp;characterEncoding=utf-8&amp;useSSL=false&amp;serverTimezone=UTC&amp;rewriteBatchedStatements=true</span></span><br></pre></td></tr></table></figure>\n<p>使用<code>mybatis-plus</code>的批量新增：  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Test</span></span><br><span class=\"line\"><span class=\"keyword\">void</span> <span class=\"title function_\">test</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">\t<span class=\"comment\">// 需求：一次性插入10万条数据</span></span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"comment\">// 我们可以每次批量插入1000条，插入100次</span></span><br><span class=\"line\">\t<span class=\"comment\">// 1、准备一个容量为1000的集合</span></span><br><span class=\"line\">\tList&lt;User&gt; userList = <span class=\"keyword\">new</span> <span class=\"title class_\">ArrayList</span>&lt;&gt;(<span class=\"number\">1000</span>);</span><br><span class=\"line\">\t<span class=\"comment\">// 2、循环100次，每次往集合中添加1000条数据</span></span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; i &lt; <span class=\"number\">100000</span>; i++) &#123;</span><br><span class=\"line\">\t\tlist.add(<span class=\"keyword\">new</span> <span class=\"title class_\">User</span>(<span class=\"literal\">null</span>, <span class=\"string\">&quot;张三&quot;</span> + i));</span><br><span class=\"line\">\t\t<span class=\"comment\">// 每1000条批量插入一次</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (i % <span class=\"number\">1000</span> == <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">\t\t\t<span class=\"comment\">// 3、批量插入</span></span><br><span class=\"line\">\t\t\tuserService.saveBatch(userList);</span><br><span class=\"line\">\t\t\t<span class=\"comment\">// 4、清空集合</span></span><br><span class=\"line\">\t\t\tuserList.clear();</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n","categories":[{"name":"工作技能","path":"api/categories/工作技能.json"}],"tags":[{"name":"工作技能","path":"api/tags/工作技能.json"},{"name":"后端","path":"api/tags/后端.json"},{"name":"MybatisPlus","path":"api/tags/MybatisPlus.json"}]}