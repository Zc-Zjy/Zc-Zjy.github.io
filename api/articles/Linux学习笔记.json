{"title":"Linux学习笔记","slug":"Linux学习笔记","date":"2023-10-11T08:42:04.000Z","updated":"2025-07-09T09:28:39.615Z","comments":true,"path":"api/articles/Linux学习笔记.json","realPath":null,"excerpt":null,"covers":["/2023/10/11/Linux%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/Linux1.jpg"],"cover":null,"content":"<hr>\n<h1 id=\"一、目录结构介绍\"><a href=\"#一、目录结构介绍\" class=\"headerlink\" title=\"一、目录结构介绍\"></a>一、目录结构介绍</h1><h3 id=\"1、-root-localhost-讲解说明\"><a href=\"#1、-root-localhost-讲解说明\" class=\"headerlink\" title=\"1、[root@localhost ~]#  讲解说明\"></a>1、[root@localhost ~]#  讲解说明</h3><p>（1）<code>root</code>：代表当前登录的用户，在Linux中管理员账户是<code>root</code>。<br>（2）<code>localhost</code>：当前计算机主机名。<br>（3）<code>~</code>：当前所在家目录。<br>（4）<code>/</code>：当前所在根目录。<br>（5）<code>#</code>：超级用户提示符。<br>（6）<code>$</code>：普通用户的提示符（<code>$</code>钱的符号，普通用户就是俗人，俗人就爱钱）。</p>\n<h3 id=\"2、目录结构说明\"><a href=\"#2、目录结构说明\" class=\"headerlink\" title=\"2、目录结构说明\"></a>2、目录结构说明</h3><p>（1）<code>/bin</code>：bin是Binary的缩写，这个目录存放着最常用的命令。<br>（2）<code>/boot</code>：这里存放的是启动Linux时使用的一些核心文件，包括一些连接文件以及镜像文件（不要随便动）。<br>（3）<code>/dev</code>：dev是Device（设备）的缩写，存放的是Linux的外部设备，在Linux中访问设备的方式和访问文件的方式是相同的。<br>（4）<code>/etc</code>：这个目录用来存放所有的系统管理所需要的配置文件和子目录。<br>（5）<code>/home</code>：用户的主目录，在Linux中，每个用户都有一个自己的目录，一般该目录名是以用户的账户命名的。<br>（6）<code>/lib</code>：这个目录里存放着系统最基本的动态连接共享库，其作用类似于Windows里的dll文件。<br>（7）<code>/lost+found</code>：这个目录一般情况下是空的，当系统非法关机后，这里就存放了一些文件。<br>（8）<code>/media</code>：Linux系统会自动识别一些设备，例如U盘、光驱等等，当识别后，Linux会把识别的设备挂载到这个目录下。<br>（9）<code>/mnt</code>：系统提供该目录是为了让用户临时挂在别的文件系统的，我们可以将光驱挂载在<code>/mnt</code>上，然后进入该目录就可以查看光驱里的内容了。<br>（10）<code>/opt</code>：这是给主机额外安装软件所摆放的目录，比如你安装一个oracle数据库，就可以放在这个目录下，默认是空的。<br>（11）<code>/proc</code>：这个目录是一个虚拟的目录，它是系统内存的映射，我们可以通过直接访问这个目录来获取系统信息。<br>（12）<code>/root</code>：该目录为系统管理员，也称作超级权限者的用户主目录。<br>（13）<code>/sbin</code>：s就是Super User的意思，这里存放的是系统管理员使用的系统管理程序。<br>（14）<code>/srv</code>：该目录存放一些服务启动之后需要提取的数据。<br>（15）<code>/sys</code>：这是Linux2.6内核的一个很大的变化，该目录下安装了2.6内核中新出现的一个文件系统sysfs。<br>（16）<code>/tmp</code>：这个目录是用来存放一些临时文件的。<br>（17）<code>/usr</code>：这个一个非常重要的目录，用户的很多应用程序和文件都放在这个目录下，类似于Windows下的program files目录。<br>（18）<code>/usr/bin</code>：系统用户使用的应用程序。</p>\n<br/>\n\n<hr>\n<br/>\n\n<h1 id=\"二、常用的Linux命令\"><a href=\"#二、常用的Linux命令\" class=\"headerlink\" title=\"二、常用的Linux命令\"></a>二、常用的Linux命令</h1><h3 id=\"1、cd（改变目录）\"><a href=\"#1、cd（改变目录）\" class=\"headerlink\" title=\"1、cd（改变目录）\"></a>1、cd（改变目录）</h3><p>（1）<code>cd /</code>：进入根目录；<br>（2）<code>cd /home/sharplee/creatfile</code>：进入到<code>home</code>文件夹下的<code>sharplee</code>文件夹下的<code>creatfile</code>目录；<br>（3）<code>cd ..</code>：回退到上一个目录，直接cd进入默认目录。特别说明：cd 空格 .. 才可以。</p>\n<h3 id=\"2、pwd（显示当前所在的目录路径）\"><a href=\"#2、pwd（显示当前所在的目录路径）\" class=\"headerlink\" title=\"2、pwd（显示当前所在的目录路径）\"></a>2、pwd（显示当前所在的目录路径）</h3><h3 id=\"3、ls（列出当前目录的所有文件）\"><a href=\"#3、ls（列出当前目录的所有文件）\" class=\"headerlink\" title=\"3、ls（列出当前目录的所有文件）\"></a>3、ls（列出当前目录的所有文件）</h3><p>（1）<code>ls</code>：列出当前目录中的所有文件；<br>（2）<code>ll</code>：比<code>ls</code>列出的内容更详细；<br>（3）<code>ls -a</code>：列出当前目录中所有文件包括隐藏文件；<br>（4）<code>ls -l</code>：同<code>ll</code>;<br>（5）<code>ls -l /path/to/file</code>：查看文件的权限；<br>（6）<code>ls -ld /path/to/directory</code>：查看目录的权限</p>\n<h3 id=\"4、touch（新建文件）\"><a href=\"#4、touch（新建文件）\" class=\"headerlink\" title=\"4、touch（新建文件）\"></a>4、touch（新建文件）</h3><p><code>touch</code>：新建一个文件，如：<code>touch index.js</code>，就会在当前目录下新建一个index.js文件。（如果文件已经存在，则只会修改文件的当前时间）</p>\n<h3 id=\"5、rm（删除文件）\"><a href=\"#5、rm（删除文件）\" class=\"headerlink\" title=\"5、rm（删除文件）\"></a>5、rm（删除文件）</h3><p><strong>常用后缀选项：</strong>  </p>\n<ul>\n<li><code>-f</code>：强制删除文件，忽略不存在的文件和不可写的文件，不会出现警告提示；  </li>\n<li><code>-d(--dir)</code>：删除空目录；  </li>\n<li><code>-i</code>：交互式地询问是否删除每个文件，如果要删除多个文件，rm将询问是否确认删除每个文件；  </li>\n<li><code>-I</code>：在删除超过三个文件或者递归删除前要求确认，此选项比-i 提示内容更少，但同样可以阻止大多数错误发生；  </li>\n<li><code>-r</code>：递归地删除目录及其内容，用于删除非空目录；  </li>\n<li><code>-v</code>：显示详细输出，列出每个删除的文件名；</li>\n</ul>\n<p><strong>使用例子：</strong><br>（1）<code>rm index.js</code>：删除index.js文件；<br>（2）<code>rm index1.js index2.js</code>：删除index1.js和index2.js文件；<br>（3）<code>rm -f index.js</code>：强制删除index.js文件；<br>（4）<code>rm -r src</code>：删除src目录（特别说明：一般不要使用rm，特别是rm -rf 命令，一定不能使用）；<br>（5）<code>rmdir test</code>：删除test文件夹；<br>（6）<code>rmdir -p test/test/test.txt</code>：递归删除。</p>\n<h3 id=\"6、mkdir（新建目录）\"><a href=\"#6、mkdir（新建目录）\" class=\"headerlink\" title=\"6、mkdir（新建目录）\"></a>6、mkdir（新建目录）</h3><p>（1）<code>mkdir test</code>：新建test文件夹；<br>（2）<code>mkdir -p test/test/test</code>：递归创建。</p>\n<h3 id=\"7、mv（移动文件）\"><a href=\"#7、mv（移动文件）\" class=\"headerlink\" title=\"7、mv（移动文件）\"></a>7、mv（移动文件）</h3><p><strong>常用后缀选项：</strong>  </p>\n<ul>\n<li><code>-b</code>：当目标文件存在，先进行备份在覆盖；</li>\n<li><code>-f</code>：强制覆盖，如果目标文件已经存在，则不询问，直接强制覆盖；</li>\n<li><code>-i</code>：交互移动，如果目标文件已经存在，则会询问用户是否覆盖（默认选项）；</li>\n<li><code>-n</code>：如果目标文件已经存在，则不会覆盖移动，而且不询问用户；</li>\n<li><code>-v</code>：显示文件或目录的移动过程；</li>\n<li><code>-u</code>：若目标文件已经存在，但两者相比，源文件更新，则会对目标文件进行升级；</li>\n</ul>\n<p><strong>常用示例：</strong><br>（1）<code>mv index.js src/</code>：将index.js移动到src目录下（文件夹用 文件夹名 + <code>/</code>的方式表示）；<br>（2）<code>mv -b a/aa b/</code>：将a目录下的aa文件移动到b目录中，因为b目录已经存在aa文件，所以b目录先备份一份b目录下的aa文件<code>aa~</code>，再将a目录下的aa文件移动到b目录；<br>（3）<code>mv -f index.js b/</code>：强制覆盖，不管b目录下有没有index.js，都将index.js移动到b目录下，如果b目录存在index.js，就覆盖；<br>（4）<code>mv a b</code>：将a文件名改为b；<br>（5）<code>mv file1.txt file2.txt file3.txt /target/directory/</code>：将文件<code>file1.txt</code>，<code>file2.txt</code>，<code>file3.txt</code>移动到<code>/target/directory/</code>；  </p>\n<h3 id=\"8、reset（初始化终端）\"><a href=\"#8、reset（初始化终端）\" class=\"headerlink\" title=\"8、reset（初始化终端）\"></a>8、reset（初始化终端）</h3><p><code>reset</code>：初始化终端；</p>\n<h3 id=\"9、clear（清屏）\"><a href=\"#9、clear（清屏）\" class=\"headerlink\" title=\"9、clear（清屏）\"></a>9、clear（清屏）</h3><p><code>clear</code>：清屏；</p>\n<h3 id=\"10、history（查看命令历史）\"><a href=\"#10、history（查看命令历史）\" class=\"headerlink\" title=\"10、history（查看命令历史）\"></a>10、history（查看命令历史）</h3><p><code>history</code>：查看命令历史；</p>\n<h3 id=\"11、help（帮助）\"><a href=\"#11、help（帮助）\" class=\"headerlink\" title=\"11、help（帮助）\"></a>11、help（帮助）</h3><p><code>help</code>：帮助；</p>\n<h3 id=\"12、exit（退出）\"><a href=\"#12、exit（退出）\" class=\"headerlink\" title=\"12、exit（退出）\"></a>12、exit（退出）</h3><p><code>exit</code>：帮助；</p>\n<h3 id=\"13、-（注释）\"><a href=\"#13、-（注释）\" class=\"headerlink\" title=\"13、#（注释）\"></a>13、#（注释）</h3><h3 id=\"14、cat（查看文件内容）\"><a href=\"#14、cat（查看文件内容）\" class=\"headerlink\" title=\"14、cat（查看文件内容）\"></a>14、cat（查看文件内容）</h3><p>（1）<code>cat test.txt</code>：查看test文件的内容；<br>（2）<code>cat &gt; test.txt</code>：新建一个test文件，按下回车之后，向test文件里输出保存内容，在按<code>ctr + d</code>来保存退出；<br>（3）<code>cat test1.txt test2.txt</code>：查看test1和test2文件的内容；<br>（4）<code>cat test1.txt &gt; test2.txt</code>：将test1文件内容备份到test2文件中；<br>（5）<code>cat test1.txt test2.txt &gt; test3.txt</code>：将test1和test2文件内容备份到test3文件中；<br>（6）<code>tac test.txt</code>：将test文件内容反过来查看；<br>（7）<code>cat test1.txt &gt;&gt; test2.txt</code>：将test1文件内容添加到test2文件内容末尾；<br>（8）<code>cat &gt;&gt; test.txt</code>：在终端输入内容到test.txt末尾，按<code>ctr + d</code>来保存退出；<br>（9）<code>cat -n test.txt</code>：查看test文件内容，并显示行号；<br>（10）<code>cat /etc/os-release</code>：查看当前系统版本；</p>\n<h3 id=\"15、查看系统内核\"><a href=\"#15、查看系统内核\" class=\"headerlink\" title=\"15、查看系统内核\"></a>15、查看系统内核</h3><p>（1）<code>uname -r</code>：查看系统内核；<br>（2）<code>cat /etc/redhat-release</code>：查看当前系统相关信息；</p>\n<h3 id=\"16、将数据从内存同步到硬盘\"><a href=\"#16、将数据从内存同步到硬盘\" class=\"headerlink\" title=\"16、将数据从内存同步到硬盘\"></a>16、将数据从内存同步到硬盘</h3><p><code>sync</code>：将数据从内存同步到硬盘；</p>\n<h3 id=\"17、关机\"><a href=\"#17、关机\" class=\"headerlink\" title=\"17、关机\"></a>17、关机</h3><p>（1）<code>half</code>：立刻关机；<br>（2）<code>shutdown -h now</code>：立刻关机；<br>（3）<code>shutdown -h 10</code>：10分钟后关机；<br>（4）<code>shutdown -h 20:30</code>：20：30的时候关机；<br>（5）<code>shutdown -h +30 &#39;系统将在30分钟后关机&#39;</code>：30分钟后关机，同时向在线用户发送警告消息；</p>\n<h3 id=\"18、重启\"><a href=\"#18、重启\" class=\"headerlink\" title=\"18、重启\"></a>18、重启</h3><p><code>reboot</code>：重启；</p>\n<h3 id=\"19、cp（复制粘贴）\"><a href=\"#19、cp（复制粘贴）\" class=\"headerlink\" title=\"19、cp（复制粘贴）\"></a>19、cp（复制粘贴）</h3><p><code>cp 【复制的文件名】 【要粘贴到的文件夹】</code><br>（1）<code>cp -r 【要复制的文件夹】 【要粘贴到的路径】</code>：将文件夹递归复制粘贴；  </p>\n<h3 id=\"20、chmod（更改文件权限）\"><a href=\"#20、chmod（更改文件权限）\" class=\"headerlink\" title=\"20、chmod（更改文件权限）\"></a>20、chmod（更改文件权限）</h3><p>（1）<code>chmod 777 文件名</code>：更改文件权限为777，可以应用于文件夹和文件，它将赋予所有者、所属组和其他用户全部的读取、写入和执行权限；<br>（2）<code>chmod 755</code>：主要用于文件夹，它给予所有者读取、写入和执行的权限，而所属组和其他用户只有读取和执行的权限，没有写入权限；<br>（2）<code>chmod 644</code>：主要用于文件，它给予所有者读取和写入的权限，而所属组和其他用户只有读取的权限。对于文件夹而言，执行的权限。<br>相关知识查看下面第三大点。</p>\n<h3 id=\"21、man（查看命令使用文档）\"><a href=\"#21、man（查看命令使用文档）\" class=\"headerlink\" title=\"21、man（查看命令使用文档）\"></a>21、man（查看命令使用文档）</h3><p><code>man cd</code>：查看cd命令的使用文档；</p>\n<h3 id=\"22、vim（修改文件内容）\"><a href=\"#22、vim（修改文件内容）\" class=\"headerlink\" title=\"22、vim（修改文件内容）\"></a>22、vim（修改文件内容）</h3><p><code>vim test.txt</code>：修改test文件内容，进入文件后按键盘中的<code>i</code>或者<code>Insert</code>键，就可以输入内容了，然后按<code>Esc</code>退出输入模式，敲入<code>:wq</code>表示保存退出，<code>:q</code>仅退出不保存，显示行号：<code>:set nu</code>，不显示行号：<code>set nonu</code>；</p>\n<h3 id=\"23、hostname（查看主机名）\"><a href=\"#23、hostname（查看主机名）\" class=\"headerlink\" title=\"23、hostname（查看主机名）\"></a>23、hostname（查看主机名）</h3><p><code>hostname 【要修改成的新主机名】</code>：修改主机名；</p>\n<h3 id=\"24、ps（查看当前系统正在运行的进程）\"><a href=\"#24、ps（查看当前系统正在运行的进程）\" class=\"headerlink\" title=\"24、ps（查看当前系统正在运行的进程）\"></a>24、ps（查看当前系统正在运行的进程）</h3><p>（1）<code>ps -a</code>：显示当前终端运行的所有进程<br>（2）<code>ps -u</code>：查看当前以用户登录的所有进程<br>（3）<code>ps -x</code>：显示后台运行进程的参数<br>（4）<code>ps -aux</code>：查看所有的进程<br>（5）<code>grep</code>：查找文件中符合条件的信息<br>（6）<code>ps -aux|grep mysql</code>：查找所有进程，过滤出mysql进程（查找出mysql进程）<br>（7）<code>rpm -qa | grep postgres</code>：查看当前服务器是否已安装PostgreSQL  </p>\n<h3 id=\"25、结束进程\"><a href=\"#25、结束进程\" class=\"headerlink\" title=\"25、结束进程\"></a>25、结束进程</h3><p><code>kill -9 【进程id】</code>：结束进程；</p>\n<h3 id=\"26、解压压缩包\"><a href=\"#26、解压压缩包\" class=\"headerlink\" title=\"26、解压压缩包\"></a>26、解压压缩包</h3><p>（1）解压tar.gz：<code>tar -zxvf 【压缩包名】</code>：解压压缩包；<br>（2）解压zip：<code>unzip -o aaa.zip</code>，如果要保留原来的文件，把解压后的文件存放在&#x2F;root&#x2F;test2目录下，则执行命令<code>unzip -o -d /root/test2/ ./aaa.zip</code>，<a href=\"https://blog.csdn.net/z19861216/article/details/131823727\">相关教程请点击</a></p>\n<h3 id=\"27、查看进程状态\"><a href=\"#27、查看进程状态\" class=\"headerlink\" title=\"27、查看进程状态\"></a>27、查看进程状态</h3><p><code>systemctl status postgresql.service</code>：查看postgresql服务器进程状态；</p>\n<h3 id=\"28、查看当前登录的用户名\"><a href=\"#28、查看当前登录的用户名\" class=\"headerlink\" title=\"28、查看当前登录的用户名\"></a>28、查看当前登录的用户名</h3><p><code>whoami</code>：查看当前登录的用户名；</p>\n<h3 id=\"29、查看系统中的所有用户\"><a href=\"#29、查看系统中的所有用户\" class=\"headerlink\" title=\"29、查看系统中的所有用户\"></a>29、查看系统中的所有用户</h3><p>（1）<code>cat /etc/passwd</code>：查看系统中的所有用户；<br>（2）<code>getent passwd</code>：该命令将显示系统中所有用户的用户名、用户ID、用户所属组ID、用户家目录等信息；  </p>\n<h3 id=\"30、启动、停止服务\"><a href=\"#30、启动、停止服务\" class=\"headerlink\" title=\"30、启动、停止服务\"></a>30、启动、停止服务</h3><p>（1）启动某个服务：<code>systemctl start 【服务名】</code><br>（2）停止某个服务：<code>systemctl stop 【服务名】</code><br>（3）重启某个服务：<code>systemctl restart 【服务名】</code><br>（4）查看一个服务的状态：<code>systemctl status 【服务名】</code><br>（5）开机时启用一个服务：<code>systemctl enable 【服务名】</code><br>（6）开机时关闭一个服务：<code>systemctl disable 【服务名】</code><br>（7）查看服务是否开机启动：<code>systemctl is-enabled 【服务名】</code>  </p>\n<h3 id=\"31、防火墙端口\"><a href=\"#31、防火墙端口\" class=\"headerlink\" title=\"31、防火墙端口\"></a>31、防火墙端口</h3><p>（1）增加防火墙端口号（端口范围 4400-4600）：<code>firewall-cmd --zone=public --add-port=4400-4600/udp --permanen</code><br>（2）指定端口 4369：<code>firewall-cmd --zone=public --add-port=4369/udp --permanen</code>，出现：<code>Warning: ALREADY_ENABLED: 4369:tcp</code>（说明4369端口通过成功）<br>（3）关闭指定端口：<code>firewall-cmd --zone=public --remove-port=80/tcp --permanent</code><br>（4）查看通过的端口：<code>firewall-cmd --zone=public --list-ports</code></p>\n<h3 id=\"32、sudo（以系统管理者的身份执行指令）\"><a href=\"#32、sudo（以系统管理者的身份执行指令）\" class=\"headerlink\" title=\"32、sudo（以系统管理者的身份执行指令）\"></a>32、sudo（以系统管理者的身份执行指令）</h3><p>（1）以root用户的环境变量执行命令：<code>sudo -i</code><br>（2）设置root初始密码：<code>sudo passwd root</code>（以root身份执行命令，需要输入当前用户的密码，不是root的密码）<br>（3）显示出自己（执行 sudo 的使用者）的权限：<code>sudo -l</code>  </p>\n<h3 id=\"33、su（切换身份）\"><a href=\"#33、su（切换身份）\" class=\"headerlink\" title=\"33、su（切换身份）\"></a>33、su（切换身份）</h3><p>（1）使用root密码，切换到root用户，但是并没有转到root用户家目录下：<code>su</code><br>（2）使用root密码，切换到root用户，并转到root用户的家目录下：<code>su -</code><br>（3）登陆root用户：<code>su root</code></p>\n<h3 id=\"34、scp（远程文件拷贝）\"><a href=\"#34、scp（远程文件拷贝）\" class=\"headerlink\" title=\"34、scp（远程文件拷贝）\"></a>34、scp（远程文件拷贝）</h3><p>现在假设服务器的ip为：<code>192.168.126.130</code>，域名是<code>www.abc.com</code><br>1、从服务器分别复制文件和文件夹到本地：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">scp root@192.168.126.130:/home/file /myMachine/x (可以将ip换成域名，也可以去掉root@)</span><br><span class=\"line\">scp -r www.abc.com:/home/file/ /myMachine/myFile/（-r：递归复制整个目录）</span><br></pre></td></tr></table></figure>\n<p>2、本地复制到服务器</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">复制文件</span><br><span class=\"line\">scp /myMachine/x root@192.168.126.130:/home/file</span><br><span class=\"line\">复制文件夹</span><br><span class=\"line\">scp -r /myMachine/myFile/ www.abc.com:/home/file/（-r：递归复制整个目录）</span><br></pre></td></tr></table></figure>\n<h3 id=\"35、查看运行的jar包\"><a href=\"#35、查看运行的jar包\" class=\"headerlink\" title=\"35、查看运行的jar包\"></a>35、查看运行的jar包</h3><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">以下几种命令均可</span></span><br><span class=\"line\">ps -ef | grep java      查看当前运行的java进程</span><br><span class=\"line\">ps -ef | grep xxx.jar   查看当前运行的jar进程</span><br><span class=\"line\"></span><br><span class=\"line\">ps aux | grep xxx.jar</span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">ps：process status的简称，用于显示当前进程的状态；</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">a：all简称，显示所有程序；</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">u：user简称，以用户为主的格式来显示；</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">x：显示所有程序，不区分终端机；</span></span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">查看某端口对应的线程pid</span></span><br><span class=\"line\">netstat -nlp |grep :9181</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">根据进程号查看端口号</span></span><br><span class=\"line\">netstat -anop | grep 15161</span><br></pre></td></tr></table></figure>\n<h3 id=\"36、jar包的启动、终止和启停脚本\"><a href=\"#36、jar包的启动、终止和启停脚本\" class=\"headerlink\" title=\"36、jar包的启动、终止和启停脚本\"></a>36、jar包的启动、终止和启停脚本</h3><p>1、jar包的运行  </p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">当前ssh窗口被锁定，不可进行其它操作，ctrl + c或直接关闭窗口停止程序</span><br><span class=\"line\">java -jar xxx.jar</span><br><span class=\"line\"></span><br><span class=\"line\">当前ssh窗口不被锁定，可进行其它操作，当窗口关闭时，程序退出</span><br><span class=\"line\">java -jar xxxxx.jar &amp;</span><br><span class=\"line\"></span><br><span class=\"line\">后台挂起程序，当账户退出或终端关闭时程序停止，日志文件存储在当前目录的nohup.out文件中</span><br><span class=\"line\">nohup java -jar xxx.jar &amp;</span><br><span class=\"line\"></span><br><span class=\"line\">指定输出日志到log.txt文件,后台挂起程序,当账户退出或终端关闭时,程序仍然运行</span><br><span class=\"line\">nohup java -jar xxxxxx.jar &gt; log.txt &amp;</span><br></pre></td></tr></table></figure>\n<p>2、jar的终止  </p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">9：使用第9种信号(SIGKILL)无条件终止该进程</span></span><br><span class=\"line\">kill -9 jar包pid</span><br></pre></td></tr></table></figure>\n<p>3、jar启停脚本  </p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">start.sh</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">将jar包启动对应的pid写入文件中，为停止时提供pid</span></span><br><span class=\"line\">nohup java -jar 包名.jar &gt;log.txt &amp;       </span><br><span class=\"line\">echo $! &gt; /var/run/包名.pid</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">shutdown.sh</span></span><br><span class=\"line\">PID=$(cat /var/run/包名.pid)</span><br><span class=\"line\">kill -9 $PID</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">给脚本添加可执行权限</span></span><br><span class=\"line\">sudo chmod +x ./test.sh</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"37、查找\"><a href=\"#37、查找\" class=\"headerlink\" title=\"37、查找\"></a>37、查找</h3><p>1、<code>find / -name 【需要查找的名字】</code>：全盘查找，例如：全盘查找harbor<code>find / -name harbor</code>；  </p>\n<h3 id=\"38、tail（实时查看日志）\"><a href=\"#38、tail（实时查看日志）\" class=\"headerlink\" title=\"38、tail（实时查看日志）\"></a>38、tail（实时查看日志）</h3><p><code>tail</code>命令用于查看文件末尾的内容，使用<code>-f</code>会持续显示文件新增内容。<br>结合<code>grep</code>命令过滤关键信息：‌<code>tail -f /var/log/syslog | grep &quot;error&quot;</code>。<br>1、基本使用：<code>tail -f /path/to/your/logfile.log</code>；<br>2、实时查看日志并显示最后10行：<code>tail -n 10 -f /path/to/your/logfile.log</code>；<br>3、实时查看日志并每5秒刷新显示最后10行：<code>watch -n 5 &quot;tail -n 10 /path/to/your/logfile.log&quot;</code>。<br>注意：<br>使用-f选项时，如果日志文件非常大，一开始可能会显示很多行内容。为了避免这种情况，可以先使用不带-f的tail命令来查看文件末尾的内容，然后再使用带-f的命令来实时跟踪。<br>例如，先查看最后10行：<br><code>tail -n 10 /path/to/your/logfile.log</code><br>然后使用实时跟踪命令：<br><code>tail -f /path/to/your/logfile.log</code><br>如果需要退出实时查看模式，可以简单地使用Ctrl + C来停止tail -f命令。  </p>\n<h3 id=\"38、head（查看文件开头前10行）\"><a href=\"#38、head（查看文件开头前10行）\" class=\"headerlink\" title=\"38、head（查看文件开头前10行）\"></a>38、head（查看文件开头前10行）</h3><p>1、<code>head /path/to/your/logfile.log</code>：查看文件开头前10行；<br>2、<code>head -n 2 /path/to/your/logfile.log</code>：查看文件开头前2行；<br>3、<code>head /path/to/your/logfileOne.log /path/to/your/logfileTow.log</code>：查看两个文件开头前10行。  </p>\n<br/>\n\n<hr>\n<br/>\n\n<h1 id=\"三、权限说明\"><a href=\"#三、权限说明\" class=\"headerlink\" title=\"三、权限说明\"></a>三、权限说明</h1><img src=\"/2023/10/11/Linux%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/Linux1.jpg\" class=\"\">\n<p>1、<code>drwxr-xr-x</code>说明：<br>（1）第一个字母表示：<code>d 文件夹，- 文件，l 文档</code><br>（2）后面9个字母，三个为一组<code>rwx</code>，<code>r</code>可读，<code>w</code>可写，<code>x</code>可执行，<code>-</code>没有此权限<br>（3）<code>r</code>：4，<code>w</code>：2，<code>x</code>：1  </p>\n<br/>\n\n\n<hr>\n<br/>\n\n\n<h1 id=\"四、其他使用及问题\"><a href=\"#四、其他使用及问题\" class=\"headerlink\" title=\"四、其他使用及问题\"></a>四、其他使用及问题</h1><h3 id=\"1、设置命令别名\"><a href=\"#1、设置命令别名\" class=\"headerlink\" title=\"1、设置命令别名\"></a>1、设置命令别名</h3><p>1、在命令行执行<code>vi ~/.bashrc</code>找到bashrc文件；<br>2、在文件中添加需要设置别名的命令保存退出即可。<br>例如设置docker镜像命令：  </p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">设置之后在命令行执行dps就会执行docker ps --format <span class=\"string\">&quot;table &#123;&#123;.ID&#125;&#125;\\t&#123;&#123;.Image&#125;&#125;\\t&#123;&#123;.Ports&#125;&#125;\\t&#123;&#123;.Status&#125;&#125;\\t&#123;&#123;.Name&#125;&#125;&quot;</span></span></span><br><span class=\"line\">alias dps=&#x27;docker ps --format &quot;table &#123;&#123;.ID&#125;&#125;\\t&#123;&#123;.Image&#125;&#125;\\t&#123;&#123;.Ports&#125;&#125;\\t&#123;&#123;.Status&#125;&#125;\\t&#123;&#123;.Name&#125;&#125;&quot;&#x27;</span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">设置docker 查看镜像列表命令别名</span></span><br><span class=\"line\">alias dis=&#x27;docker images&#x27;</span><br></pre></td></tr></table></figure>\n","more":"<hr>\n<h1 id=\"一、目录结构介绍\"><a href=\"#一、目录结构介绍\" class=\"headerlink\" title=\"一、目录结构介绍\"></a>一、目录结构介绍</h1><h3 id=\"1、-root-localhost-讲解说明\"><a href=\"#1、-root-localhost-讲解说明\" class=\"headerlink\" title=\"1、[root@localhost ~]#  讲解说明\"></a>1、[root@localhost ~]#  讲解说明</h3><p>（1）<code>root</code>：代表当前登录的用户，在Linux中管理员账户是<code>root</code>。<br>（2）<code>localhost</code>：当前计算机主机名。<br>（3）<code>~</code>：当前所在家目录。<br>（4）<code>/</code>：当前所在根目录。<br>（5）<code>#</code>：超级用户提示符。<br>（6）<code>$</code>：普通用户的提示符（<code>$</code>钱的符号，普通用户就是俗人，俗人就爱钱）。</p>\n<h3 id=\"2、目录结构说明\"><a href=\"#2、目录结构说明\" class=\"headerlink\" title=\"2、目录结构说明\"></a>2、目录结构说明</h3><p>（1）<code>/bin</code>：bin是Binary的缩写，这个目录存放着最常用的命令。<br>（2）<code>/boot</code>：这里存放的是启动Linux时使用的一些核心文件，包括一些连接文件以及镜像文件（不要随便动）。<br>（3）<code>/dev</code>：dev是Device（设备）的缩写，存放的是Linux的外部设备，在Linux中访问设备的方式和访问文件的方式是相同的。<br>（4）<code>/etc</code>：这个目录用来存放所有的系统管理所需要的配置文件和子目录。<br>（5）<code>/home</code>：用户的主目录，在Linux中，每个用户都有一个自己的目录，一般该目录名是以用户的账户命名的。<br>（6）<code>/lib</code>：这个目录里存放着系统最基本的动态连接共享库，其作用类似于Windows里的dll文件。<br>（7）<code>/lost+found</code>：这个目录一般情况下是空的，当系统非法关机后，这里就存放了一些文件。<br>（8）<code>/media</code>：Linux系统会自动识别一些设备，例如U盘、光驱等等，当识别后，Linux会把识别的设备挂载到这个目录下。<br>（9）<code>/mnt</code>：系统提供该目录是为了让用户临时挂在别的文件系统的，我们可以将光驱挂载在<code>/mnt</code>上，然后进入该目录就可以查看光驱里的内容了。<br>（10）<code>/opt</code>：这是给主机额外安装软件所摆放的目录，比如你安装一个oracle数据库，就可以放在这个目录下，默认是空的。<br>（11）<code>/proc</code>：这个目录是一个虚拟的目录，它是系统内存的映射，我们可以通过直接访问这个目录来获取系统信息。<br>（12）<code>/root</code>：该目录为系统管理员，也称作超级权限者的用户主目录。<br>（13）<code>/sbin</code>：s就是Super User的意思，这里存放的是系统管理员使用的系统管理程序。<br>（14）<code>/srv</code>：该目录存放一些服务启动之后需要提取的数据。<br>（15）<code>/sys</code>：这是Linux2.6内核的一个很大的变化，该目录下安装了2.6内核中新出现的一个文件系统sysfs。<br>（16）<code>/tmp</code>：这个目录是用来存放一些临时文件的。<br>（17）<code>/usr</code>：这个一个非常重要的目录，用户的很多应用程序和文件都放在这个目录下，类似于Windows下的program files目录。<br>（18）<code>/usr/bin</code>：系统用户使用的应用程序。</p>\n<br/>\n\n<hr>\n<br/>\n\n<h1 id=\"二、常用的Linux命令\"><a href=\"#二、常用的Linux命令\" class=\"headerlink\" title=\"二、常用的Linux命令\"></a>二、常用的Linux命令</h1><h3 id=\"1、cd（改变目录）\"><a href=\"#1、cd（改变目录）\" class=\"headerlink\" title=\"1、cd（改变目录）\"></a>1、cd（改变目录）</h3><p>（1）<code>cd /</code>：进入根目录；<br>（2）<code>cd /home/sharplee/creatfile</code>：进入到<code>home</code>文件夹下的<code>sharplee</code>文件夹下的<code>creatfile</code>目录；<br>（3）<code>cd ..</code>：回退到上一个目录，直接cd进入默认目录。特别说明：cd 空格 .. 才可以。</p>\n<h3 id=\"2、pwd（显示当前所在的目录路径）\"><a href=\"#2、pwd（显示当前所在的目录路径）\" class=\"headerlink\" title=\"2、pwd（显示当前所在的目录路径）\"></a>2、pwd（显示当前所在的目录路径）</h3><h3 id=\"3、ls（列出当前目录的所有文件）\"><a href=\"#3、ls（列出当前目录的所有文件）\" class=\"headerlink\" title=\"3、ls（列出当前目录的所有文件）\"></a>3、ls（列出当前目录的所有文件）</h3><p>（1）<code>ls</code>：列出当前目录中的所有文件；<br>（2）<code>ll</code>：比<code>ls</code>列出的内容更详细；<br>（3）<code>ls -a</code>：列出当前目录中所有文件包括隐藏文件；<br>（4）<code>ls -l</code>：同<code>ll</code>;<br>（5）<code>ls -l /path/to/file</code>：查看文件的权限；<br>（6）<code>ls -ld /path/to/directory</code>：查看目录的权限</p>\n<h3 id=\"4、touch（新建文件）\"><a href=\"#4、touch（新建文件）\" class=\"headerlink\" title=\"4、touch（新建文件）\"></a>4、touch（新建文件）</h3><p><code>touch</code>：新建一个文件，如：<code>touch index.js</code>，就会在当前目录下新建一个index.js文件。（如果文件已经存在，则只会修改文件的当前时间）</p>\n<h3 id=\"5、rm（删除文件）\"><a href=\"#5、rm（删除文件）\" class=\"headerlink\" title=\"5、rm（删除文件）\"></a>5、rm（删除文件）</h3><p><strong>常用后缀选项：</strong>  </p>\n<ul>\n<li><code>-f</code>：强制删除文件，忽略不存在的文件和不可写的文件，不会出现警告提示；  </li>\n<li><code>-d(--dir)</code>：删除空目录；  </li>\n<li><code>-i</code>：交互式地询问是否删除每个文件，如果要删除多个文件，rm将询问是否确认删除每个文件；  </li>\n<li><code>-I</code>：在删除超过三个文件或者递归删除前要求确认，此选项比-i 提示内容更少，但同样可以阻止大多数错误发生；  </li>\n<li><code>-r</code>：递归地删除目录及其内容，用于删除非空目录；  </li>\n<li><code>-v</code>：显示详细输出，列出每个删除的文件名；</li>\n</ul>\n<p><strong>使用例子：</strong><br>（1）<code>rm index.js</code>：删除index.js文件；<br>（2）<code>rm index1.js index2.js</code>：删除index1.js和index2.js文件；<br>（3）<code>rm -f index.js</code>：强制删除index.js文件；<br>（4）<code>rm -r src</code>：删除src目录（特别说明：一般不要使用rm，特别是rm -rf 命令，一定不能使用）；<br>（5）<code>rmdir test</code>：删除test文件夹；<br>（6）<code>rmdir -p test/test/test.txt</code>：递归删除。</p>\n<h3 id=\"6、mkdir（新建目录）\"><a href=\"#6、mkdir（新建目录）\" class=\"headerlink\" title=\"6、mkdir（新建目录）\"></a>6、mkdir（新建目录）</h3><p>（1）<code>mkdir test</code>：新建test文件夹；<br>（2）<code>mkdir -p test/test/test</code>：递归创建。</p>\n<h3 id=\"7、mv（移动文件）\"><a href=\"#7、mv（移动文件）\" class=\"headerlink\" title=\"7、mv（移动文件）\"></a>7、mv（移动文件）</h3><p><strong>常用后缀选项：</strong>  </p>\n<ul>\n<li><code>-b</code>：当目标文件存在，先进行备份在覆盖；</li>\n<li><code>-f</code>：强制覆盖，如果目标文件已经存在，则不询问，直接强制覆盖；</li>\n<li><code>-i</code>：交互移动，如果目标文件已经存在，则会询问用户是否覆盖（默认选项）；</li>\n<li><code>-n</code>：如果目标文件已经存在，则不会覆盖移动，而且不询问用户；</li>\n<li><code>-v</code>：显示文件或目录的移动过程；</li>\n<li><code>-u</code>：若目标文件已经存在，但两者相比，源文件更新，则会对目标文件进行升级；</li>\n</ul>\n<p><strong>常用示例：</strong><br>（1）<code>mv index.js src/</code>：将index.js移动到src目录下（文件夹用 文件夹名 + <code>/</code>的方式表示）；<br>（2）<code>mv -b a/aa b/</code>：将a目录下的aa文件移动到b目录中，因为b目录已经存在aa文件，所以b目录先备份一份b目录下的aa文件<code>aa~</code>，再将a目录下的aa文件移动到b目录；<br>（3）<code>mv -f index.js b/</code>：强制覆盖，不管b目录下有没有index.js，都将index.js移动到b目录下，如果b目录存在index.js，就覆盖；<br>（4）<code>mv a b</code>：将a文件名改为b；<br>（5）<code>mv file1.txt file2.txt file3.txt /target/directory/</code>：将文件<code>file1.txt</code>，<code>file2.txt</code>，<code>file3.txt</code>移动到<code>/target/directory/</code>；  </p>\n<h3 id=\"8、reset（初始化终端）\"><a href=\"#8、reset（初始化终端）\" class=\"headerlink\" title=\"8、reset（初始化终端）\"></a>8、reset（初始化终端）</h3><p><code>reset</code>：初始化终端；</p>\n<h3 id=\"9、clear（清屏）\"><a href=\"#9、clear（清屏）\" class=\"headerlink\" title=\"9、clear（清屏）\"></a>9、clear（清屏）</h3><p><code>clear</code>：清屏；</p>\n<h3 id=\"10、history（查看命令历史）\"><a href=\"#10、history（查看命令历史）\" class=\"headerlink\" title=\"10、history（查看命令历史）\"></a>10、history（查看命令历史）</h3><p><code>history</code>：查看命令历史；</p>\n<h3 id=\"11、help（帮助）\"><a href=\"#11、help（帮助）\" class=\"headerlink\" title=\"11、help（帮助）\"></a>11、help（帮助）</h3><p><code>help</code>：帮助；</p>\n<h3 id=\"12、exit（退出）\"><a href=\"#12、exit（退出）\" class=\"headerlink\" title=\"12、exit（退出）\"></a>12、exit（退出）</h3><p><code>exit</code>：帮助；</p>\n<h3 id=\"13、-（注释）\"><a href=\"#13、-（注释）\" class=\"headerlink\" title=\"13、#（注释）\"></a>13、#（注释）</h3><h3 id=\"14、cat（查看文件内容）\"><a href=\"#14、cat（查看文件内容）\" class=\"headerlink\" title=\"14、cat（查看文件内容）\"></a>14、cat（查看文件内容）</h3><p>（1）<code>cat test.txt</code>：查看test文件的内容；<br>（2）<code>cat &gt; test.txt</code>：新建一个test文件，按下回车之后，向test文件里输出保存内容，在按<code>ctr + d</code>来保存退出；<br>（3）<code>cat test1.txt test2.txt</code>：查看test1和test2文件的内容；<br>（4）<code>cat test1.txt &gt; test2.txt</code>：将test1文件内容备份到test2文件中；<br>（5）<code>cat test1.txt test2.txt &gt; test3.txt</code>：将test1和test2文件内容备份到test3文件中；<br>（6）<code>tac test.txt</code>：将test文件内容反过来查看；<br>（7）<code>cat test1.txt &gt;&gt; test2.txt</code>：将test1文件内容添加到test2文件内容末尾；<br>（8）<code>cat &gt;&gt; test.txt</code>：在终端输入内容到test.txt末尾，按<code>ctr + d</code>来保存退出；<br>（9）<code>cat -n test.txt</code>：查看test文件内容，并显示行号；<br>（10）<code>cat /etc/os-release</code>：查看当前系统版本；</p>\n<h3 id=\"15、查看系统内核\"><a href=\"#15、查看系统内核\" class=\"headerlink\" title=\"15、查看系统内核\"></a>15、查看系统内核</h3><p>（1）<code>uname -r</code>：查看系统内核；<br>（2）<code>cat /etc/redhat-release</code>：查看当前系统相关信息；</p>\n<h3 id=\"16、将数据从内存同步到硬盘\"><a href=\"#16、将数据从内存同步到硬盘\" class=\"headerlink\" title=\"16、将数据从内存同步到硬盘\"></a>16、将数据从内存同步到硬盘</h3><p><code>sync</code>：将数据从内存同步到硬盘；</p>\n<h3 id=\"17、关机\"><a href=\"#17、关机\" class=\"headerlink\" title=\"17、关机\"></a>17、关机</h3><p>（1）<code>half</code>：立刻关机；<br>（2）<code>shutdown -h now</code>：立刻关机；<br>（3）<code>shutdown -h 10</code>：10分钟后关机；<br>（4）<code>shutdown -h 20:30</code>：20：30的时候关机；<br>（5）<code>shutdown -h +30 &#39;系统将在30分钟后关机&#39;</code>：30分钟后关机，同时向在线用户发送警告消息；</p>\n<h3 id=\"18、重启\"><a href=\"#18、重启\" class=\"headerlink\" title=\"18、重启\"></a>18、重启</h3><p><code>reboot</code>：重启；</p>\n<h3 id=\"19、cp（复制粘贴）\"><a href=\"#19、cp（复制粘贴）\" class=\"headerlink\" title=\"19、cp（复制粘贴）\"></a>19、cp（复制粘贴）</h3><p><code>cp 【复制的文件名】 【要粘贴到的文件夹】</code><br>（1）<code>cp -r 【要复制的文件夹】 【要粘贴到的路径】</code>：将文件夹递归复制粘贴；  </p>\n<h3 id=\"20、chmod（更改文件权限）\"><a href=\"#20、chmod（更改文件权限）\" class=\"headerlink\" title=\"20、chmod（更改文件权限）\"></a>20、chmod（更改文件权限）</h3><p>（1）<code>chmod 777 文件名</code>：更改文件权限为777，可以应用于文件夹和文件，它将赋予所有者、所属组和其他用户全部的读取、写入和执行权限；<br>（2）<code>chmod 755</code>：主要用于文件夹，它给予所有者读取、写入和执行的权限，而所属组和其他用户只有读取和执行的权限，没有写入权限；<br>（2）<code>chmod 644</code>：主要用于文件，它给予所有者读取和写入的权限，而所属组和其他用户只有读取的权限。对于文件夹而言，执行的权限。<br>相关知识查看下面第三大点。</p>\n<h3 id=\"21、man（查看命令使用文档）\"><a href=\"#21、man（查看命令使用文档）\" class=\"headerlink\" title=\"21、man（查看命令使用文档）\"></a>21、man（查看命令使用文档）</h3><p><code>man cd</code>：查看cd命令的使用文档；</p>\n<h3 id=\"22、vim（修改文件内容）\"><a href=\"#22、vim（修改文件内容）\" class=\"headerlink\" title=\"22、vim（修改文件内容）\"></a>22、vim（修改文件内容）</h3><p><code>vim test.txt</code>：修改test文件内容，进入文件后按键盘中的<code>i</code>或者<code>Insert</code>键，就可以输入内容了，然后按<code>Esc</code>退出输入模式，敲入<code>:wq</code>表示保存退出，<code>:q</code>仅退出不保存，显示行号：<code>:set nu</code>，不显示行号：<code>set nonu</code>；</p>\n<h3 id=\"23、hostname（查看主机名）\"><a href=\"#23、hostname（查看主机名）\" class=\"headerlink\" title=\"23、hostname（查看主机名）\"></a>23、hostname（查看主机名）</h3><p><code>hostname 【要修改成的新主机名】</code>：修改主机名；</p>\n<h3 id=\"24、ps（查看当前系统正在运行的进程）\"><a href=\"#24、ps（查看当前系统正在运行的进程）\" class=\"headerlink\" title=\"24、ps（查看当前系统正在运行的进程）\"></a>24、ps（查看当前系统正在运行的进程）</h3><p>（1）<code>ps -a</code>：显示当前终端运行的所有进程<br>（2）<code>ps -u</code>：查看当前以用户登录的所有进程<br>（3）<code>ps -x</code>：显示后台运行进程的参数<br>（4）<code>ps -aux</code>：查看所有的进程<br>（5）<code>grep</code>：查找文件中符合条件的信息<br>（6）<code>ps -aux|grep mysql</code>：查找所有进程，过滤出mysql进程（查找出mysql进程）<br>（7）<code>rpm -qa | grep postgres</code>：查看当前服务器是否已安装PostgreSQL  </p>\n<h3 id=\"25、结束进程\"><a href=\"#25、结束进程\" class=\"headerlink\" title=\"25、结束进程\"></a>25、结束进程</h3><p><code>kill -9 【进程id】</code>：结束进程；</p>\n<h3 id=\"26、解压压缩包\"><a href=\"#26、解压压缩包\" class=\"headerlink\" title=\"26、解压压缩包\"></a>26、解压压缩包</h3><p>（1）解压tar.gz：<code>tar -zxvf 【压缩包名】</code>：解压压缩包；<br>（2）解压zip：<code>unzip -o aaa.zip</code>，如果要保留原来的文件，把解压后的文件存放在&#x2F;root&#x2F;test2目录下，则执行命令<code>unzip -o -d /root/test2/ ./aaa.zip</code>，<a href=\"https://blog.csdn.net/z19861216/article/details/131823727\">相关教程请点击</a></p>\n<h3 id=\"27、查看进程状态\"><a href=\"#27、查看进程状态\" class=\"headerlink\" title=\"27、查看进程状态\"></a>27、查看进程状态</h3><p><code>systemctl status postgresql.service</code>：查看postgresql服务器进程状态；</p>\n<h3 id=\"28、查看当前登录的用户名\"><a href=\"#28、查看当前登录的用户名\" class=\"headerlink\" title=\"28、查看当前登录的用户名\"></a>28、查看当前登录的用户名</h3><p><code>whoami</code>：查看当前登录的用户名；</p>\n<h3 id=\"29、查看系统中的所有用户\"><a href=\"#29、查看系统中的所有用户\" class=\"headerlink\" title=\"29、查看系统中的所有用户\"></a>29、查看系统中的所有用户</h3><p>（1）<code>cat /etc/passwd</code>：查看系统中的所有用户；<br>（2）<code>getent passwd</code>：该命令将显示系统中所有用户的用户名、用户ID、用户所属组ID、用户家目录等信息；  </p>\n<h3 id=\"30、启动、停止服务\"><a href=\"#30、启动、停止服务\" class=\"headerlink\" title=\"30、启动、停止服务\"></a>30、启动、停止服务</h3><p>（1）启动某个服务：<code>systemctl start 【服务名】</code><br>（2）停止某个服务：<code>systemctl stop 【服务名】</code><br>（3）重启某个服务：<code>systemctl restart 【服务名】</code><br>（4）查看一个服务的状态：<code>systemctl status 【服务名】</code><br>（5）开机时启用一个服务：<code>systemctl enable 【服务名】</code><br>（6）开机时关闭一个服务：<code>systemctl disable 【服务名】</code><br>（7）查看服务是否开机启动：<code>systemctl is-enabled 【服务名】</code>  </p>\n<h3 id=\"31、防火墙端口\"><a href=\"#31、防火墙端口\" class=\"headerlink\" title=\"31、防火墙端口\"></a>31、防火墙端口</h3><p>（1）增加防火墙端口号（端口范围 4400-4600）：<code>firewall-cmd --zone=public --add-port=4400-4600/udp --permanen</code><br>（2）指定端口 4369：<code>firewall-cmd --zone=public --add-port=4369/udp --permanen</code>，出现：<code>Warning: ALREADY_ENABLED: 4369:tcp</code>（说明4369端口通过成功）<br>（3）关闭指定端口：<code>firewall-cmd --zone=public --remove-port=80/tcp --permanent</code><br>（4）查看通过的端口：<code>firewall-cmd --zone=public --list-ports</code></p>\n<h3 id=\"32、sudo（以系统管理者的身份执行指令）\"><a href=\"#32、sudo（以系统管理者的身份执行指令）\" class=\"headerlink\" title=\"32、sudo（以系统管理者的身份执行指令）\"></a>32、sudo（以系统管理者的身份执行指令）</h3><p>（1）以root用户的环境变量执行命令：<code>sudo -i</code><br>（2）设置root初始密码：<code>sudo passwd root</code>（以root身份执行命令，需要输入当前用户的密码，不是root的密码）<br>（3）显示出自己（执行 sudo 的使用者）的权限：<code>sudo -l</code>  </p>\n<h3 id=\"33、su（切换身份）\"><a href=\"#33、su（切换身份）\" class=\"headerlink\" title=\"33、su（切换身份）\"></a>33、su（切换身份）</h3><p>（1）使用root密码，切换到root用户，但是并没有转到root用户家目录下：<code>su</code><br>（2）使用root密码，切换到root用户，并转到root用户的家目录下：<code>su -</code><br>（3）登陆root用户：<code>su root</code></p>\n<h3 id=\"34、scp（远程文件拷贝）\"><a href=\"#34、scp（远程文件拷贝）\" class=\"headerlink\" title=\"34、scp（远程文件拷贝）\"></a>34、scp（远程文件拷贝）</h3><p>现在假设服务器的ip为：<code>192.168.126.130</code>，域名是<code>www.abc.com</code><br>1、从服务器分别复制文件和文件夹到本地：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">scp root@192.168.126.130:/home/file /myMachine/x (可以将ip换成域名，也可以去掉root@)</span><br><span class=\"line\">scp -r www.abc.com:/home/file/ /myMachine/myFile/（-r：递归复制整个目录）</span><br></pre></td></tr></table></figure>\n<p>2、本地复制到服务器</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">复制文件</span><br><span class=\"line\">scp /myMachine/x root@192.168.126.130:/home/file</span><br><span class=\"line\">复制文件夹</span><br><span class=\"line\">scp -r /myMachine/myFile/ www.abc.com:/home/file/（-r：递归复制整个目录）</span><br></pre></td></tr></table></figure>\n<h3 id=\"35、查看运行的jar包\"><a href=\"#35、查看运行的jar包\" class=\"headerlink\" title=\"35、查看运行的jar包\"></a>35、查看运行的jar包</h3><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">以下几种命令均可</span></span><br><span class=\"line\">ps -ef | grep java      查看当前运行的java进程</span><br><span class=\"line\">ps -ef | grep xxx.jar   查看当前运行的jar进程</span><br><span class=\"line\"></span><br><span class=\"line\">ps aux | grep xxx.jar</span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">ps：process status的简称，用于显示当前进程的状态；</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">a：all简称，显示所有程序；</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">u：user简称，以用户为主的格式来显示；</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">x：显示所有程序，不区分终端机；</span></span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">查看某端口对应的线程pid</span></span><br><span class=\"line\">netstat -nlp |grep :9181</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">根据进程号查看端口号</span></span><br><span class=\"line\">netstat -anop | grep 15161</span><br></pre></td></tr></table></figure>\n<h3 id=\"36、jar包的启动、终止和启停脚本\"><a href=\"#36、jar包的启动、终止和启停脚本\" class=\"headerlink\" title=\"36、jar包的启动、终止和启停脚本\"></a>36、jar包的启动、终止和启停脚本</h3><p>1、jar包的运行  </p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">当前ssh窗口被锁定，不可进行其它操作，ctrl + c或直接关闭窗口停止程序</span><br><span class=\"line\">java -jar xxx.jar</span><br><span class=\"line\"></span><br><span class=\"line\">当前ssh窗口不被锁定，可进行其它操作，当窗口关闭时，程序退出</span><br><span class=\"line\">java -jar xxxxx.jar &amp;</span><br><span class=\"line\"></span><br><span class=\"line\">后台挂起程序，当账户退出或终端关闭时程序停止，日志文件存储在当前目录的nohup.out文件中</span><br><span class=\"line\">nohup java -jar xxx.jar &amp;</span><br><span class=\"line\"></span><br><span class=\"line\">指定输出日志到log.txt文件,后台挂起程序,当账户退出或终端关闭时,程序仍然运行</span><br><span class=\"line\">nohup java -jar xxxxxx.jar &gt; log.txt &amp;</span><br></pre></td></tr></table></figure>\n<p>2、jar的终止  </p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">9：使用第9种信号(SIGKILL)无条件终止该进程</span></span><br><span class=\"line\">kill -9 jar包pid</span><br></pre></td></tr></table></figure>\n<p>3、jar启停脚本  </p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">start.sh</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">将jar包启动对应的pid写入文件中，为停止时提供pid</span></span><br><span class=\"line\">nohup java -jar 包名.jar &gt;log.txt &amp;       </span><br><span class=\"line\">echo $! &gt; /var/run/包名.pid</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">shutdown.sh</span></span><br><span class=\"line\">PID=$(cat /var/run/包名.pid)</span><br><span class=\"line\">kill -9 $PID</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">给脚本添加可执行权限</span></span><br><span class=\"line\">sudo chmod +x ./test.sh</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"37、查找\"><a href=\"#37、查找\" class=\"headerlink\" title=\"37、查找\"></a>37、查找</h3><p>1、<code>find / -name 【需要查找的名字】</code>：全盘查找，例如：全盘查找harbor<code>find / -name harbor</code>；  </p>\n<h3 id=\"38、tail（实时查看日志）\"><a href=\"#38、tail（实时查看日志）\" class=\"headerlink\" title=\"38、tail（实时查看日志）\"></a>38、tail（实时查看日志）</h3><p><code>tail</code>命令用于查看文件末尾的内容，使用<code>-f</code>会持续显示文件新增内容。<br>结合<code>grep</code>命令过滤关键信息：‌<code>tail -f /var/log/syslog | grep &quot;error&quot;</code>。<br>1、基本使用：<code>tail -f /path/to/your/logfile.log</code>；<br>2、实时查看日志并显示最后10行：<code>tail -n 10 -f /path/to/your/logfile.log</code>；<br>3、实时查看日志并每5秒刷新显示最后10行：<code>watch -n 5 &quot;tail -n 10 /path/to/your/logfile.log&quot;</code>。<br>注意：<br>使用-f选项时，如果日志文件非常大，一开始可能会显示很多行内容。为了避免这种情况，可以先使用不带-f的tail命令来查看文件末尾的内容，然后再使用带-f的命令来实时跟踪。<br>例如，先查看最后10行：<br><code>tail -n 10 /path/to/your/logfile.log</code><br>然后使用实时跟踪命令：<br><code>tail -f /path/to/your/logfile.log</code><br>如果需要退出实时查看模式，可以简单地使用Ctrl + C来停止tail -f命令。  </p>\n<h3 id=\"38、head（查看文件开头前10行）\"><a href=\"#38、head（查看文件开头前10行）\" class=\"headerlink\" title=\"38、head（查看文件开头前10行）\"></a>38、head（查看文件开头前10行）</h3><p>1、<code>head /path/to/your/logfile.log</code>：查看文件开头前10行；<br>2、<code>head -n 2 /path/to/your/logfile.log</code>：查看文件开头前2行；<br>3、<code>head /path/to/your/logfileOne.log /path/to/your/logfileTow.log</code>：查看两个文件开头前10行。  </p>\n<br/>\n\n<hr>\n<br/>\n\n<h1 id=\"三、权限说明\"><a href=\"#三、权限说明\" class=\"headerlink\" title=\"三、权限说明\"></a>三、权限说明</h1><img src=\"/2023/10/11/Linux%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/Linux1.jpg\" class=\"\">\n<p>1、<code>drwxr-xr-x</code>说明：<br>（1）第一个字母表示：<code>d 文件夹，- 文件，l 文档</code><br>（2）后面9个字母，三个为一组<code>rwx</code>，<code>r</code>可读，<code>w</code>可写，<code>x</code>可执行，<code>-</code>没有此权限<br>（3）<code>r</code>：4，<code>w</code>：2，<code>x</code>：1  </p>\n<br/>\n\n\n<hr>\n<br/>\n\n\n<h1 id=\"四、其他使用及问题\"><a href=\"#四、其他使用及问题\" class=\"headerlink\" title=\"四、其他使用及问题\"></a>四、其他使用及问题</h1><h3 id=\"1、设置命令别名\"><a href=\"#1、设置命令别名\" class=\"headerlink\" title=\"1、设置命令别名\"></a>1、设置命令别名</h3><p>1、在命令行执行<code>vi ~/.bashrc</code>找到bashrc文件；<br>2、在文件中添加需要设置别名的命令保存退出即可。<br>例如设置docker镜像命令：  </p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">设置之后在命令行执行dps就会执行docker ps --format <span class=\"string\">&quot;table &#123;&#123;.ID&#125;&#125;\\t&#123;&#123;.Image&#125;&#125;\\t&#123;&#123;.Ports&#125;&#125;\\t&#123;&#123;.Status&#125;&#125;\\t&#123;&#123;.Name&#125;&#125;&quot;</span></span></span><br><span class=\"line\">alias dps=&#x27;docker ps --format &quot;table &#123;&#123;.ID&#125;&#125;\\t&#123;&#123;.Image&#125;&#125;\\t&#123;&#123;.Ports&#125;&#125;\\t&#123;&#123;.Status&#125;&#125;\\t&#123;&#123;.Name&#125;&#125;&quot;&#x27;</span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">设置docker 查看镜像列表命令别名</span></span><br><span class=\"line\">alias dis=&#x27;docker images&#x27;</span><br></pre></td></tr></table></figure>\n","categories":[{"name":"工作技能","path":"api/categories/工作技能.json"}],"tags":[{"name":"工作技能","path":"api/tags/工作技能.json"},{"name":"服务器","path":"api/tags/服务器.json"},{"name":"Linux","path":"api/tags/Linux.json"}]}