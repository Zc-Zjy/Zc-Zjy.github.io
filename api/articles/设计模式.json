{"title":"设计模式","slug":"设计模式","date":"2023-11-24T01:57:49.000Z","updated":"2024-12-31T02:17:48.741Z","comments":true,"path":"api/articles/设计模式.json","realPath":null,"excerpt":null,"covers":null,"cover":null,"content":"<br/>\n\n<hr>\n<h1 id=\"一、策略模式\"><a href=\"#一、策略模式\" class=\"headerlink\" title=\"一、策略模式\"></a>一、策略模式</h1><h3 id=\"1、后端\"><a href=\"#1、后端\" class=\"headerlink\" title=\"1、后端\"></a>1、后端</h3><p>1、说明：<br>定义一组算法，将每个算法都封装起来，并且使它们之间可以根据需求互换使用。<br>2、场景一：<br>（1）有一个系统，一开始只支持Mysql；</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * @创建人 zjy</span></span><br><span class=\"line\"><span class=\"comment\"> * @文件名 MysqlDemo</span></span><br><span class=\"line\"><span class=\"comment\"> * @创建时间 2023/11/24</span></span><br><span class=\"line\"><span class=\"comment\"> * @描述 数据库实体</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">MysqlDemo</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> String username;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> String password;</span><br><span class=\"line\"></span><br><span class=\"line\">    MysqlDemo(String username,String password) &#123;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.username = username;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.password = password;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> String <span class=\"title function_\">getUsername</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> username;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> String <span class=\"title function_\">getPassword</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> password;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * @创建人 zjy</span></span><br><span class=\"line\"><span class=\"comment\"> * @文件名 ServiceDemo</span></span><br><span class=\"line\"><span class=\"comment\"> * @创建时间 2023/11/24</span></span><br><span class=\"line\"><span class=\"comment\"> * @描述 业务处理</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">ServiceDemo</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">doServiceDemo</span> <span class=\"params\">(MysqlDemo mysqlDemo)</span> &#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;使用的数据库：&quot;</span> + mysqlDemo.getClass().getSimpleName());</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;使用的数据库用户名：&quot;</span> + mysqlDemo.getUsername());</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;使用的数据库密码：&quot;</span> + mysqlDemo.getPassword());</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * @创建人 zjy</span></span><br><span class=\"line\"><span class=\"comment\"> * @文件名 Test</span></span><br><span class=\"line\"><span class=\"comment\"> * @创建时间 2023/11/24</span></span><br><span class=\"line\"><span class=\"comment\"> * @描述 test</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Test</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        <span class=\"type\">MysqlDemo</span> <span class=\"variable\">mysqlDemo</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">MysqlDemo</span>(<span class=\"string\">&quot;Mysql&quot;</span>, <span class=\"string\">&quot;Mysql&quot;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">new</span> <span class=\"title class_\">ServiceDemo</span>().doServiceDemo(mysqlDemo);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">输出：</span><br><span class=\"line\">使用的数据库：MysqlDemo</span><br><span class=\"line\">使用的数据库用户名：Mysql</span><br><span class=\"line\">使用的数据库密码：Mysql</span><br></pre></td></tr></table></figure>\n<p>（2）因为系统升级，开始支持SqlService、Oracle、Postgresql，修改代码：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * @创建人 zjy</span></span><br><span class=\"line\"><span class=\"comment\"> * @文件名 DataBasesDemo</span></span><br><span class=\"line\"><span class=\"comment\"> * @创建时间 2023/11/24</span></span><br><span class=\"line\"><span class=\"comment\"> * @描述 数据库实体</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">DataBasesDemo</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> String username;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> String password;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> Integer type;</span><br><span class=\"line\"></span><br><span class=\"line\">    DataBasesDemo(String username,String password,Integer type) &#123;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.username = username;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.password = password;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.type = type;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> String <span class=\"title function_\">getUsername</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> username;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> String <span class=\"title function_\">getPassword</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> password;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> Integer <span class=\"title function_\">getType</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> type;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * @创建人 zjy</span></span><br><span class=\"line\"><span class=\"comment\"> * @文件名 DataBasesType</span></span><br><span class=\"line\"><span class=\"comment\"> * @创建时间 2023/11/24</span></span><br><span class=\"line\"><span class=\"comment\"> * @描述 数据库类型 0:Mysql 1:SqlService 2:Oracle 3:Postgresql</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">enum</span> <span class=\"title class_\">DataBasesType</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    Msql(<span class=\"number\">0</span>),</span><br><span class=\"line\">    SqlService(<span class=\"number\">1</span>),</span><br><span class=\"line\">    Oracle(<span class=\"number\">2</span>),</span><br><span class=\"line\">    Postgresql(<span class=\"number\">3</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> Integer code;</span><br><span class=\"line\"></span><br><span class=\"line\">    DataBasesType(Integer code) &#123;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.code = code;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> Integer <span class=\"title function_\">getCode</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> code;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * @创建人 zjy</span></span><br><span class=\"line\"><span class=\"comment\"> * @文件名 ServiceDemo</span></span><br><span class=\"line\"><span class=\"comment\"> * @创建时间 2023/11/24</span></span><br><span class=\"line\"><span class=\"comment\"> * @描述 业务处理</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">ServiceDemo</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">doServiceDemo</span> <span class=\"params\">(DataBasesDemo dataBasesDemo)</span> &#123;</span><br><span class=\"line\">        <span class=\"comment\">// 0:Mysql 1:SqlService 2:Oracle 3:Postgresql</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (Objects.equals(DataBasesType.Msql.getCode(), dataBasesDemo.getType())) &#123;</span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;使用的数据库：&quot;</span> + DataBasesType.Msql);</span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;使用的数据库用户名：&quot;</span> + dataBasesDemo.getUsername());</span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;使用的数据库密码：&quot;</span> + dataBasesDemo.getPassword());</span><br><span class=\"line\">        &#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (Objects.equals(DataBasesType.SqlService.getCode(), dataBasesDemo.getType())) &#123;</span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;使用的数据库：&quot;</span> + DataBasesType.SqlService);</span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;使用的数据库用户名：&quot;</span> + dataBasesDemo.getUsername());</span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;使用的数据库密码：&quot;</span> + dataBasesDemo.getPassword());</span><br><span class=\"line\">        &#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (Objects.equals(DataBasesType.Oracle, dataBasesDemo.getType())) &#123;</span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;使用的数据库：&quot;</span> + DataBasesType.Oracle);</span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;使用的数据库用户名：&quot;</span> + dataBasesDemo.getUsername());</span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;使用的数据库密码：&quot;</span> + dataBasesDemo.getPassword());</span><br><span class=\"line\">        &#125;<span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;使用的数据库：&quot;</span> + DataBasesType.Postgresql);</span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;使用的数据库用户名：&quot;</span> + dataBasesDemo.getUsername());</span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;使用的数据库密码：&quot;</span> + dataBasesDemo.getPassword());</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * @创建人 zjy</span></span><br><span class=\"line\"><span class=\"comment\"> * @文件名 Test</span></span><br><span class=\"line\"><span class=\"comment\"> * @创建时间 2023/11/24</span></span><br><span class=\"line\"><span class=\"comment\"> * @描述 test</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Test</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        <span class=\"type\">DataBasesDemo</span> <span class=\"variable\">mySqlDemo</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">DataBasesDemo</span>(<span class=\"string\">&quot;Mysql&quot;</span>, <span class=\"string\">&quot;Mysql&quot;</span>,<span class=\"number\">0</span>);</span><br><span class=\"line\">        <span class=\"type\">DataBasesDemo</span> <span class=\"variable\">sqlServiceDemo</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">DataBasesDemo</span>(<span class=\"string\">&quot;SqlService&quot;</span>, <span class=\"string\">&quot;SqlService&quot;</span>,<span class=\"number\">1</span>);</span><br><span class=\"line\">        <span class=\"type\">DataBasesDemo</span> <span class=\"variable\">oracleDemo</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">DataBasesDemo</span>(<span class=\"string\">&quot;Oracle&quot;</span>, <span class=\"string\">&quot;Oracle&quot;</span>,<span class=\"number\">2</span>);</span><br><span class=\"line\">        <span class=\"type\">DataBasesDemo</span> <span class=\"variable\">postgresqlDemo</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">DataBasesDemo</span>(<span class=\"string\">&quot;Postgresql&quot;</span>, <span class=\"string\">&quot;Postgresql&quot;</span>,<span class=\"number\">3</span>);</span><br><span class=\"line\">        <span class=\"keyword\">new</span> <span class=\"title class_\">ServiceDemo</span>().doServiceDemo(sqlServiceDemo);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">输出：</span><br><span class=\"line\">使用的数据库：SqlService</span><br><span class=\"line\">使用的数据库用户名：SqlService</span><br><span class=\"line\">使用的数据库密码：SqlService</span><br></pre></td></tr></table></figure>\n<p>查看<code>ServiceDemo</code>业务处理，有多个<code>if...else if...if</code>，这样如果以后再新增一个数据库，还要去修改<code>if...else</code>，代码看着很臃肿，不利于维护，有可能还要修改旧的代码，不可取的。依据面向对象设计原则中<code>开放封闭原则</code>（对扩展开放，对修改封闭），使用<code>策略模式</code>。<br>（3）使用策略模式（实体类和枚举不变，只修改业务）</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * @创建人 zjy</span></span><br><span class=\"line\"><span class=\"comment\"> * @文件名 ServiceDemo</span></span><br><span class=\"line\"><span class=\"comment\"> * @创建时间 2023/11/24</span></span><br><span class=\"line\"><span class=\"comment\"> * @描述 用来扩展，每个数据库都会实现这个接口</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">interface</span> <span class=\"title class_\">ServiceDemo</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">doService</span><span class=\"params\">(DataBasesDemo dataBasesDemo)</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * @创建人 zjy</span></span><br><span class=\"line\"><span class=\"comment\"> * @文件名 MysqlServiceDemoImpl</span></span><br><span class=\"line\"><span class=\"comment\"> * @创建时间 2023/11/24</span></span><br><span class=\"line\"><span class=\"comment\"> * @描述 Mysql业务处理</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">MysqlServiceDemoImpl</span> <span class=\"keyword\">implements</span> <span class=\"title class_\">ServiceDemo</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">doService</span> <span class=\"params\">(DataBasesDemo dataBasesDemo)</span> &#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;使用的数据库：&quot;</span> + DataBasesType.Msql);</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;使用的数据库用户名：&quot;</span> + dataBasesDemo.getUsername());</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;使用的数据库密码：&quot;</span> + dataBasesDemo.getPassword());</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * @创建人 zjy</span></span><br><span class=\"line\"><span class=\"comment\"> * @文件名 MysqlServiceDemoImpl</span></span><br><span class=\"line\"><span class=\"comment\"> * @创建时间 2023/11/24</span></span><br><span class=\"line\"><span class=\"comment\"> * @描述 Oracle业务处理</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">OracleServiceDemoImpl</span> <span class=\"keyword\">implements</span> <span class=\"title class_\">ServiceDemo</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">doService</span> <span class=\"params\">(DataBasesDemo dataBasesDemo)</span> &#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;使用的数据库：&quot;</span> + DataBasesType.Oracle);</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;使用的数据库用户名：&quot;</span> + dataBasesDemo.getUsername());</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;使用的数据库密码：&quot;</span> + dataBasesDemo.getPassword());</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * @创建人 zjy</span></span><br><span class=\"line\"><span class=\"comment\"> * @文件名 Test</span></span><br><span class=\"line\"><span class=\"comment\"> * @创建时间 2023/11/24</span></span><br><span class=\"line\"><span class=\"comment\"> * @描述 test</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Test</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        <span class=\"comment\">// 使用Mysql</span></span><br><span class=\"line\">        <span class=\"keyword\">new</span> <span class=\"title class_\">MysqlServiceDemoImpl</span>().doService(<span class=\"keyword\">new</span> <span class=\"title class_\">DataBasesDemo</span>(<span class=\"string\">&quot;Mysql&quot;</span>,<span class=\"string\">&quot;Mysql&quot;</span>,<span class=\"number\">0</span>));</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">输出：</span><br><span class=\"line\">使用的数据库：Msql</span><br><span class=\"line\">使用的数据库用户名：Mysql</span><br><span class=\"line\">使用的数据库密码：Mysql</span><br></pre></td></tr></table></figure>\n<p>说明：这样不用在业务里再写<code>if...else...</code>了，如果新增了一个数据库，直接实现<code>ServiceDemo</code>接口就行了，对修改关闭，对扩展开放。（还可以使用<code>Lambda</code>表达式来进行简化，不需要上面的实现类）<br>（4）使用Lambda简化（实体类、枚举类和ServiceDemo接口不变，删除<code>MysqlServiceDemoImpl</code>和<code>OracleServiceDemoImpl</code>类）</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * @创建人 zjy</span></span><br><span class=\"line\"><span class=\"comment\"> * @文件名 Test</span></span><br><span class=\"line\"><span class=\"comment\"> * @创建时间 2023/11/24</span></span><br><span class=\"line\"><span class=\"comment\"> * @描述 test</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Test</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        <span class=\"comment\">// 使用Mysql</span></span><br><span class=\"line\">        doService(<span class=\"keyword\">new</span> <span class=\"title class_\">DataBasesDemo</span>(<span class=\"string\">&quot;Mysql&quot;</span>, <span class=\"string\">&quot;Mysql&quot;</span>, <span class=\"number\">0</span>), dataBasesDemo -&gt; &#123;</span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;使用的数据库：&quot;</span> + DataBasesType.Msql);</span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;使用的数据库用户名：&quot;</span> + dataBasesDemo.getUsername());</span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;使用的数据库密码：&quot;</span> + dataBasesDemo.getPassword());</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">doService</span><span class=\"params\">(DataBasesDemo dataBasesDemo, ServiceDemo serviceDemo)</span> &#123;</span><br><span class=\"line\">        serviceDemo.doService(dataBasesDemo);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">输出：</span><br><span class=\"line\">使用的数据库：Msql</span><br><span class=\"line\">使用的数据库用户名：Mysql</span><br><span class=\"line\">使用的数据库密码：Mysql</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"2、前端\"><a href=\"#2、前端\" class=\"headerlink\" title=\"2、前端\"></a>2、前端</h3><p>1、使用<code>if...else...</code>的代码：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">test</span>(<span class=\"params\">tag, num1, num2</span>) &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(tag == <span class=\"string\">&#x27;add&#x27;</span>) &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> num1 + num2;</span><br><span class=\"line\">\t&#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (tag == <span class=\"string\">&#x27;sub&#x27;</span>) &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> num1 - num2;</span><br><span class=\"line\">\t&#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (tag == <span class=\"string\">&#x27;mul&#x27;</span>) &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> num1 * num2;</span><br><span class=\"line\">\t&#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(tag == <span class=\"string\">&#x27;div&#x27;</span>) &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> num1 / num2;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>2、改进：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> data = &#123;</span><br><span class=\"line\">\t<span class=\"string\">&#x27;add&#x27;</span>: <span class=\"keyword\">function</span> (<span class=\"params\">num1, num2</span>) &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> num1 + num2;</span><br><span class=\"line\">\t&#125;,</span><br><span class=\"line\">\t<span class=\"string\">&#x27;sub&#x27;</span>: <span class=\"keyword\">function</span> (<span class=\"params\">num1, num2</span>) &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> num1 - num2;</span><br><span class=\"line\">\t&#125;,</span><br><span class=\"line\">\t<span class=\"string\">&#x27;mul&#x27;</span>: <span class=\"keyword\">function</span> (<span class=\"params\">num1, num2</span>) &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> num1 * num2;</span><br><span class=\"line\">\t&#125;,</span><br><span class=\"line\">\t<span class=\"string\">&#x27;div&#x27;</span>: <span class=\"keyword\">function</span> (<span class=\"params\">num1, num2</span>) &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> num1 / num2;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">test</span> (tag, num1, num2) &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> data[tag](num1, num2);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>3、使用策略模式：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">StrategyDemo</span> &#123;</span><br><span class=\"line\">\t<span class=\"title function_\">constructor</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">\t\t<span class=\"variable language_\">this</span>.<span class=\"property\">strategy</span> = <span class=\"literal\">null</span>; <span class=\"comment\">// strategy指代下面的Add、Sub、Mul、Div类</span></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"title function_\">setStrategy</span>(<span class=\"params\">strategy</span>) &#123;</span><br><span class=\"line\">\t\t<span class=\"variable language_\">this</span>.<span class=\"property\">strategy</span> = strategy;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"title function_\">result</span>(<span class=\"params\">num1, num2</span>) &#123;</span><br><span class=\"line\">\t\t<span class=\"variable language_\">this</span>.<span class=\"property\">strategy</span>.<span class=\"title function_\">do</span>(num1, num2);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Add</span> &#123;</span><br><span class=\"line\">\t<span class=\"title function_\">do</span>(<span class=\"params\">num1, num2</span>) &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> num1 + num2;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Sub</span> &#123;</span><br><span class=\"line\">\t<span class=\"title function_\">do</span>(<span class=\"params\">num1, num2</span>) &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> num1 - num2;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Mul</span> &#123;</span><br><span class=\"line\">\t<span class=\"title function_\">do</span>(<span class=\"params\">num1, num2</span>) &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> num1 * num2;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Div</span> &#123;</span><br><span class=\"line\">\t<span class=\"title function_\">do</span>(<span class=\"params\">num1, num2</span>) &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> num1 / num2;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">test</span>:</span><br><span class=\"line\"><span class=\"keyword\">let</span> strategyDemo = <span class=\"keyword\">new</span> <span class=\"title class_\">StrategyDemo</span>();</span><br><span class=\"line\">strategyDemo.<span class=\"title function_\">setStrategy</span>(<span class=\"keyword\">new</span> <span class=\"title class_\">Add</span>());</span><br><span class=\"line\">strategyDemo.<span class=\"title function_\">result</span>(<span class=\"number\">3</span>, <span class=\"number\">2</span>);</span><br></pre></td></tr></table></figure>\n\n\n\n<br/>\n\n\n<hr>\n<br/>\n\n\n\n<h1 id=\"二、代理模式\"><a href=\"#二、代理模式\" class=\"headerlink\" title=\"二、代理模式\"></a>二、代理模式</h1><p>什么是静态代理和动态代理？<br>比如有一个中介公司，中介公司里面有3个中介，分别是小红、小明、小江，然后有一个房东，有很多套房子，想要将房子租出去，房东将第一套房子交给中介小红帮他出租，结果小红能力很强，房东以后就将自己所有房子都交给小红，固定不变，这就是静态代理；<br>房东将房子交给中介公司，我不管谁能力强，我只需要将房子租出去，由公司动态将房子随机分配给小红、小明、小江三人，这就是动态代理。  </p>\n<h3 id=\"1、静态代理模式\"><a href=\"#1、静态代理模式\" class=\"headerlink\" title=\"1、静态代理模式\"></a>1、静态代理模式</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 创建一个接口</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">interface</span> <span class=\"title class_\">Rent</span> &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">void</span> <span class=\"title function_\">rent</span><span class=\"params\">()</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 创建一个房东类</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Landlord</span> <span class=\"keyword\">implements</span> <span class=\"title class_\">Rent</span> &#123;</span><br><span class=\"line\">\t<span class=\"meta\">@Override</span></span><br><span class=\"line\">\t<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">rent</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">\t\tSystem.out.println(<span class=\"string\">&quot;我是房东，我要出租房子&quot;</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 创建一个代理类</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Proxy</span> <span class=\"keyword\">implements</span> <span class=\"title class_\">Rent</span> &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">private</span> Landlord landlord;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">public</span> <span class=\"title function_\">Proxy</span><span class=\"params\">(Landlord landlord)</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">this</span>.landlord = landlord;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"meta\">@Override</span></span><br><span class=\"line\">\t<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">rent</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"comment\">// 可以写新的业务逻辑</span></span><br><span class=\"line\">\t\tSystem.out.println(<span class=\"string\">&quot;我是代理，我要出租房子&quot;</span>);</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\t<span class=\"comment\">// 原本的业务逻辑</span></span><br><span class=\"line\">\t\tlandlord.rent();</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 测试</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Test</span> &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"type\">Landlord</span> <span class=\"variable\">landlord</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Landlord</span>();</span><br><span class=\"line\">\t\t<span class=\"type\">Proxy</span> <span class=\"variable\">proxy</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Proxy</span>(landlord);</span><br><span class=\"line\">\t\tproxy.rent();</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"2、动态代理模式\"><a href=\"#2、动态代理模式\" class=\"headerlink\" title=\"2、动态代理模式\"></a>2、动态代理模式</h3><p>说明：由上面的例子可以得知，是由公司动态分配，而这个公司，在java这里只有两家，分别是<code>JDK动态代理</code>和<code>cglib</code>。<br><code>JDK动态代理</code>：（java原生自带的）JDK原生的实现方式，需要被代理的目标类必须有接口（也就是目标类必须有实现的接口，如果只有一个没有实现接口的普通类是不行的）！他会根据目标类的接口动态生成一个代理对象！代理对象和目标对象有相同的接口！（<strong>如果有接口就用</strong>）<br><code>cglib</code>：（第三方的，导入spring包就有）通过继承被代理的目标类实现代理，所以不需要目标类实现接口！（<strong>如果没有接口就用</strong>）<br>1、<code>JDK动态代理</code><br>JDK动态代理使用<code>java.lang.reflect.Proxy</code>这个类来进行实现的（JDK动态代理只能对接口中的方法进行增强）。  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 这个jdk动态代理工厂类</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">ProxyFactory</span> &#123;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"keyword\">private</span> Object target;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"keyword\">public</span> <span class=\"title function_\">ProxyFactory</span><span class=\"params\">(Object target)</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">this</span>.target = target;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"keyword\">public</span> Object <span class=\"title function_\">getProxy</span><span class=\"params\">()</span>&#123;</span><br><span class=\"line\">\t\t<span class=\"type\">ClassLoader</span> <span class=\"variable\">classLoader</span> <span class=\"operator\">=</span> target.getClass().getClassLoader();</span><br><span class=\"line\">\t\tClass&lt;?&gt;[] interfaces = target.getClass().getInterfaces();</span><br><span class=\"line\">\t\t<span class=\"type\">InvocationHandler</span> <span class=\"variable\">handler</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">InvocationHandler</span>() &#123;</span><br><span class=\"line\">\t\t\t<span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">\t\t\t * invoke方法：就是代理对象执行的代理方法</span></span><br><span class=\"line\"><span class=\"comment\">\t\t\t * proxy：代理对象</span></span><br><span class=\"line\"><span class=\"comment\">\t\t\t * method：代理对象需要实现的方法</span></span><br><span class=\"line\"><span class=\"comment\">\t\t\t * args：method所对应的方法参数</span></span><br><span class=\"line\"><span class=\"comment\">\t\t\t */</span></span><br><span class=\"line\">\t\t\t<span class=\"meta\">@Override</span></span><br><span class=\"line\">\t\t\t<span class=\"keyword\">public</span> Object <span class=\"title function_\">invoke</span><span class=\"params\">(Object proxy, Method method, Object[] args)</span> <span class=\"keyword\">throws</span> Throwable &#123;</span><br><span class=\"line\">\t\t\t\tSystem.out.println(<span class=\"string\">&quot;我是代理，我要出租房子&quot;</span>);</span><br><span class=\"line\">\t\t\t\t<span class=\"comment\">// 调用目标方法，执行原来目标方法的业务逻辑</span></span><br><span class=\"line\">\t\t\t\t<span class=\"type\">Object</span> <span class=\"variable\">result</span> <span class=\"operator\">=</span> method.invoke(target, args);</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">return</span> result;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;;</span><br><span class=\"line\">\t\t<span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">\t\t * newProxyInstance()：创建一个代理实例</span></span><br><span class=\"line\"><span class=\"comment\">\t\t * 其中有三个参数：</span></span><br><span class=\"line\"><span class=\"comment\">\t\t * 1、classLoader：加载动态生成的代理类的类加载器</span></span><br><span class=\"line\"><span class=\"comment\">\t\t * 2、interfaces：目标对象实现的所有接口的class对象所组成的数组</span></span><br><span class=\"line\"><span class=\"comment\">\t\t * 3、handler：设置代理对象实现目标对象方法的过程，也就是代理类所要执行的业务逻辑</span></span><br><span class=\"line\"><span class=\"comment\">\t\t */</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> Proxy.newProxyInstance(classLoader, interfaces, handler);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 测试</span></span><br><span class=\"line\"><span class=\"comment\">// 目标方法要实现的接口</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">interface</span> <span class=\"title class_\">Rent</span> &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">void</span> <span class=\"title function_\">rent</span><span class=\"params\">()</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 目标方法</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Landlord</span> <span class=\"keyword\">implements</span> <span class=\"title class_\">Rent</span> &#123;</span><br><span class=\"line\">\t<span class=\"meta\">@Override</span></span><br><span class=\"line\">\t<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">rent</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">\t\tSystem.out.println(<span class=\"string\">&quot;我是房东，我要出租房子&quot;</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 测试类</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Test</span> &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"comment\">// 创建目标类</span></span><br><span class=\"line\">\t\t<span class=\"type\">Landlord</span> <span class=\"variable\">landlord</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Landlord</span>();</span><br><span class=\"line\">\t\t<span class=\"comment\">// 创建代理工厂</span></span><br><span class=\"line\">\t\t<span class=\"type\">ProxyFactory</span> <span class=\"variable\">proxyFactory</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">ProxyFactory</span>(landlord);</span><br><span class=\"line\">\t\t<span class=\"comment\">// 创建代理对象，这里注意：必须转成接口类型，因为JDK动态代理是基于接口的！</span></span><br><span class=\"line\">\t\t<span class=\"type\">Rent</span> <span class=\"variable\">proxy</span> <span class=\"operator\">=</span> (Rent) proxyFactory.getProxy();</span><br><span class=\"line\">\t\t<span class=\"comment\">// 代理对象只要执行接口中的方法，就会执行invoke方法</span></span><br><span class=\"line\">\t\tproxy.rent();</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>上面也可以使用万能动态代理工具类来实现：  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 动态代理有两个类Proxy和InvocationHandler</span></span><br><span class=\"line\"><span class=\"comment\"> * Proxy类是 生成得到代理类</span></span><br><span class=\"line\"><span class=\"comment\"> * InvocationHandler类是 处理代理实例</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">ProxyInvocationHandler</span> <span class=\"keyword\">implements</span> <span class=\"title class_\">InvocationHandler</span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">//被代理的接口</span></span><br><span class=\"line\">  <span class=\"keyword\">private</span> Object target;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">setTarget</span><span class=\"params\">(Object target)</span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.target = target;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">//生成得到代理类</span></span><br><span class=\"line\">  <span class=\"keyword\">public</span> Object <span class=\"title function_\">getProxy</span><span class=\"params\">()</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> Proxy.newProxyInstance(<span class=\"built_in\">this</span>.getClass().getClassLoader(),</span><br><span class=\"line\">                target.getClass().getInterfaces(),</span><br><span class=\"line\">                <span class=\"built_in\">this</span></span><br><span class=\"line\">        );</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//处理代理实例</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> Object <span class=\"title function_\">invoke</span><span class=\"params\">(Object proxy, Method method, Object[] args)</span> <span class=\"keyword\">throws</span> Throwable &#123;</span><br><span class=\"line\">        log(method.getName());</span><br><span class=\"line\">        <span class=\"type\">Object</span> <span class=\"variable\">result</span> <span class=\"operator\">=</span> method.invoke(target,args);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> result;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//增加一个日志功能</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">log</span><span class=\"params\">(String log)</span>&#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;现在执行的操作是：&quot;</span> + log);</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;现在时间是：&quot;</span> + <span class=\"keyword\">new</span> <span class=\"title class_\">SimpleDateFormat</span>(<span class=\"string\">&quot;yyyy-MM-dd HH:mm:ss&quot;</span>).format(<span class=\"keyword\">new</span> <span class=\"title class_\">Date</span>()));</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>直接使用JDK动态代理：  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 目标方法要实现的接口</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">interface</span> <span class=\"title class_\">Rent</span> &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">void</span> <span class=\"title function_\">rent</span><span class=\"params\">()</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 目标方法</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Landlord</span> <span class=\"keyword\">implements</span> <span class=\"title class_\">Rent</span> &#123;</span><br><span class=\"line\">\t<span class=\"meta\">@Override</span></span><br><span class=\"line\">\t<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">rent</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">\t\tSystem.out.println(<span class=\"string\">&quot;我是房东，我要出租房子&quot;</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Test</span> &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"type\">Rent</span> <span class=\"variable\">proxy</span> <span class=\"operator\">=</span> (Rent)Proxy.newProxyInstance(Test.class.getClassLoader(), Landlord.class.getInterfaces(), <span class=\"keyword\">new</span> <span class=\"title class_\">InvocationHandler</span>() &#123;</span><br><span class=\"line\">            </span><br><span class=\"line\">\t\t\t<span class=\"meta\">@Override</span></span><br><span class=\"line\">            <span class=\"keyword\">public</span> Object <span class=\"title function_\">invoke</span><span class=\"params\">(Object proxy, Method method, Object[] args)</span> <span class=\"keyword\">throws</span> Throwable &#123;</span><br><span class=\"line\">                System.out.println(<span class=\"string\">&quot;我是代理，我要出租房子&quot;</span>);</span><br><span class=\"line\">                <span class=\"comment\">// 调用目标方法，执行原来目标方法的业务逻辑</span></span><br><span class=\"line\">                <span class=\"type\">Object</span> <span class=\"variable\">result</span> <span class=\"operator\">=</span> method.invoke(target, args);</span><br><span class=\"line\">                <span class=\"keyword\">return</span> result;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;);</span><br><span class=\"line\">\t\t<span class=\"comment\">// 代理对象只要执行接口中的方法，就会执行invoke方法</span></span><br><span class=\"line\">\t\tproxy.rent();</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>2、<code>Cglib</code>动态代理<br>使用<code>org.springframework.cglib.proxy.Enhancer</code>类进行实现的。<br>前提条件：必须引入<code>spring-context</code>依赖。  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 目标方法</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Landlord</span> &#123;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">rent</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">\t\tSystem.out.println(<span class=\"string\">&quot;我是房东，我要出租房子&quot;</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Test</span> &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"type\">Enhancer</span> <span class=\"variable\">enhancer</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Enhancer</span>();</span><br><span class=\"line\">\t\t<span class=\"comment\">// 将要代理的目标对象设置给代理对象</span></span><br><span class=\"line\">\t\tenhancer.setSuperclass(Landlord.class);</span><br><span class=\"line\">\t\t<span class=\"comment\">// 设置回调函数，MethodInterceptor是回调类的实现类</span></span><br><span class=\"line\">\t\tenhancer.setCallback(<span class=\"keyword\">new</span> <span class=\"title class_\">MethodInterceptor</span>() &#123;</span><br><span class=\"line\">\t\t\t<span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">\t\t\t * obj：代理对象</span></span><br><span class=\"line\"><span class=\"comment\">\t\t\t * method：目标方法</span></span><br><span class=\"line\"><span class=\"comment\">\t\t\t * args：目标方法的参数</span></span><br><span class=\"line\"><span class=\"comment\">\t\t\t * proxy：目标方法的代理对象</span></span><br><span class=\"line\"><span class=\"comment\">\t\t\t */</span></span><br><span class=\"line\">\t\t\t<span class=\"meta\">@Override</span></span><br><span class=\"line\">\t\t\t<span class=\"keyword\">public</span> Object <span class=\"title function_\">intercept</span><span class=\"params\">(Object obj, Method method, Object[] args, MethodProxy proxy)</span> <span class=\"keyword\">throws</span> Throwable &#123;</span><br><span class=\"line\">\t\t\t\tSystem.out.println(<span class=\"string\">&quot;我是代理，我要出租房子&quot;</span>);</span><br><span class=\"line\">\t\t\t\t<span class=\"comment\">// 调用目标方法，执行原来目标方法的业务逻辑</span></span><br><span class=\"line\">\t\t\t\t<span class=\"type\">Object</span> <span class=\"variable\">result</span> <span class=\"operator\">=</span> proxy.invokeSuper(obj, args);</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">return</span> result;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;);</span><br><span class=\"line\">\t\t<span class=\"type\">Landlord</span> <span class=\"variable\">proxy</span> <span class=\"operator\">=</span> (Landlord) enhancer.create();</span><br><span class=\"line\">\t\tproxy.rent();</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<br/>\n\n\n\n<hr>\n<br/>\n\n\n\n<h1 id=\"三、工厂模式\"><a href=\"#三、工厂模式\" class=\"headerlink\" title=\"三、工厂模式\"></a>三、工厂模式</h1><p>工厂模式分为：简单工厂模式、工厂方法模式、抽象工厂模式。</p>\n<h3 id=\"1、简单工厂模式\"><a href=\"#1、简单工厂模式\" class=\"headerlink\" title=\"1、简单工厂模式\"></a>1、简单工厂模式</h3><p>简单工厂模式：定义一个工厂类，根据传入的参数不同返回不同的实例，被创建的实例通常都具有共同的父类。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// Car接口</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">interface</span> <span class=\"title class_\">Car</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">print</span><span class=\"params\">()</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// Benz类</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Benz</span> <span class=\"keyword\">implements</span> <span class=\"title class_\">Car</span> &#123;</span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">print</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;Benz&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// BMW类</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">BMW</span> <span class=\"keyword\">implements</span> <span class=\"title class_\">Car</span> &#123;</span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">print</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;BMW&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 工厂类</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">CarFactory</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> Car <span class=\"title function_\">createCar</span><span class=\"params\">(String type)</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"string\">&quot;Benz&quot;</span>.equals(type)) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Benz</span>();</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (<span class=\"string\">&quot;BMW&quot;</span>.equals(type)) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"title class_\">BMW</span>();</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">null</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>上面工厂类中，如果需要增加一个<code>Audi</code>类，那么就需要修改工厂类中的代码，违反了开闭原则。<br>我们可以在工厂中使用反射来创建对象：  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 工厂类二</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">CarFactory</span> &#123;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> Car <span class=\"title function_\">createCar</span><span class=\"params\">(Class&lt;? extends Car&gt; carClass)</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> carClass.getDeclaredConstructor().newInstance();</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"title class_\">RuntimeException</span>(e);</span><br><span class=\"line\">        &#125; </span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>或者使用<code>工厂方法模式</code>（是简单工厂模式的升级版），将工厂类中方法抽象出来，让子类实现工厂方法，返回不同实例。  </p>\n<h3 id=\"2、工厂方法模式\"><a href=\"#2、工厂方法模式\" class=\"headerlink\" title=\"2、工厂方法模式\"></a>2、工厂方法模式</h3><p>（1）将原来的工厂类抽象，定义一个工厂接口，让要创建的实体类的工厂类去实现这个接口。  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 工厂接口</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">interface</span> <span class=\"title class_\">CarFactory</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> Car <span class=\"title function_\">createCar</span><span class=\"params\">()</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// Benz工厂类</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">BenzFactory</span> <span class=\"keyword\">implements</span> <span class=\"title class_\">CarFactory</span> &#123;</span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> Car <span class=\"title function_\">createCar</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">\t\tSystem.out.println(<span class=\"string\">&quot;这是Benz（奔驰汽车）工厂，只创建Benz（奔驰）&quot;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Benz</span>();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// BMW工厂类</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">BMWFactory</span> <span class=\"keyword\">implements</span> <span class=\"title class_\">CarFactory</span> &#123;</span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> Car <span class=\"title function_\">createCar</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">\t\tSystem.out.println(<span class=\"string\">&quot;这是BMW（宝马汽车）工厂，只创建BMW（宝马）&quot;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"title class_\">BMW</span>();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>（2）原来的Car接口和实现类不变。  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// Car接口</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">interface</span> <span class=\"title class_\">Car</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">print</span><span class=\"params\">()</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// Benz类</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Benz</span> <span class=\"keyword\">implements</span> <span class=\"title class_\">Car</span> &#123;</span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">print</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;Benz&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// BMW类</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">BMW</span> <span class=\"keyword\">implements</span> <span class=\"title class_\">Car</span> &#123;</span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">print</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;BMW&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 测试</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Test</span> &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"type\">CarFactory</span> <span class=\"variable\">benzFactory</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">BenzFactory</span>();</span><br><span class=\"line\">\t\t<span class=\"type\">Car</span> <span class=\"variable\">benz</span> <span class=\"operator\">=</span> benzFactory.createCar();</span><br><span class=\"line\">\t\tbenz.print();</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\t<span class=\"type\">CarFactory</span> <span class=\"variable\">bmwFactory</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">BMWFactory</span>();</span><br><span class=\"line\">\t\t<span class=\"type\">Car</span> <span class=\"variable\">bmw</span> <span class=\"operator\">=</span> bmwFactory.createCar();</span><br><span class=\"line\">\t\tbmw.print();</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"3、抽象工厂模式\"><a href=\"#3、抽象工厂模式\" class=\"headerlink\" title=\"3、抽象工厂模式\"></a>3、抽象工厂模式</h3><p>抽象工厂模式相当于工厂方法模式的升级版，工厂方法模式中，一个工厂只能生产一种产品，而抽象工厂模式中，一个工厂可以生产多种产品。  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 抽象工厂接口</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">interface</span> <span class=\"title class_\">AbstractFactory</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> Car <span class=\"title function_\">createCar</span><span class=\"params\">()</span>;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> Engine <span class=\"title function_\">createEngine</span><span class=\"params\">()</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 抽象产品接口一</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">interface</span> <span class=\"title class_\">Car</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">print</span><span class=\"params\">()</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 抽象产品接口二</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">interface</span> <span class=\"title class_\">Engine</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">print</span><span class=\"params\">()</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 具体工厂类</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">BenzFactory</span> <span class=\"keyword\">implements</span> <span class=\"title class_\">AbstractFactory</span> &#123;</span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> Car <span class=\"title function_\">createCar</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Benz</span>();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> Engine <span class=\"title function_\">createEngine</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"title class_\">BenzEngine</span>();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 具体工厂类</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">BMWFactory</span> <span class=\"keyword\">implements</span> <span class=\"title class_\">AbstractFactory</span> &#123;</span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> Car <span class=\"title function_\">createCar</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"title class_\">BMW</span>();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> Engine <span class=\"title function_\">createEngine</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"title class_\">BMWEngine</span>();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 具体产品类一</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Benz</span> <span class=\"keyword\">implements</span> <span class=\"title class_\">Car</span> &#123;</span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">print</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;Benz&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 具体产品类二</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">BMW</span> <span class=\"keyword\">implements</span> <span class=\"title class_\">Car</span> &#123;</span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">print</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;BMW&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 具体产品类三</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">BenzEngine</span> <span class=\"keyword\">implements</span> <span class=\"title class_\">Engine</span> &#123;</span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">print</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;BenzEngine&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 具体产品类四</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">BMWEngine</span> <span class=\"keyword\">implements</span> <span class=\"title class_\">Engine</span> &#123;</span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">print</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;BMWEngine&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 测试</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Test</span> &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"type\">AbstractFactory</span> <span class=\"variable\">benzFactory</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">BenzFactory</span>();</span><br><span class=\"line\">\t\t<span class=\"type\">Car</span> <span class=\"variable\">benz</span> <span class=\"operator\">=</span> benzFactory.createCar();</span><br><span class=\"line\">\t\tbenz.print();</span><br><span class=\"line\">\t\t<span class=\"type\">Engine</span> <span class=\"variable\">benzEngine</span> <span class=\"operator\">=</span> benzFactory.createEngine();</span><br><span class=\"line\">\t\tbenzEngine.print();</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\t<span class=\"type\">AbstractFactory</span> <span class=\"variable\">bmwFactory</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">BMWFactory</span>();</span><br><span class=\"line\">\t\t<span class=\"type\">Car</span> <span class=\"variable\">bmw</span> <span class=\"operator\">=</span> bmwFactory.createCar();</span><br><span class=\"line\">\t\tbmw.print();</span><br><span class=\"line\">\t\t<span class=\"type\">Engine</span> <span class=\"variable\">bmwEngine</span> <span class=\"operator\">=</span> bmwFactory.createEngine();</span><br><span class=\"line\">\t\tbmwEngine.print();</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n\n<br/>\n\n\n\n<hr>\n<br/>\n\n\n\n<h1 id=\"四、单例模式\"><a href=\"#四、单例模式\" class=\"headerlink\" title=\"四、单例模式\"></a>四、单例模式</h1><p>作用：确保某个类只能创建一个对象。  </p>\n<h3 id=\"1、饿汉式单例模式\"><a href=\"#1、饿汉式单例模式\" class=\"headerlink\" title=\"1、饿汉式单例模式\"></a>1、饿汉式单例模式</h3><p>获取对象时，对象早就创建好了（很饿）。<br>1、实现步骤：<br>（1）将类的构造器私有；<br>（2）定义一个静态变量，并new一个对象；<br>（3）定义一个静态方法，将上面new的对象返回。  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">A</span> &#123;</span><br><span class=\"line\">\t<span class=\"comment\">//（1）将类的构造器私有</span></span><br><span class=\"line\">\t<span class=\"keyword\">private</span> <span class=\"title function_\">A</span><span class=\"params\">()</span> &#123;&#125;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"comment\">//（2）定义一个静态变量，并new一个对象</span></span><br><span class=\"line\">\t<span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"type\">A</span> <span class=\"variable\">a</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">A</span>();</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"comment\">//（3）定义一个静态方法，将上面new的对象返回</span></span><br><span class=\"line\">\t<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> A <span class=\"title function_\">getA</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> a;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"2、懒汉式单例模式\"><a href=\"#2、懒汉式单例模式\" class=\"headerlink\" title=\"2、懒汉式单例模式\"></a>2、懒汉式单例模式</h3><p>要用对象时，才开始创建创建对象。<br>1、实现步骤：<br>（1）将类的构造器私有；<br>（2）定义一个静态变量；<br>（3）定义一个静态方法，判断类变量是否为null，如果为null，则new一个对象，并返回。  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">B</span> &#123;</span><br><span class=\"line\">\t<span class=\"comment\">//（1）将类的构造器私有</span></span><br><span class=\"line\">\t<span class=\"keyword\">private</span> <span class=\"title function_\">B</span><span class=\"params\">()</span> &#123;&#125;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"comment\">//（2）定义一个静态变量</span></span><br><span class=\"line\">\t<span class=\"keyword\">private</span> <span class=\"keyword\">static</span> B b;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"comment\">//（3）定义一个静态方法，判断类变量是否为null，如果为null，则new一个对象，并返回</span></span><br><span class=\"line\">\t<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> B <span class=\"title function_\">getB</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(b == <span class=\"literal\">null</span>) &#123;</span><br><span class=\"line\">\t\t\tb = <span class=\"keyword\">new</span> <span class=\"title class_\">B</span>();</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> b;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<br/>\n\n\n\n<hr>\n<br/>\n\n\n\n<h1 id=\"五、模板方法设计模式\"><a href=\"#五、模板方法设计模式\" class=\"headerlink\" title=\"五、模板方法设计模式\"></a>五、模板方法设计模式</h1><p>作用：提供一个方法作为完成某类功能的模板，具体实现让子类去实现。  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Demo</span> &#123;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"comment\">// 具体方法</span></span><br><span class=\"line\">\t<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">method</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"comment\">// 具体的业务处理</span></span><br><span class=\"line\">\t\tSystem.out.println(<span class=\"string\">&quot;相同的业务处理....&quot;</span>);</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\t<span class=\"comment\">// 这里的处理根据子类不同而不同，调用模板方法</span></span><br><span class=\"line\">\t\ttemplateMethod();</span><br><span class=\"line\">\t\tSystem.out.println(<span class=\"string\">&quot;相同的业务处理....&quot;</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"comment\">// 模板方法，具体实现交给子类</span></span><br><span class=\"line\">\t<span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"keyword\">void</span> <span class=\"title function_\">templateMethod</span><span class=\"params\">()</span>;</span><br><span class=\"line\">\t</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">SonOne</span> <span class=\"keyword\">extends</span> <span class=\"title class_\">Demo</span> &#123;</span><br><span class=\"line\">\t<span class=\"meta\">@Override</span></span><br><span class=\"line\">\t<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">templateMethod</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">\t\tSystem.out.println(<span class=\"string\">&quot;子类一的业务处理....&quot;</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">SonTwo</span> <span class=\"keyword\">extends</span> <span class=\"title class_\">Demo</span> &#123;</span><br><span class=\"line\">\t<span class=\"meta\">@Override</span></span><br><span class=\"line\">\t<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">templateMethod</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">\t\tSystem.out.println(<span class=\"string\">&quot;子类二的业务处理....&quot;</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 测试</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Test</span> &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"type\">Demo</span> <span class=\"variable\">sonOne</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">SonOne</span>();</span><br><span class=\"line\">\t\tsonOne.method();</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\t<span class=\"type\">Demo</span> <span class=\"variable\">sonTwo</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">SonTwo</span>();</span><br><span class=\"line\">\t\tsonTwo.method();</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<br/>\n\n\n\n<hr>\n<br/>\n\n\n\n\n","more":"<br/>\n\n<hr>\n<h1 id=\"一、策略模式\"><a href=\"#一、策略模式\" class=\"headerlink\" title=\"一、策略模式\"></a>一、策略模式</h1><h3 id=\"1、后端\"><a href=\"#1、后端\" class=\"headerlink\" title=\"1、后端\"></a>1、后端</h3><p>1、说明：<br>定义一组算法，将每个算法都封装起来，并且使它们之间可以根据需求互换使用。<br>2、场景一：<br>（1）有一个系统，一开始只支持Mysql；</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * @创建人 zjy</span></span><br><span class=\"line\"><span class=\"comment\"> * @文件名 MysqlDemo</span></span><br><span class=\"line\"><span class=\"comment\"> * @创建时间 2023/11/24</span></span><br><span class=\"line\"><span class=\"comment\"> * @描述 数据库实体</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">MysqlDemo</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> String username;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> String password;</span><br><span class=\"line\"></span><br><span class=\"line\">    MysqlDemo(String username,String password) &#123;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.username = username;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.password = password;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> String <span class=\"title function_\">getUsername</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> username;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> String <span class=\"title function_\">getPassword</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> password;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * @创建人 zjy</span></span><br><span class=\"line\"><span class=\"comment\"> * @文件名 ServiceDemo</span></span><br><span class=\"line\"><span class=\"comment\"> * @创建时间 2023/11/24</span></span><br><span class=\"line\"><span class=\"comment\"> * @描述 业务处理</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">ServiceDemo</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">doServiceDemo</span> <span class=\"params\">(MysqlDemo mysqlDemo)</span> &#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;使用的数据库：&quot;</span> + mysqlDemo.getClass().getSimpleName());</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;使用的数据库用户名：&quot;</span> + mysqlDemo.getUsername());</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;使用的数据库密码：&quot;</span> + mysqlDemo.getPassword());</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * @创建人 zjy</span></span><br><span class=\"line\"><span class=\"comment\"> * @文件名 Test</span></span><br><span class=\"line\"><span class=\"comment\"> * @创建时间 2023/11/24</span></span><br><span class=\"line\"><span class=\"comment\"> * @描述 test</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Test</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        <span class=\"type\">MysqlDemo</span> <span class=\"variable\">mysqlDemo</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">MysqlDemo</span>(<span class=\"string\">&quot;Mysql&quot;</span>, <span class=\"string\">&quot;Mysql&quot;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">new</span> <span class=\"title class_\">ServiceDemo</span>().doServiceDemo(mysqlDemo);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">输出：</span><br><span class=\"line\">使用的数据库：MysqlDemo</span><br><span class=\"line\">使用的数据库用户名：Mysql</span><br><span class=\"line\">使用的数据库密码：Mysql</span><br></pre></td></tr></table></figure>\n<p>（2）因为系统升级，开始支持SqlService、Oracle、Postgresql，修改代码：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * @创建人 zjy</span></span><br><span class=\"line\"><span class=\"comment\"> * @文件名 DataBasesDemo</span></span><br><span class=\"line\"><span class=\"comment\"> * @创建时间 2023/11/24</span></span><br><span class=\"line\"><span class=\"comment\"> * @描述 数据库实体</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">DataBasesDemo</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> String username;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> String password;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> Integer type;</span><br><span class=\"line\"></span><br><span class=\"line\">    DataBasesDemo(String username,String password,Integer type) &#123;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.username = username;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.password = password;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.type = type;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> String <span class=\"title function_\">getUsername</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> username;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> String <span class=\"title function_\">getPassword</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> password;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> Integer <span class=\"title function_\">getType</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> type;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * @创建人 zjy</span></span><br><span class=\"line\"><span class=\"comment\"> * @文件名 DataBasesType</span></span><br><span class=\"line\"><span class=\"comment\"> * @创建时间 2023/11/24</span></span><br><span class=\"line\"><span class=\"comment\"> * @描述 数据库类型 0:Mysql 1:SqlService 2:Oracle 3:Postgresql</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">enum</span> <span class=\"title class_\">DataBasesType</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    Msql(<span class=\"number\">0</span>),</span><br><span class=\"line\">    SqlService(<span class=\"number\">1</span>),</span><br><span class=\"line\">    Oracle(<span class=\"number\">2</span>),</span><br><span class=\"line\">    Postgresql(<span class=\"number\">3</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> Integer code;</span><br><span class=\"line\"></span><br><span class=\"line\">    DataBasesType(Integer code) &#123;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.code = code;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> Integer <span class=\"title function_\">getCode</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> code;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * @创建人 zjy</span></span><br><span class=\"line\"><span class=\"comment\"> * @文件名 ServiceDemo</span></span><br><span class=\"line\"><span class=\"comment\"> * @创建时间 2023/11/24</span></span><br><span class=\"line\"><span class=\"comment\"> * @描述 业务处理</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">ServiceDemo</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">doServiceDemo</span> <span class=\"params\">(DataBasesDemo dataBasesDemo)</span> &#123;</span><br><span class=\"line\">        <span class=\"comment\">// 0:Mysql 1:SqlService 2:Oracle 3:Postgresql</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (Objects.equals(DataBasesType.Msql.getCode(), dataBasesDemo.getType())) &#123;</span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;使用的数据库：&quot;</span> + DataBasesType.Msql);</span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;使用的数据库用户名：&quot;</span> + dataBasesDemo.getUsername());</span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;使用的数据库密码：&quot;</span> + dataBasesDemo.getPassword());</span><br><span class=\"line\">        &#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (Objects.equals(DataBasesType.SqlService.getCode(), dataBasesDemo.getType())) &#123;</span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;使用的数据库：&quot;</span> + DataBasesType.SqlService);</span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;使用的数据库用户名：&quot;</span> + dataBasesDemo.getUsername());</span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;使用的数据库密码：&quot;</span> + dataBasesDemo.getPassword());</span><br><span class=\"line\">        &#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (Objects.equals(DataBasesType.Oracle, dataBasesDemo.getType())) &#123;</span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;使用的数据库：&quot;</span> + DataBasesType.Oracle);</span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;使用的数据库用户名：&quot;</span> + dataBasesDemo.getUsername());</span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;使用的数据库密码：&quot;</span> + dataBasesDemo.getPassword());</span><br><span class=\"line\">        &#125;<span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;使用的数据库：&quot;</span> + DataBasesType.Postgresql);</span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;使用的数据库用户名：&quot;</span> + dataBasesDemo.getUsername());</span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;使用的数据库密码：&quot;</span> + dataBasesDemo.getPassword());</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * @创建人 zjy</span></span><br><span class=\"line\"><span class=\"comment\"> * @文件名 Test</span></span><br><span class=\"line\"><span class=\"comment\"> * @创建时间 2023/11/24</span></span><br><span class=\"line\"><span class=\"comment\"> * @描述 test</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Test</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        <span class=\"type\">DataBasesDemo</span> <span class=\"variable\">mySqlDemo</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">DataBasesDemo</span>(<span class=\"string\">&quot;Mysql&quot;</span>, <span class=\"string\">&quot;Mysql&quot;</span>,<span class=\"number\">0</span>);</span><br><span class=\"line\">        <span class=\"type\">DataBasesDemo</span> <span class=\"variable\">sqlServiceDemo</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">DataBasesDemo</span>(<span class=\"string\">&quot;SqlService&quot;</span>, <span class=\"string\">&quot;SqlService&quot;</span>,<span class=\"number\">1</span>);</span><br><span class=\"line\">        <span class=\"type\">DataBasesDemo</span> <span class=\"variable\">oracleDemo</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">DataBasesDemo</span>(<span class=\"string\">&quot;Oracle&quot;</span>, <span class=\"string\">&quot;Oracle&quot;</span>,<span class=\"number\">2</span>);</span><br><span class=\"line\">        <span class=\"type\">DataBasesDemo</span> <span class=\"variable\">postgresqlDemo</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">DataBasesDemo</span>(<span class=\"string\">&quot;Postgresql&quot;</span>, <span class=\"string\">&quot;Postgresql&quot;</span>,<span class=\"number\">3</span>);</span><br><span class=\"line\">        <span class=\"keyword\">new</span> <span class=\"title class_\">ServiceDemo</span>().doServiceDemo(sqlServiceDemo);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">输出：</span><br><span class=\"line\">使用的数据库：SqlService</span><br><span class=\"line\">使用的数据库用户名：SqlService</span><br><span class=\"line\">使用的数据库密码：SqlService</span><br></pre></td></tr></table></figure>\n<p>查看<code>ServiceDemo</code>业务处理，有多个<code>if...else if...if</code>，这样如果以后再新增一个数据库，还要去修改<code>if...else</code>，代码看着很臃肿，不利于维护，有可能还要修改旧的代码，不可取的。依据面向对象设计原则中<code>开放封闭原则</code>（对扩展开放，对修改封闭），使用<code>策略模式</code>。<br>（3）使用策略模式（实体类和枚举不变，只修改业务）</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * @创建人 zjy</span></span><br><span class=\"line\"><span class=\"comment\"> * @文件名 ServiceDemo</span></span><br><span class=\"line\"><span class=\"comment\"> * @创建时间 2023/11/24</span></span><br><span class=\"line\"><span class=\"comment\"> * @描述 用来扩展，每个数据库都会实现这个接口</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">interface</span> <span class=\"title class_\">ServiceDemo</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">doService</span><span class=\"params\">(DataBasesDemo dataBasesDemo)</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * @创建人 zjy</span></span><br><span class=\"line\"><span class=\"comment\"> * @文件名 MysqlServiceDemoImpl</span></span><br><span class=\"line\"><span class=\"comment\"> * @创建时间 2023/11/24</span></span><br><span class=\"line\"><span class=\"comment\"> * @描述 Mysql业务处理</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">MysqlServiceDemoImpl</span> <span class=\"keyword\">implements</span> <span class=\"title class_\">ServiceDemo</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">doService</span> <span class=\"params\">(DataBasesDemo dataBasesDemo)</span> &#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;使用的数据库：&quot;</span> + DataBasesType.Msql);</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;使用的数据库用户名：&quot;</span> + dataBasesDemo.getUsername());</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;使用的数据库密码：&quot;</span> + dataBasesDemo.getPassword());</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * @创建人 zjy</span></span><br><span class=\"line\"><span class=\"comment\"> * @文件名 MysqlServiceDemoImpl</span></span><br><span class=\"line\"><span class=\"comment\"> * @创建时间 2023/11/24</span></span><br><span class=\"line\"><span class=\"comment\"> * @描述 Oracle业务处理</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">OracleServiceDemoImpl</span> <span class=\"keyword\">implements</span> <span class=\"title class_\">ServiceDemo</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">doService</span> <span class=\"params\">(DataBasesDemo dataBasesDemo)</span> &#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;使用的数据库：&quot;</span> + DataBasesType.Oracle);</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;使用的数据库用户名：&quot;</span> + dataBasesDemo.getUsername());</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;使用的数据库密码：&quot;</span> + dataBasesDemo.getPassword());</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * @创建人 zjy</span></span><br><span class=\"line\"><span class=\"comment\"> * @文件名 Test</span></span><br><span class=\"line\"><span class=\"comment\"> * @创建时间 2023/11/24</span></span><br><span class=\"line\"><span class=\"comment\"> * @描述 test</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Test</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        <span class=\"comment\">// 使用Mysql</span></span><br><span class=\"line\">        <span class=\"keyword\">new</span> <span class=\"title class_\">MysqlServiceDemoImpl</span>().doService(<span class=\"keyword\">new</span> <span class=\"title class_\">DataBasesDemo</span>(<span class=\"string\">&quot;Mysql&quot;</span>,<span class=\"string\">&quot;Mysql&quot;</span>,<span class=\"number\">0</span>));</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">输出：</span><br><span class=\"line\">使用的数据库：Msql</span><br><span class=\"line\">使用的数据库用户名：Mysql</span><br><span class=\"line\">使用的数据库密码：Mysql</span><br></pre></td></tr></table></figure>\n<p>说明：这样不用在业务里再写<code>if...else...</code>了，如果新增了一个数据库，直接实现<code>ServiceDemo</code>接口就行了，对修改关闭，对扩展开放。（还可以使用<code>Lambda</code>表达式来进行简化，不需要上面的实现类）<br>（4）使用Lambda简化（实体类、枚举类和ServiceDemo接口不变，删除<code>MysqlServiceDemoImpl</code>和<code>OracleServiceDemoImpl</code>类）</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * @创建人 zjy</span></span><br><span class=\"line\"><span class=\"comment\"> * @文件名 Test</span></span><br><span class=\"line\"><span class=\"comment\"> * @创建时间 2023/11/24</span></span><br><span class=\"line\"><span class=\"comment\"> * @描述 test</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Test</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        <span class=\"comment\">// 使用Mysql</span></span><br><span class=\"line\">        doService(<span class=\"keyword\">new</span> <span class=\"title class_\">DataBasesDemo</span>(<span class=\"string\">&quot;Mysql&quot;</span>, <span class=\"string\">&quot;Mysql&quot;</span>, <span class=\"number\">0</span>), dataBasesDemo -&gt; &#123;</span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;使用的数据库：&quot;</span> + DataBasesType.Msql);</span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;使用的数据库用户名：&quot;</span> + dataBasesDemo.getUsername());</span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;使用的数据库密码：&quot;</span> + dataBasesDemo.getPassword());</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">doService</span><span class=\"params\">(DataBasesDemo dataBasesDemo, ServiceDemo serviceDemo)</span> &#123;</span><br><span class=\"line\">        serviceDemo.doService(dataBasesDemo);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">输出：</span><br><span class=\"line\">使用的数据库：Msql</span><br><span class=\"line\">使用的数据库用户名：Mysql</span><br><span class=\"line\">使用的数据库密码：Mysql</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"2、前端\"><a href=\"#2、前端\" class=\"headerlink\" title=\"2、前端\"></a>2、前端</h3><p>1、使用<code>if...else...</code>的代码：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">test</span>(<span class=\"params\">tag, num1, num2</span>) &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(tag == <span class=\"string\">&#x27;add&#x27;</span>) &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> num1 + num2;</span><br><span class=\"line\">\t&#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (tag == <span class=\"string\">&#x27;sub&#x27;</span>) &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> num1 - num2;</span><br><span class=\"line\">\t&#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (tag == <span class=\"string\">&#x27;mul&#x27;</span>) &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> num1 * num2;</span><br><span class=\"line\">\t&#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(tag == <span class=\"string\">&#x27;div&#x27;</span>) &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> num1 / num2;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>2、改进：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> data = &#123;</span><br><span class=\"line\">\t<span class=\"string\">&#x27;add&#x27;</span>: <span class=\"keyword\">function</span> (<span class=\"params\">num1, num2</span>) &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> num1 + num2;</span><br><span class=\"line\">\t&#125;,</span><br><span class=\"line\">\t<span class=\"string\">&#x27;sub&#x27;</span>: <span class=\"keyword\">function</span> (<span class=\"params\">num1, num2</span>) &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> num1 - num2;</span><br><span class=\"line\">\t&#125;,</span><br><span class=\"line\">\t<span class=\"string\">&#x27;mul&#x27;</span>: <span class=\"keyword\">function</span> (<span class=\"params\">num1, num2</span>) &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> num1 * num2;</span><br><span class=\"line\">\t&#125;,</span><br><span class=\"line\">\t<span class=\"string\">&#x27;div&#x27;</span>: <span class=\"keyword\">function</span> (<span class=\"params\">num1, num2</span>) &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> num1 / num2;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">test</span> (tag, num1, num2) &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> data[tag](num1, num2);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>3、使用策略模式：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">StrategyDemo</span> &#123;</span><br><span class=\"line\">\t<span class=\"title function_\">constructor</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">\t\t<span class=\"variable language_\">this</span>.<span class=\"property\">strategy</span> = <span class=\"literal\">null</span>; <span class=\"comment\">// strategy指代下面的Add、Sub、Mul、Div类</span></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"title function_\">setStrategy</span>(<span class=\"params\">strategy</span>) &#123;</span><br><span class=\"line\">\t\t<span class=\"variable language_\">this</span>.<span class=\"property\">strategy</span> = strategy;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"title function_\">result</span>(<span class=\"params\">num1, num2</span>) &#123;</span><br><span class=\"line\">\t\t<span class=\"variable language_\">this</span>.<span class=\"property\">strategy</span>.<span class=\"title function_\">do</span>(num1, num2);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Add</span> &#123;</span><br><span class=\"line\">\t<span class=\"title function_\">do</span>(<span class=\"params\">num1, num2</span>) &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> num1 + num2;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Sub</span> &#123;</span><br><span class=\"line\">\t<span class=\"title function_\">do</span>(<span class=\"params\">num1, num2</span>) &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> num1 - num2;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Mul</span> &#123;</span><br><span class=\"line\">\t<span class=\"title function_\">do</span>(<span class=\"params\">num1, num2</span>) &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> num1 * num2;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Div</span> &#123;</span><br><span class=\"line\">\t<span class=\"title function_\">do</span>(<span class=\"params\">num1, num2</span>) &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> num1 / num2;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">test</span>:</span><br><span class=\"line\"><span class=\"keyword\">let</span> strategyDemo = <span class=\"keyword\">new</span> <span class=\"title class_\">StrategyDemo</span>();</span><br><span class=\"line\">strategyDemo.<span class=\"title function_\">setStrategy</span>(<span class=\"keyword\">new</span> <span class=\"title class_\">Add</span>());</span><br><span class=\"line\">strategyDemo.<span class=\"title function_\">result</span>(<span class=\"number\">3</span>, <span class=\"number\">2</span>);</span><br></pre></td></tr></table></figure>\n\n\n\n<br/>\n\n\n<hr>\n<br/>\n\n\n\n<h1 id=\"二、代理模式\"><a href=\"#二、代理模式\" class=\"headerlink\" title=\"二、代理模式\"></a>二、代理模式</h1><p>什么是静态代理和动态代理？<br>比如有一个中介公司，中介公司里面有3个中介，分别是小红、小明、小江，然后有一个房东，有很多套房子，想要将房子租出去，房东将第一套房子交给中介小红帮他出租，结果小红能力很强，房东以后就将自己所有房子都交给小红，固定不变，这就是静态代理；<br>房东将房子交给中介公司，我不管谁能力强，我只需要将房子租出去，由公司动态将房子随机分配给小红、小明、小江三人，这就是动态代理。  </p>\n<h3 id=\"1、静态代理模式\"><a href=\"#1、静态代理模式\" class=\"headerlink\" title=\"1、静态代理模式\"></a>1、静态代理模式</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 创建一个接口</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">interface</span> <span class=\"title class_\">Rent</span> &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">void</span> <span class=\"title function_\">rent</span><span class=\"params\">()</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 创建一个房东类</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Landlord</span> <span class=\"keyword\">implements</span> <span class=\"title class_\">Rent</span> &#123;</span><br><span class=\"line\">\t<span class=\"meta\">@Override</span></span><br><span class=\"line\">\t<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">rent</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">\t\tSystem.out.println(<span class=\"string\">&quot;我是房东，我要出租房子&quot;</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 创建一个代理类</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Proxy</span> <span class=\"keyword\">implements</span> <span class=\"title class_\">Rent</span> &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">private</span> Landlord landlord;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">public</span> <span class=\"title function_\">Proxy</span><span class=\"params\">(Landlord landlord)</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">this</span>.landlord = landlord;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"meta\">@Override</span></span><br><span class=\"line\">\t<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">rent</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"comment\">// 可以写新的业务逻辑</span></span><br><span class=\"line\">\t\tSystem.out.println(<span class=\"string\">&quot;我是代理，我要出租房子&quot;</span>);</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\t<span class=\"comment\">// 原本的业务逻辑</span></span><br><span class=\"line\">\t\tlandlord.rent();</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 测试</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Test</span> &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"type\">Landlord</span> <span class=\"variable\">landlord</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Landlord</span>();</span><br><span class=\"line\">\t\t<span class=\"type\">Proxy</span> <span class=\"variable\">proxy</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Proxy</span>(landlord);</span><br><span class=\"line\">\t\tproxy.rent();</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"2、动态代理模式\"><a href=\"#2、动态代理模式\" class=\"headerlink\" title=\"2、动态代理模式\"></a>2、动态代理模式</h3><p>说明：由上面的例子可以得知，是由公司动态分配，而这个公司，在java这里只有两家，分别是<code>JDK动态代理</code>和<code>cglib</code>。<br><code>JDK动态代理</code>：（java原生自带的）JDK原生的实现方式，需要被代理的目标类必须有接口（也就是目标类必须有实现的接口，如果只有一个没有实现接口的普通类是不行的）！他会根据目标类的接口动态生成一个代理对象！代理对象和目标对象有相同的接口！（<strong>如果有接口就用</strong>）<br><code>cglib</code>：（第三方的，导入spring包就有）通过继承被代理的目标类实现代理，所以不需要目标类实现接口！（<strong>如果没有接口就用</strong>）<br>1、<code>JDK动态代理</code><br>JDK动态代理使用<code>java.lang.reflect.Proxy</code>这个类来进行实现的（JDK动态代理只能对接口中的方法进行增强）。  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 这个jdk动态代理工厂类</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">ProxyFactory</span> &#123;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"keyword\">private</span> Object target;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"keyword\">public</span> <span class=\"title function_\">ProxyFactory</span><span class=\"params\">(Object target)</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">this</span>.target = target;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"keyword\">public</span> Object <span class=\"title function_\">getProxy</span><span class=\"params\">()</span>&#123;</span><br><span class=\"line\">\t\t<span class=\"type\">ClassLoader</span> <span class=\"variable\">classLoader</span> <span class=\"operator\">=</span> target.getClass().getClassLoader();</span><br><span class=\"line\">\t\tClass&lt;?&gt;[] interfaces = target.getClass().getInterfaces();</span><br><span class=\"line\">\t\t<span class=\"type\">InvocationHandler</span> <span class=\"variable\">handler</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">InvocationHandler</span>() &#123;</span><br><span class=\"line\">\t\t\t<span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">\t\t\t * invoke方法：就是代理对象执行的代理方法</span></span><br><span class=\"line\"><span class=\"comment\">\t\t\t * proxy：代理对象</span></span><br><span class=\"line\"><span class=\"comment\">\t\t\t * method：代理对象需要实现的方法</span></span><br><span class=\"line\"><span class=\"comment\">\t\t\t * args：method所对应的方法参数</span></span><br><span class=\"line\"><span class=\"comment\">\t\t\t */</span></span><br><span class=\"line\">\t\t\t<span class=\"meta\">@Override</span></span><br><span class=\"line\">\t\t\t<span class=\"keyword\">public</span> Object <span class=\"title function_\">invoke</span><span class=\"params\">(Object proxy, Method method, Object[] args)</span> <span class=\"keyword\">throws</span> Throwable &#123;</span><br><span class=\"line\">\t\t\t\tSystem.out.println(<span class=\"string\">&quot;我是代理，我要出租房子&quot;</span>);</span><br><span class=\"line\">\t\t\t\t<span class=\"comment\">// 调用目标方法，执行原来目标方法的业务逻辑</span></span><br><span class=\"line\">\t\t\t\t<span class=\"type\">Object</span> <span class=\"variable\">result</span> <span class=\"operator\">=</span> method.invoke(target, args);</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">return</span> result;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;;</span><br><span class=\"line\">\t\t<span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">\t\t * newProxyInstance()：创建一个代理实例</span></span><br><span class=\"line\"><span class=\"comment\">\t\t * 其中有三个参数：</span></span><br><span class=\"line\"><span class=\"comment\">\t\t * 1、classLoader：加载动态生成的代理类的类加载器</span></span><br><span class=\"line\"><span class=\"comment\">\t\t * 2、interfaces：目标对象实现的所有接口的class对象所组成的数组</span></span><br><span class=\"line\"><span class=\"comment\">\t\t * 3、handler：设置代理对象实现目标对象方法的过程，也就是代理类所要执行的业务逻辑</span></span><br><span class=\"line\"><span class=\"comment\">\t\t */</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> Proxy.newProxyInstance(classLoader, interfaces, handler);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 测试</span></span><br><span class=\"line\"><span class=\"comment\">// 目标方法要实现的接口</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">interface</span> <span class=\"title class_\">Rent</span> &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">void</span> <span class=\"title function_\">rent</span><span class=\"params\">()</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 目标方法</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Landlord</span> <span class=\"keyword\">implements</span> <span class=\"title class_\">Rent</span> &#123;</span><br><span class=\"line\">\t<span class=\"meta\">@Override</span></span><br><span class=\"line\">\t<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">rent</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">\t\tSystem.out.println(<span class=\"string\">&quot;我是房东，我要出租房子&quot;</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 测试类</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Test</span> &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"comment\">// 创建目标类</span></span><br><span class=\"line\">\t\t<span class=\"type\">Landlord</span> <span class=\"variable\">landlord</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Landlord</span>();</span><br><span class=\"line\">\t\t<span class=\"comment\">// 创建代理工厂</span></span><br><span class=\"line\">\t\t<span class=\"type\">ProxyFactory</span> <span class=\"variable\">proxyFactory</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">ProxyFactory</span>(landlord);</span><br><span class=\"line\">\t\t<span class=\"comment\">// 创建代理对象，这里注意：必须转成接口类型，因为JDK动态代理是基于接口的！</span></span><br><span class=\"line\">\t\t<span class=\"type\">Rent</span> <span class=\"variable\">proxy</span> <span class=\"operator\">=</span> (Rent) proxyFactory.getProxy();</span><br><span class=\"line\">\t\t<span class=\"comment\">// 代理对象只要执行接口中的方法，就会执行invoke方法</span></span><br><span class=\"line\">\t\tproxy.rent();</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>上面也可以使用万能动态代理工具类来实现：  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 动态代理有两个类Proxy和InvocationHandler</span></span><br><span class=\"line\"><span class=\"comment\"> * Proxy类是 生成得到代理类</span></span><br><span class=\"line\"><span class=\"comment\"> * InvocationHandler类是 处理代理实例</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">ProxyInvocationHandler</span> <span class=\"keyword\">implements</span> <span class=\"title class_\">InvocationHandler</span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">//被代理的接口</span></span><br><span class=\"line\">  <span class=\"keyword\">private</span> Object target;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">setTarget</span><span class=\"params\">(Object target)</span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.target = target;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">//生成得到代理类</span></span><br><span class=\"line\">  <span class=\"keyword\">public</span> Object <span class=\"title function_\">getProxy</span><span class=\"params\">()</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> Proxy.newProxyInstance(<span class=\"built_in\">this</span>.getClass().getClassLoader(),</span><br><span class=\"line\">                target.getClass().getInterfaces(),</span><br><span class=\"line\">                <span class=\"built_in\">this</span></span><br><span class=\"line\">        );</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//处理代理实例</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> Object <span class=\"title function_\">invoke</span><span class=\"params\">(Object proxy, Method method, Object[] args)</span> <span class=\"keyword\">throws</span> Throwable &#123;</span><br><span class=\"line\">        log(method.getName());</span><br><span class=\"line\">        <span class=\"type\">Object</span> <span class=\"variable\">result</span> <span class=\"operator\">=</span> method.invoke(target,args);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> result;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//增加一个日志功能</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">log</span><span class=\"params\">(String log)</span>&#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;现在执行的操作是：&quot;</span> + log);</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;现在时间是：&quot;</span> + <span class=\"keyword\">new</span> <span class=\"title class_\">SimpleDateFormat</span>(<span class=\"string\">&quot;yyyy-MM-dd HH:mm:ss&quot;</span>).format(<span class=\"keyword\">new</span> <span class=\"title class_\">Date</span>()));</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>直接使用JDK动态代理：  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 目标方法要实现的接口</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">interface</span> <span class=\"title class_\">Rent</span> &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">void</span> <span class=\"title function_\">rent</span><span class=\"params\">()</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 目标方法</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Landlord</span> <span class=\"keyword\">implements</span> <span class=\"title class_\">Rent</span> &#123;</span><br><span class=\"line\">\t<span class=\"meta\">@Override</span></span><br><span class=\"line\">\t<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">rent</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">\t\tSystem.out.println(<span class=\"string\">&quot;我是房东，我要出租房子&quot;</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Test</span> &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"type\">Rent</span> <span class=\"variable\">proxy</span> <span class=\"operator\">=</span> (Rent)Proxy.newProxyInstance(Test.class.getClassLoader(), Landlord.class.getInterfaces(), <span class=\"keyword\">new</span> <span class=\"title class_\">InvocationHandler</span>() &#123;</span><br><span class=\"line\">            </span><br><span class=\"line\">\t\t\t<span class=\"meta\">@Override</span></span><br><span class=\"line\">            <span class=\"keyword\">public</span> Object <span class=\"title function_\">invoke</span><span class=\"params\">(Object proxy, Method method, Object[] args)</span> <span class=\"keyword\">throws</span> Throwable &#123;</span><br><span class=\"line\">                System.out.println(<span class=\"string\">&quot;我是代理，我要出租房子&quot;</span>);</span><br><span class=\"line\">                <span class=\"comment\">// 调用目标方法，执行原来目标方法的业务逻辑</span></span><br><span class=\"line\">                <span class=\"type\">Object</span> <span class=\"variable\">result</span> <span class=\"operator\">=</span> method.invoke(target, args);</span><br><span class=\"line\">                <span class=\"keyword\">return</span> result;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;);</span><br><span class=\"line\">\t\t<span class=\"comment\">// 代理对象只要执行接口中的方法，就会执行invoke方法</span></span><br><span class=\"line\">\t\tproxy.rent();</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>2、<code>Cglib</code>动态代理<br>使用<code>org.springframework.cglib.proxy.Enhancer</code>类进行实现的。<br>前提条件：必须引入<code>spring-context</code>依赖。  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 目标方法</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Landlord</span> &#123;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">rent</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">\t\tSystem.out.println(<span class=\"string\">&quot;我是房东，我要出租房子&quot;</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Test</span> &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"type\">Enhancer</span> <span class=\"variable\">enhancer</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Enhancer</span>();</span><br><span class=\"line\">\t\t<span class=\"comment\">// 将要代理的目标对象设置给代理对象</span></span><br><span class=\"line\">\t\tenhancer.setSuperclass(Landlord.class);</span><br><span class=\"line\">\t\t<span class=\"comment\">// 设置回调函数，MethodInterceptor是回调类的实现类</span></span><br><span class=\"line\">\t\tenhancer.setCallback(<span class=\"keyword\">new</span> <span class=\"title class_\">MethodInterceptor</span>() &#123;</span><br><span class=\"line\">\t\t\t<span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">\t\t\t * obj：代理对象</span></span><br><span class=\"line\"><span class=\"comment\">\t\t\t * method：目标方法</span></span><br><span class=\"line\"><span class=\"comment\">\t\t\t * args：目标方法的参数</span></span><br><span class=\"line\"><span class=\"comment\">\t\t\t * proxy：目标方法的代理对象</span></span><br><span class=\"line\"><span class=\"comment\">\t\t\t */</span></span><br><span class=\"line\">\t\t\t<span class=\"meta\">@Override</span></span><br><span class=\"line\">\t\t\t<span class=\"keyword\">public</span> Object <span class=\"title function_\">intercept</span><span class=\"params\">(Object obj, Method method, Object[] args, MethodProxy proxy)</span> <span class=\"keyword\">throws</span> Throwable &#123;</span><br><span class=\"line\">\t\t\t\tSystem.out.println(<span class=\"string\">&quot;我是代理，我要出租房子&quot;</span>);</span><br><span class=\"line\">\t\t\t\t<span class=\"comment\">// 调用目标方法，执行原来目标方法的业务逻辑</span></span><br><span class=\"line\">\t\t\t\t<span class=\"type\">Object</span> <span class=\"variable\">result</span> <span class=\"operator\">=</span> proxy.invokeSuper(obj, args);</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">return</span> result;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;);</span><br><span class=\"line\">\t\t<span class=\"type\">Landlord</span> <span class=\"variable\">proxy</span> <span class=\"operator\">=</span> (Landlord) enhancer.create();</span><br><span class=\"line\">\t\tproxy.rent();</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<br/>\n\n\n\n<hr>\n<br/>\n\n\n\n<h1 id=\"三、工厂模式\"><a href=\"#三、工厂模式\" class=\"headerlink\" title=\"三、工厂模式\"></a>三、工厂模式</h1><p>工厂模式分为：简单工厂模式、工厂方法模式、抽象工厂模式。</p>\n<h3 id=\"1、简单工厂模式\"><a href=\"#1、简单工厂模式\" class=\"headerlink\" title=\"1、简单工厂模式\"></a>1、简单工厂模式</h3><p>简单工厂模式：定义一个工厂类，根据传入的参数不同返回不同的实例，被创建的实例通常都具有共同的父类。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// Car接口</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">interface</span> <span class=\"title class_\">Car</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">print</span><span class=\"params\">()</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// Benz类</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Benz</span> <span class=\"keyword\">implements</span> <span class=\"title class_\">Car</span> &#123;</span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">print</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;Benz&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// BMW类</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">BMW</span> <span class=\"keyword\">implements</span> <span class=\"title class_\">Car</span> &#123;</span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">print</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;BMW&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 工厂类</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">CarFactory</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> Car <span class=\"title function_\">createCar</span><span class=\"params\">(String type)</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"string\">&quot;Benz&quot;</span>.equals(type)) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Benz</span>();</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (<span class=\"string\">&quot;BMW&quot;</span>.equals(type)) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"title class_\">BMW</span>();</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">null</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>上面工厂类中，如果需要增加一个<code>Audi</code>类，那么就需要修改工厂类中的代码，违反了开闭原则。<br>我们可以在工厂中使用反射来创建对象：  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 工厂类二</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">CarFactory</span> &#123;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> Car <span class=\"title function_\">createCar</span><span class=\"params\">(Class&lt;? extends Car&gt; carClass)</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> carClass.getDeclaredConstructor().newInstance();</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"title class_\">RuntimeException</span>(e);</span><br><span class=\"line\">        &#125; </span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>或者使用<code>工厂方法模式</code>（是简单工厂模式的升级版），将工厂类中方法抽象出来，让子类实现工厂方法，返回不同实例。  </p>\n<h3 id=\"2、工厂方法模式\"><a href=\"#2、工厂方法模式\" class=\"headerlink\" title=\"2、工厂方法模式\"></a>2、工厂方法模式</h3><p>（1）将原来的工厂类抽象，定义一个工厂接口，让要创建的实体类的工厂类去实现这个接口。  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 工厂接口</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">interface</span> <span class=\"title class_\">CarFactory</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> Car <span class=\"title function_\">createCar</span><span class=\"params\">()</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// Benz工厂类</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">BenzFactory</span> <span class=\"keyword\">implements</span> <span class=\"title class_\">CarFactory</span> &#123;</span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> Car <span class=\"title function_\">createCar</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">\t\tSystem.out.println(<span class=\"string\">&quot;这是Benz（奔驰汽车）工厂，只创建Benz（奔驰）&quot;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Benz</span>();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// BMW工厂类</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">BMWFactory</span> <span class=\"keyword\">implements</span> <span class=\"title class_\">CarFactory</span> &#123;</span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> Car <span class=\"title function_\">createCar</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">\t\tSystem.out.println(<span class=\"string\">&quot;这是BMW（宝马汽车）工厂，只创建BMW（宝马）&quot;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"title class_\">BMW</span>();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>（2）原来的Car接口和实现类不变。  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// Car接口</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">interface</span> <span class=\"title class_\">Car</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">print</span><span class=\"params\">()</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// Benz类</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Benz</span> <span class=\"keyword\">implements</span> <span class=\"title class_\">Car</span> &#123;</span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">print</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;Benz&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// BMW类</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">BMW</span> <span class=\"keyword\">implements</span> <span class=\"title class_\">Car</span> &#123;</span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">print</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;BMW&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 测试</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Test</span> &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"type\">CarFactory</span> <span class=\"variable\">benzFactory</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">BenzFactory</span>();</span><br><span class=\"line\">\t\t<span class=\"type\">Car</span> <span class=\"variable\">benz</span> <span class=\"operator\">=</span> benzFactory.createCar();</span><br><span class=\"line\">\t\tbenz.print();</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\t<span class=\"type\">CarFactory</span> <span class=\"variable\">bmwFactory</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">BMWFactory</span>();</span><br><span class=\"line\">\t\t<span class=\"type\">Car</span> <span class=\"variable\">bmw</span> <span class=\"operator\">=</span> bmwFactory.createCar();</span><br><span class=\"line\">\t\tbmw.print();</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"3、抽象工厂模式\"><a href=\"#3、抽象工厂模式\" class=\"headerlink\" title=\"3、抽象工厂模式\"></a>3、抽象工厂模式</h3><p>抽象工厂模式相当于工厂方法模式的升级版，工厂方法模式中，一个工厂只能生产一种产品，而抽象工厂模式中，一个工厂可以生产多种产品。  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 抽象工厂接口</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">interface</span> <span class=\"title class_\">AbstractFactory</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> Car <span class=\"title function_\">createCar</span><span class=\"params\">()</span>;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> Engine <span class=\"title function_\">createEngine</span><span class=\"params\">()</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 抽象产品接口一</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">interface</span> <span class=\"title class_\">Car</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">print</span><span class=\"params\">()</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 抽象产品接口二</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">interface</span> <span class=\"title class_\">Engine</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">print</span><span class=\"params\">()</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 具体工厂类</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">BenzFactory</span> <span class=\"keyword\">implements</span> <span class=\"title class_\">AbstractFactory</span> &#123;</span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> Car <span class=\"title function_\">createCar</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Benz</span>();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> Engine <span class=\"title function_\">createEngine</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"title class_\">BenzEngine</span>();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 具体工厂类</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">BMWFactory</span> <span class=\"keyword\">implements</span> <span class=\"title class_\">AbstractFactory</span> &#123;</span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> Car <span class=\"title function_\">createCar</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"title class_\">BMW</span>();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> Engine <span class=\"title function_\">createEngine</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"title class_\">BMWEngine</span>();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 具体产品类一</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Benz</span> <span class=\"keyword\">implements</span> <span class=\"title class_\">Car</span> &#123;</span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">print</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;Benz&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 具体产品类二</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">BMW</span> <span class=\"keyword\">implements</span> <span class=\"title class_\">Car</span> &#123;</span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">print</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;BMW&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 具体产品类三</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">BenzEngine</span> <span class=\"keyword\">implements</span> <span class=\"title class_\">Engine</span> &#123;</span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">print</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;BenzEngine&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 具体产品类四</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">BMWEngine</span> <span class=\"keyword\">implements</span> <span class=\"title class_\">Engine</span> &#123;</span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">print</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;BMWEngine&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 测试</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Test</span> &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"type\">AbstractFactory</span> <span class=\"variable\">benzFactory</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">BenzFactory</span>();</span><br><span class=\"line\">\t\t<span class=\"type\">Car</span> <span class=\"variable\">benz</span> <span class=\"operator\">=</span> benzFactory.createCar();</span><br><span class=\"line\">\t\tbenz.print();</span><br><span class=\"line\">\t\t<span class=\"type\">Engine</span> <span class=\"variable\">benzEngine</span> <span class=\"operator\">=</span> benzFactory.createEngine();</span><br><span class=\"line\">\t\tbenzEngine.print();</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\t<span class=\"type\">AbstractFactory</span> <span class=\"variable\">bmwFactory</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">BMWFactory</span>();</span><br><span class=\"line\">\t\t<span class=\"type\">Car</span> <span class=\"variable\">bmw</span> <span class=\"operator\">=</span> bmwFactory.createCar();</span><br><span class=\"line\">\t\tbmw.print();</span><br><span class=\"line\">\t\t<span class=\"type\">Engine</span> <span class=\"variable\">bmwEngine</span> <span class=\"operator\">=</span> bmwFactory.createEngine();</span><br><span class=\"line\">\t\tbmwEngine.print();</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n\n<br/>\n\n\n\n<hr>\n<br/>\n\n\n\n<h1 id=\"四、单例模式\"><a href=\"#四、单例模式\" class=\"headerlink\" title=\"四、单例模式\"></a>四、单例模式</h1><p>作用：确保某个类只能创建一个对象。  </p>\n<h3 id=\"1、饿汉式单例模式\"><a href=\"#1、饿汉式单例模式\" class=\"headerlink\" title=\"1、饿汉式单例模式\"></a>1、饿汉式单例模式</h3><p>获取对象时，对象早就创建好了（很饿）。<br>1、实现步骤：<br>（1）将类的构造器私有；<br>（2）定义一个静态变量，并new一个对象；<br>（3）定义一个静态方法，将上面new的对象返回。  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">A</span> &#123;</span><br><span class=\"line\">\t<span class=\"comment\">//（1）将类的构造器私有</span></span><br><span class=\"line\">\t<span class=\"keyword\">private</span> <span class=\"title function_\">A</span><span class=\"params\">()</span> &#123;&#125;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"comment\">//（2）定义一个静态变量，并new一个对象</span></span><br><span class=\"line\">\t<span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"type\">A</span> <span class=\"variable\">a</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">A</span>();</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"comment\">//（3）定义一个静态方法，将上面new的对象返回</span></span><br><span class=\"line\">\t<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> A <span class=\"title function_\">getA</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> a;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"2、懒汉式单例模式\"><a href=\"#2、懒汉式单例模式\" class=\"headerlink\" title=\"2、懒汉式单例模式\"></a>2、懒汉式单例模式</h3><p>要用对象时，才开始创建创建对象。<br>1、实现步骤：<br>（1）将类的构造器私有；<br>（2）定义一个静态变量；<br>（3）定义一个静态方法，判断类变量是否为null，如果为null，则new一个对象，并返回。  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">B</span> &#123;</span><br><span class=\"line\">\t<span class=\"comment\">//（1）将类的构造器私有</span></span><br><span class=\"line\">\t<span class=\"keyword\">private</span> <span class=\"title function_\">B</span><span class=\"params\">()</span> &#123;&#125;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"comment\">//（2）定义一个静态变量</span></span><br><span class=\"line\">\t<span class=\"keyword\">private</span> <span class=\"keyword\">static</span> B b;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"comment\">//（3）定义一个静态方法，判断类变量是否为null，如果为null，则new一个对象，并返回</span></span><br><span class=\"line\">\t<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> B <span class=\"title function_\">getB</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(b == <span class=\"literal\">null</span>) &#123;</span><br><span class=\"line\">\t\t\tb = <span class=\"keyword\">new</span> <span class=\"title class_\">B</span>();</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> b;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<br/>\n\n\n\n<hr>\n<br/>\n\n\n\n<h1 id=\"五、模板方法设计模式\"><a href=\"#五、模板方法设计模式\" class=\"headerlink\" title=\"五、模板方法设计模式\"></a>五、模板方法设计模式</h1><p>作用：提供一个方法作为完成某类功能的模板，具体实现让子类去实现。  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Demo</span> &#123;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"comment\">// 具体方法</span></span><br><span class=\"line\">\t<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">method</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"comment\">// 具体的业务处理</span></span><br><span class=\"line\">\t\tSystem.out.println(<span class=\"string\">&quot;相同的业务处理....&quot;</span>);</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\t<span class=\"comment\">// 这里的处理根据子类不同而不同，调用模板方法</span></span><br><span class=\"line\">\t\ttemplateMethod();</span><br><span class=\"line\">\t\tSystem.out.println(<span class=\"string\">&quot;相同的业务处理....&quot;</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"comment\">// 模板方法，具体实现交给子类</span></span><br><span class=\"line\">\t<span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"keyword\">void</span> <span class=\"title function_\">templateMethod</span><span class=\"params\">()</span>;</span><br><span class=\"line\">\t</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">SonOne</span> <span class=\"keyword\">extends</span> <span class=\"title class_\">Demo</span> &#123;</span><br><span class=\"line\">\t<span class=\"meta\">@Override</span></span><br><span class=\"line\">\t<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">templateMethod</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">\t\tSystem.out.println(<span class=\"string\">&quot;子类一的业务处理....&quot;</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">SonTwo</span> <span class=\"keyword\">extends</span> <span class=\"title class_\">Demo</span> &#123;</span><br><span class=\"line\">\t<span class=\"meta\">@Override</span></span><br><span class=\"line\">\t<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">templateMethod</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">\t\tSystem.out.println(<span class=\"string\">&quot;子类二的业务处理....&quot;</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 测试</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Test</span> &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"type\">Demo</span> <span class=\"variable\">sonOne</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">SonOne</span>();</span><br><span class=\"line\">\t\tsonOne.method();</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\t<span class=\"type\">Demo</span> <span class=\"variable\">sonTwo</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">SonTwo</span>();</span><br><span class=\"line\">\t\tsonTwo.method();</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<br/>\n\n\n\n<hr>\n<br/>\n\n\n\n\n","categories":[{"name":"工作技能","path":"api/categories/工作技能.json"}],"tags":[{"name":"工作技能","path":"api/tags/工作技能.json"},{"name":"设计模式","path":"api/tags/设计模式.json"}]}