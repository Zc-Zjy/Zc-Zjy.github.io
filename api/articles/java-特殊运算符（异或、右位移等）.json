{"title":"java 特殊运算符（异或、右位移等）","slug":"java-特殊运算符（异或、右位移等）","date":"2024-01-23T09:42:01.000Z","updated":"2024-07-12T07:43:37.651Z","comments":true,"path":"api/articles/java-特殊运算符（异或、右位移等）.json","realPath":null,"excerpt":null,"covers":null,"cover":null,"content":"<br/>\n\n\n<hr>\n<br/>\n\n\n<h1 id=\"一、instanceof\"><a href=\"#一、instanceof\" class=\"headerlink\" title=\"一、instanceof\"></a>一、instanceof</h1><p><strong>说明：</strong>检查是否是某个类的对象。  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">DemoTest</span> &#123;</span><br><span class=\"line\"> </span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\"> </span><br><span class=\"line\">        <span class=\"type\">String</span> <span class=\"variable\">str</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;hello&quot;</span>;</span><br><span class=\"line\">        <span class=\"type\">Object</span> <span class=\"variable\">o</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Object</span>();</span><br><span class=\"line\"> </span><br><span class=\"line\">        <span class=\"keyword\">if</span> (str <span class=\"keyword\">instanceof</span> String) &#123;</span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;字符串&quot;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">        <span class=\"keyword\">if</span> (o <span class=\"keyword\">instanceof</span> Object) &#123;</span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;对象&quot;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n<br/>\n\n\n<hr>\n<br/>\n\n\n\n<h1 id=\"二、-（异或）\"><a href=\"#二、-（异或）\" class=\"headerlink\" title=\"二、^（异或）\"></a>二、^（异或）</h1><p>1、特点：<br>（1）<code>1^1=0 , 0^0=0 , 1^0=1 , 0^1=1</code>，相同则为false，不同则为true；<br>（2）当一个数据被另一个数据^两次，得到的数据依然是之前的数据。  </p>\n<figure class=\"highlight asciidoc\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">6 ^ 3 亦或运算：(亦或运算特点:两边相同false,两边不同为true  记忆：亦或，有真就行，但是全真不行)</span><br><span class=\"line\"><span class=\"code\">  0000-0000 0000-0000 0000-0000 0000-0110         6的二进制</span></span><br><span class=\"line\"><span class=\"section\">^ 0000-0000 0000-0000 0000-0000 0000-0011         3的二进制</span></span><br><span class=\"line\"><span class=\"section\">-----------------------------------------------------------</span></span><br><span class=\"line\"><span class=\"code\">  0000-0000 0000-0000 0000-0000 0000-0101         转为十进制为5</span></span><br><span class=\"line\"><span class=\"section\">^ 0000-0000 0000-0000 0000-0000 0000-0011         3的二进制 (再亦或同一个数)</span></span><br><span class=\"line\"><span class=\"section\">-----------------------------------------------------------</span></span><br><span class=\"line\"><span class=\"code\">  0000-0000 0000-0000 0000-0000 0000-0110         转为十进制为6</span></span><br><span class=\"line\"><span class=\"code\"> </span></span><br><span class=\"line\">所以： 6 ^ 3 = 5        5 ^ 3 = 6  (亦或的特点:同时亦或一个相同的数据两次，结果还是这个数)</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 演示特点1：</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">DemoTest</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        <span class=\"comment\">// false</span></span><br><span class=\"line\">        <span class=\"type\">boolean</span> <span class=\"variable\">a</span> <span class=\"operator\">=</span> <span class=\"literal\">true</span> ^ <span class=\"literal\">true</span> ;</span><br><span class=\"line\">        <span class=\"comment\">// true</span></span><br><span class=\"line\">        <span class=\"type\">boolean</span> <span class=\"variable\">b</span> <span class=\"operator\">=</span> <span class=\"literal\">true</span> ^ <span class=\"literal\">false</span> ;</span><br><span class=\"line\">        <span class=\"comment\">// true</span></span><br><span class=\"line\">        <span class=\"type\">boolean</span> <span class=\"variable\">c</span> <span class=\"operator\">=</span> <span class=\"literal\">false</span> ^ <span class=\"literal\">true</span> ;</span><br><span class=\"line\">        <span class=\"comment\">// false</span></span><br><span class=\"line\">        <span class=\"type\">boolean</span> <span class=\"variable\">d</span> <span class=\"operator\">=</span> <span class=\"literal\">false</span> ^ <span class=\"literal\">false</span> ;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"> </span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"comment\">// 演示特点2</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">DemoTest</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        <span class=\"type\">int</span> <span class=\"variable\">a</span> <span class=\"operator\">=</span> <span class=\"number\">123</span>, b = <span class=\"number\">456</span>;</span><br><span class=\"line\">        a = a ^ b;</span><br><span class=\"line\">\t\tSystem.out.println(a); <span class=\"comment\">// 435</span></span><br><span class=\"line\">        b = b ^ a;</span><br><span class=\"line\">\t\tSystem.out.println(b); <span class=\"comment\">// 123</span></span><br><span class=\"line\">        a = a ^ b;</span><br><span class=\"line\">        System.out.println(a); <span class=\"comment\">// 456</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<br/>\n\n\n<hr>\n<br/>\n\n\n<h1 id=\"三、-（与运算）\"><a href=\"#三、-（与运算）\" class=\"headerlink\" title=\"三、&amp;（与运算）\"></a>三、&amp;（与运算）</h1><p>1、特点：<code>1&amp;1=1 , 1&amp;0=0 , 0&amp;0=0</code>，0相当于false，1相当于true，只有两边都为true时才为true。<br>2、<code>6 &amp; 3 = 2</code>：</p>\n<figure class=\"highlight dns\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"number\">6</span> &amp; <span class=\"number\">3</span> 与运算: (与运算特点：有一个false则为false)</span><br><span class=\"line\">  <span class=\"number\">0000-0000</span> <span class=\"number\">0000-0000</span> <span class=\"number\">0000-0000</span> <span class=\"number\">0000-0110</span>         <span class=\"number\">6</span>的二进制</span><br><span class=\"line\">&amp; <span class=\"number\">0000-0000</span> <span class=\"number\">0000-0000</span> <span class=\"number\">0000-0000</span> <span class=\"number\">0000-0011</span>         <span class=\"number\">3</span>的二进制</span><br><span class=\"line\">-----------------------------------------------------------</span><br><span class=\"line\">  <span class=\"number\">0000-0000</span> <span class=\"number\">0000-0000</span> <span class=\"number\">0000-0000</span> <span class=\"number\">0000-0010</span>         转为十进制为<span class=\"number\">2</span></span><br><span class=\"line\"> </span><br><span class=\"line\">所以： <span class=\"number\">6</span> &amp; <span class=\"number\">3</span> = <span class=\"number\">2</span></span><br><span class=\"line\">HashMap的源码里有个计算： (n - <span class=\"number\">1</span>) &amp; hash，其实刚初始化的时候计算结果无论如何都在<span class=\"number\">16</span>以内。</span><br></pre></td></tr></table></figure>\n\n\n<br/>\n\n\n<hr>\n<br/>\n\n\n<h1 id=\"四、-（或运算）\"><a href=\"#四、-（或运算）\" class=\"headerlink\" title=\"四、|（或运算）\"></a>四、|（或运算）</h1><p>1、特点：<code>1|1=1 , 1|0=1 , 0|0=0</code>，0相当于false，1相当于true，有一个true则为true，记忆：有真就行。<br>2、<code>6 | 3 = 7</code>：</p>\n<figure class=\"highlight dns\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"number\">6</span> | <span class=\"number\">3</span> 或运算: (或运算特点：有一个true则为true  记忆：或，有真就行。)</span><br><span class=\"line\">  <span class=\"number\">0000-0000</span> <span class=\"number\">0000-0000</span> <span class=\"number\">0000-0000</span> <span class=\"number\">0000-0110</span>         <span class=\"number\">6</span>的二进制</span><br><span class=\"line\">| <span class=\"number\">0000-0000</span> <span class=\"number\">0000-0000</span> <span class=\"number\">0000-0000</span> <span class=\"number\">0000-0011</span>         <span class=\"number\">3</span>的二进制</span><br><span class=\"line\">-----------------------------------------------------------</span><br><span class=\"line\">  <span class=\"number\">0000-0000</span> <span class=\"number\">0000-0000</span> <span class=\"number\">0000-0000</span> <span class=\"number\">0000-0111</span>         转为十进制为<span class=\"number\">7</span></span><br><span class=\"line\"> </span><br><span class=\"line\">所以： <span class=\"number\">6</span> | <span class=\"number\">3</span> = <span class=\"number\">7</span></span><br></pre></td></tr></table></figure>\n\n\n<br/>\n\n\n<hr>\n<br/>\n\n\n\n<h1 id=\"五、\"><a href=\"#五、\" class=\"headerlink\" title=\"五、&lt;&lt;（左移）\"></a>五、&lt;&lt;（左移）</h1><p>1、左移两位：<code>3 &lt;&lt; 2 = 12  --&gt; 3 * 2 * 2 = 12</code>;<br>2、左移三位：<code>3 &lt;&lt; 3 = 24  --&gt; 3 * 2 * 2 * 2 = 24</code>;  </p>\n<figure class=\"highlight asciidoc\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">3 &lt;&lt; 2</span><br><span class=\"line\"><span class=\"section\">  0000-0000 0000-0000 0000-0000 0000-0011        3的二进制</span></span><br><span class=\"line\"><span class=\"section\">----------------------------------------------------------</span></span><br><span class=\"line\"><span class=\"code\">  0000-0000 0000-0000 0000-0000 0000-1100        把实际数据向左移2位，转为10进制为12</span></span><br><span class=\"line\"><span class=\"code\"> </span></span><br><span class=\"line\">所以： 3 &lt;&lt; 2 = 12 ,口算方法： 3 * 2 * 2 = 12</span><br><span class=\"line\">例如： 1 &lt;&lt; 3 = 8 ,口算方法： 1 * 2 * 2 * 2 = 8</span><br></pre></td></tr></table></figure>\n\n\n\n<br/>\n\n\n<hr>\n<br/>\n\n\n<h1 id=\"六、-（右移）和-（无符号右移）\"><a href=\"#六、-（右移）和-（无符号右移）\" class=\"headerlink\" title=\"六、&gt;&gt;（右移）和 &gt;&gt;&gt;（无符号右移）\"></a>六、&gt;&gt;（右移）和 &gt;&gt;&gt;（无符号右移）</h1><p>1、右移一位：<code>3 &gt;&gt; 1 = 1   --&gt; 3 / 2 = 1</code>;<br>2、右移两位：<code>3 &gt;&gt; 2 = 1   --&gt; 3 / 2 / 2 = 0</code>;  </p>\n<figure class=\"highlight asciidoc\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">负数右移高位无论如何都是1</span><br><span class=\"line\">3 &gt;&gt; 1</span><br><span class=\"line\"><span class=\"section\">  0000-0000 0000-0000 0000-0000 0000-0011        3的二进制</span></span><br><span class=\"line\"><span class=\"section\">----------------------------------------------------------</span></span><br><span class=\"line\"><span class=\"code\">  0000-0000 0000-0000 0000-0000 0000-0001        转十进制后为1</span></span><br><span class=\"line\"><span class=\"code\"> </span></span><br><span class=\"line\">所以： 3 &gt;&gt; 1 = 1 ,口算方法： 3 / 2 = 1 余数为 1</span><br><span class=\"line\">例如： 3 &gt;&gt; 2 = 0 ,口算方法： 3 / 2 / 2 余数为 0</span><br></pre></td></tr></table></figure>\n<p>3、具体示例：</p>\n<figure class=\"highlight subunit\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">32 &gt;&gt; 1 = 16</span><br><span class=\"line\">0000<span class=\"string\">-0000</span> 0000<span class=\"string\">-0000</span> 0000<span class=\"string\">-0000</span> 0010<span class=\"string\">-0000</span></span><br><span class=\"line\">0000<span class=\"string\">-0000</span> 0000<span class=\"string\">-0000</span> 0000<span class=\"string\">-0000</span> 0001<span class=\"string\">-0000</span></span><br><span class=\"line\"> </span><br><span class=\"line\">32 &gt;&gt;&gt; 1 = 16</span><br><span class=\"line\">0000<span class=\"string\">-0000</span> 0000<span class=\"string\">-0000</span> 0000<span class=\"string\">-0000</span> 0010<span class=\"string\">-0000</span></span><br><span class=\"line\">0000<span class=\"string\">-0000</span> 0000<span class=\"string\">-0000</span> 0000<span class=\"string\">-0000</span> 0001<span class=\"string\">-0000</span>   </span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"string\">-32</span> &gt;&gt; 1 = <span class=\"string\">-16</span></span><br><span class=\"line\">1111<span class=\"string\">-1111</span> 1111<span class=\"string\">-1111</span> 1111<span class=\"string\">-1111</span> 1110<span class=\"string\">-0000</span></span><br><span class=\"line\">1111<span class=\"string\">-1111</span> 1111<span class=\"string\">-1111</span> 1111<span class=\"string\">-1111</span> 1111<span class=\"string\">-0000</span></span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"string\">-32</span> &gt;&gt;&gt; 1 = 2147483632</span><br><span class=\"line\">1111<span class=\"string\">-1111</span> 1111<span class=\"string\">-1111</span> 1111<span class=\"string\">-1111</span> 1110<span class=\"string\">-0000</span></span><br><span class=\"line\">0111<span class=\"string\">-1111</span> 1111<span class=\"string\">-1111</span> 1111<span class=\"string\">-1111</span> 1111<span class=\"string\">-0000</span></span><br></pre></td></tr></table></figure>\n<p>4、区别：<br>（1）无符号右移，数据右移时，二进制最高位出现的空位，无论原高位是什么，空位都用0补位；<br>（2）有符号右移，需要先看正负，正的同无符号右移，负数最高位补1。  </p>\n<br/>\n\n\n<hr>\n<br/>\n\n\n<h1 id=\"七、-（反码）\"><a href=\"#七、-（反码）\" class=\"headerlink\" title=\"七、~（反码）\"></a>七、~（反码）</h1><p>1、<code>~6</code>反码运算：</p>\n<figure class=\"highlight subunit\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\t0000<span class=\"string\">-0000</span> 0000<span class=\"string\">-0000</span> 0000<span class=\"string\">-0000</span> 0000<span class=\"string\">-0110</span>         6的二进制</span><br><span class=\"line\">~</span><br><span class=\"line\">-----------------------------------------------------------</span><br><span class=\"line\">\t1111<span class=\"string\">-1111</span> 1111<span class=\"string\">-1111</span> 1111<span class=\"string\">-1111</span> 1111<span class=\"string\">-1001</span>         转为十进制为<span class=\"string\">-7</span></span><br><span class=\"line\">简单运算方法：<span class=\"string\">-6</span><span class=\"string\">-1</span> = <span class=\"string\">-7</span>  (其实就是：取该值得负数减1)</span><br></pre></td></tr></table></figure>\n<p>2、<code>~-7</code>反码运算：</p>\n<figure class=\"highlight subunit\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\t1111<span class=\"string\">-1111</span> 1111<span class=\"string\">-1111</span> 1111<span class=\"string\">-1111</span> 1111<span class=\"string\">-1001</span>        <span class=\"string\">-7</span>的二进制</span><br><span class=\"line\">~</span><br><span class=\"line\">-----------------------------------------------------------</span><br><span class=\"line\">\t0000<span class=\"string\">-0000</span> 0000<span class=\"string\">-0000</span> 0000<span class=\"string\">-0000</span> 0000<span class=\"string\">-0110</span>        转为十进制为6</span><br><span class=\"line\">结果： 取<span class=\"string\">-7</span>的负数减1 (-<span class=\"string\">-7</span><span class=\"string\">-1</span> = 7<span class=\"string\">-1</span> = 6)</span><br></pre></td></tr></table></figure>\n\n\n<br/>\n\n\n<hr>\n<br/>\n\n\n<h1 id=\"八、s-4和s-s-4的区别\"><a href=\"#八、s-4和s-s-4的区别\" class=\"headerlink\" title=\"八、s +&#x3D; 4和s &#x3D; s + 4的区别\"></a>八、s +&#x3D; 4和s &#x3D; s + 4的区别</h1><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">OneTest</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Test</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span>  <span class=\"title function_\">test</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"type\">byte</span> <span class=\"variable\">s</span> <span class=\"operator\">=</span> <span class=\"number\">127</span>;</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\t<span class=\"comment\">// 不会报错，会自动强转 s = (byte)(s + 4)，输出：-125</span></span><br><span class=\"line\">        System.out.println(s += <span class=\"number\">4</span>);</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\t<span class=\"comment\">// 编译报错，因为4为int类型，如果还用低级别类型接收数据，就必须手动强转</span></span><br><span class=\"line\">        System.out.println(s = s + <span class=\"number\">4</span>);</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\t<span class=\"comment\">// 将上面System.out.println(s = s + 4);改为下面的就不会报错了</span></span><br><span class=\"line\">\t\tSystem.out.println(s = (<span class=\"type\">byte</span>) (s + <span class=\"number\">4</span>));</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n<br/>\n\n\n<hr>\n<br/>\n\n\n<h1 id=\"九、-（自增）和–（自减）\"><a href=\"#九、-（自增）和–（自减）\" class=\"headerlink\" title=\"九、++（自增）和–（自减）\"></a>九、++（自增）和–（自减）</h1><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">TestOne</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\"> </span><br><span class=\"line\">        <span class=\"type\">int</span> <span class=\"variable\">s</span> <span class=\"operator\">=</span> <span class=\"number\">3</span>;</span><br><span class=\"line\">\t\t<span class=\"comment\">// 第一个s++：先使用s，再执行 +1操作，所以是3；</span></span><br><span class=\"line\">\t\t<span class=\"comment\">// 第二个++s：因为s已经+1变成4了，然后先执行+1操作，再使用s，所以是5；</span></span><br><span class=\"line\">\t\t<span class=\"comment\">// 第三个s++：同第一个一样，所以是5，但是实际s的值是6；</span></span><br><span class=\"line\">        <span class=\"comment\">// 3 + 5 + 5\t\t</span></span><br><span class=\"line\">        <span class=\"comment\">//s = s++ + ++s + s++;</span></span><br><span class=\"line\">        <span class=\"comment\">//System.out.println(s);</span></span><br><span class=\"line\"> </span><br><span class=\"line\">        System.out.println(s++);  <span class=\"comment\">//3</span></span><br><span class=\"line\">        System.out.println(++s);  <span class=\"comment\">//5</span></span><br><span class=\"line\">        System.out.println(s++);  <span class=\"comment\">//5</span></span><br><span class=\"line\"> </span><br><span class=\"line\">        <span class=\"type\">int</span> <span class=\"variable\">a</span> <span class=\"operator\">=</span> <span class=\"number\">3</span>,b;</span><br><span class=\"line\">        b= a++;</span><br><span class=\"line\">        System.out.println(b+<span class=\"string\">&quot;,&quot;</span>+a); <span class=\"comment\">// 3,4</span></span><br><span class=\"line\"> </span><br><span class=\"line\">        <span class=\"comment\">//a++; // 相当于 a = a + 1</span></span><br><span class=\"line\">        <span class=\"comment\">//int c = 5++;  // 编译报错,应该是编译后为： 5 = 5 + 1;  所以报错</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>","more":"<br/>\n\n\n<hr>\n<br/>\n\n\n<h1 id=\"一、instanceof\"><a href=\"#一、instanceof\" class=\"headerlink\" title=\"一、instanceof\"></a>一、instanceof</h1><p><strong>说明：</strong>检查是否是某个类的对象。  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">DemoTest</span> &#123;</span><br><span class=\"line\"> </span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\"> </span><br><span class=\"line\">        <span class=\"type\">String</span> <span class=\"variable\">str</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;hello&quot;</span>;</span><br><span class=\"line\">        <span class=\"type\">Object</span> <span class=\"variable\">o</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Object</span>();</span><br><span class=\"line\"> </span><br><span class=\"line\">        <span class=\"keyword\">if</span> (str <span class=\"keyword\">instanceof</span> String) &#123;</span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;字符串&quot;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">        <span class=\"keyword\">if</span> (o <span class=\"keyword\">instanceof</span> Object) &#123;</span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;对象&quot;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n<br/>\n\n\n<hr>\n<br/>\n\n\n\n<h1 id=\"二、-（异或）\"><a href=\"#二、-（异或）\" class=\"headerlink\" title=\"二、^（异或）\"></a>二、^（异或）</h1><p>1、特点：<br>（1）<code>1^1=0 , 0^0=0 , 1^0=1 , 0^1=1</code>，相同则为false，不同则为true；<br>（2）当一个数据被另一个数据^两次，得到的数据依然是之前的数据。  </p>\n<figure class=\"highlight asciidoc\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">6 ^ 3 亦或运算：(亦或运算特点:两边相同false,两边不同为true  记忆：亦或，有真就行，但是全真不行)</span><br><span class=\"line\"><span class=\"code\">  0000-0000 0000-0000 0000-0000 0000-0110         6的二进制</span></span><br><span class=\"line\"><span class=\"section\">^ 0000-0000 0000-0000 0000-0000 0000-0011         3的二进制</span></span><br><span class=\"line\"><span class=\"section\">-----------------------------------------------------------</span></span><br><span class=\"line\"><span class=\"code\">  0000-0000 0000-0000 0000-0000 0000-0101         转为十进制为5</span></span><br><span class=\"line\"><span class=\"section\">^ 0000-0000 0000-0000 0000-0000 0000-0011         3的二进制 (再亦或同一个数)</span></span><br><span class=\"line\"><span class=\"section\">-----------------------------------------------------------</span></span><br><span class=\"line\"><span class=\"code\">  0000-0000 0000-0000 0000-0000 0000-0110         转为十进制为6</span></span><br><span class=\"line\"><span class=\"code\"> </span></span><br><span class=\"line\">所以： 6 ^ 3 = 5        5 ^ 3 = 6  (亦或的特点:同时亦或一个相同的数据两次，结果还是这个数)</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 演示特点1：</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">DemoTest</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        <span class=\"comment\">// false</span></span><br><span class=\"line\">        <span class=\"type\">boolean</span> <span class=\"variable\">a</span> <span class=\"operator\">=</span> <span class=\"literal\">true</span> ^ <span class=\"literal\">true</span> ;</span><br><span class=\"line\">        <span class=\"comment\">// true</span></span><br><span class=\"line\">        <span class=\"type\">boolean</span> <span class=\"variable\">b</span> <span class=\"operator\">=</span> <span class=\"literal\">true</span> ^ <span class=\"literal\">false</span> ;</span><br><span class=\"line\">        <span class=\"comment\">// true</span></span><br><span class=\"line\">        <span class=\"type\">boolean</span> <span class=\"variable\">c</span> <span class=\"operator\">=</span> <span class=\"literal\">false</span> ^ <span class=\"literal\">true</span> ;</span><br><span class=\"line\">        <span class=\"comment\">// false</span></span><br><span class=\"line\">        <span class=\"type\">boolean</span> <span class=\"variable\">d</span> <span class=\"operator\">=</span> <span class=\"literal\">false</span> ^ <span class=\"literal\">false</span> ;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"> </span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"comment\">// 演示特点2</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">DemoTest</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        <span class=\"type\">int</span> <span class=\"variable\">a</span> <span class=\"operator\">=</span> <span class=\"number\">123</span>, b = <span class=\"number\">456</span>;</span><br><span class=\"line\">        a = a ^ b;</span><br><span class=\"line\">\t\tSystem.out.println(a); <span class=\"comment\">// 435</span></span><br><span class=\"line\">        b = b ^ a;</span><br><span class=\"line\">\t\tSystem.out.println(b); <span class=\"comment\">// 123</span></span><br><span class=\"line\">        a = a ^ b;</span><br><span class=\"line\">        System.out.println(a); <span class=\"comment\">// 456</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<br/>\n\n\n<hr>\n<br/>\n\n\n<h1 id=\"三、-（与运算）\"><a href=\"#三、-（与运算）\" class=\"headerlink\" title=\"三、&amp;（与运算）\"></a>三、&amp;（与运算）</h1><p>1、特点：<code>1&amp;1=1 , 1&amp;0=0 , 0&amp;0=0</code>，0相当于false，1相当于true，只有两边都为true时才为true。<br>2、<code>6 &amp; 3 = 2</code>：</p>\n<figure class=\"highlight dns\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"number\">6</span> &amp; <span class=\"number\">3</span> 与运算: (与运算特点：有一个false则为false)</span><br><span class=\"line\">  <span class=\"number\">0000-0000</span> <span class=\"number\">0000-0000</span> <span class=\"number\">0000-0000</span> <span class=\"number\">0000-0110</span>         <span class=\"number\">6</span>的二进制</span><br><span class=\"line\">&amp; <span class=\"number\">0000-0000</span> <span class=\"number\">0000-0000</span> <span class=\"number\">0000-0000</span> <span class=\"number\">0000-0011</span>         <span class=\"number\">3</span>的二进制</span><br><span class=\"line\">-----------------------------------------------------------</span><br><span class=\"line\">  <span class=\"number\">0000-0000</span> <span class=\"number\">0000-0000</span> <span class=\"number\">0000-0000</span> <span class=\"number\">0000-0010</span>         转为十进制为<span class=\"number\">2</span></span><br><span class=\"line\"> </span><br><span class=\"line\">所以： <span class=\"number\">6</span> &amp; <span class=\"number\">3</span> = <span class=\"number\">2</span></span><br><span class=\"line\">HashMap的源码里有个计算： (n - <span class=\"number\">1</span>) &amp; hash，其实刚初始化的时候计算结果无论如何都在<span class=\"number\">16</span>以内。</span><br></pre></td></tr></table></figure>\n\n\n<br/>\n\n\n<hr>\n<br/>\n\n\n<h1 id=\"四、-（或运算）\"><a href=\"#四、-（或运算）\" class=\"headerlink\" title=\"四、|（或运算）\"></a>四、|（或运算）</h1><p>1、特点：<code>1|1=1 , 1|0=1 , 0|0=0</code>，0相当于false，1相当于true，有一个true则为true，记忆：有真就行。<br>2、<code>6 | 3 = 7</code>：</p>\n<figure class=\"highlight dns\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"number\">6</span> | <span class=\"number\">3</span> 或运算: (或运算特点：有一个true则为true  记忆：或，有真就行。)</span><br><span class=\"line\">  <span class=\"number\">0000-0000</span> <span class=\"number\">0000-0000</span> <span class=\"number\">0000-0000</span> <span class=\"number\">0000-0110</span>         <span class=\"number\">6</span>的二进制</span><br><span class=\"line\">| <span class=\"number\">0000-0000</span> <span class=\"number\">0000-0000</span> <span class=\"number\">0000-0000</span> <span class=\"number\">0000-0011</span>         <span class=\"number\">3</span>的二进制</span><br><span class=\"line\">-----------------------------------------------------------</span><br><span class=\"line\">  <span class=\"number\">0000-0000</span> <span class=\"number\">0000-0000</span> <span class=\"number\">0000-0000</span> <span class=\"number\">0000-0111</span>         转为十进制为<span class=\"number\">7</span></span><br><span class=\"line\"> </span><br><span class=\"line\">所以： <span class=\"number\">6</span> | <span class=\"number\">3</span> = <span class=\"number\">7</span></span><br></pre></td></tr></table></figure>\n\n\n<br/>\n\n\n<hr>\n<br/>\n\n\n\n<h1 id=\"五、\"><a href=\"#五、\" class=\"headerlink\" title=\"五、&lt;&lt;（左移）\"></a>五、&lt;&lt;（左移）</h1><p>1、左移两位：<code>3 &lt;&lt; 2 = 12  --&gt; 3 * 2 * 2 = 12</code>;<br>2、左移三位：<code>3 &lt;&lt; 3 = 24  --&gt; 3 * 2 * 2 * 2 = 24</code>;  </p>\n<figure class=\"highlight asciidoc\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">3 &lt;&lt; 2</span><br><span class=\"line\"><span class=\"section\">  0000-0000 0000-0000 0000-0000 0000-0011        3的二进制</span></span><br><span class=\"line\"><span class=\"section\">----------------------------------------------------------</span></span><br><span class=\"line\"><span class=\"code\">  0000-0000 0000-0000 0000-0000 0000-1100        把实际数据向左移2位，转为10进制为12</span></span><br><span class=\"line\"><span class=\"code\"> </span></span><br><span class=\"line\">所以： 3 &lt;&lt; 2 = 12 ,口算方法： 3 * 2 * 2 = 12</span><br><span class=\"line\">例如： 1 &lt;&lt; 3 = 8 ,口算方法： 1 * 2 * 2 * 2 = 8</span><br></pre></td></tr></table></figure>\n\n\n\n<br/>\n\n\n<hr>\n<br/>\n\n\n<h1 id=\"六、-（右移）和-（无符号右移）\"><a href=\"#六、-（右移）和-（无符号右移）\" class=\"headerlink\" title=\"六、&gt;&gt;（右移）和 &gt;&gt;&gt;（无符号右移）\"></a>六、&gt;&gt;（右移）和 &gt;&gt;&gt;（无符号右移）</h1><p>1、右移一位：<code>3 &gt;&gt; 1 = 1   --&gt; 3 / 2 = 1</code>;<br>2、右移两位：<code>3 &gt;&gt; 2 = 1   --&gt; 3 / 2 / 2 = 0</code>;  </p>\n<figure class=\"highlight asciidoc\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">负数右移高位无论如何都是1</span><br><span class=\"line\">3 &gt;&gt; 1</span><br><span class=\"line\"><span class=\"section\">  0000-0000 0000-0000 0000-0000 0000-0011        3的二进制</span></span><br><span class=\"line\"><span class=\"section\">----------------------------------------------------------</span></span><br><span class=\"line\"><span class=\"code\">  0000-0000 0000-0000 0000-0000 0000-0001        转十进制后为1</span></span><br><span class=\"line\"><span class=\"code\"> </span></span><br><span class=\"line\">所以： 3 &gt;&gt; 1 = 1 ,口算方法： 3 / 2 = 1 余数为 1</span><br><span class=\"line\">例如： 3 &gt;&gt; 2 = 0 ,口算方法： 3 / 2 / 2 余数为 0</span><br></pre></td></tr></table></figure>\n<p>3、具体示例：</p>\n<figure class=\"highlight subunit\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">32 &gt;&gt; 1 = 16</span><br><span class=\"line\">0000<span class=\"string\">-0000</span> 0000<span class=\"string\">-0000</span> 0000<span class=\"string\">-0000</span> 0010<span class=\"string\">-0000</span></span><br><span class=\"line\">0000<span class=\"string\">-0000</span> 0000<span class=\"string\">-0000</span> 0000<span class=\"string\">-0000</span> 0001<span class=\"string\">-0000</span></span><br><span class=\"line\"> </span><br><span class=\"line\">32 &gt;&gt;&gt; 1 = 16</span><br><span class=\"line\">0000<span class=\"string\">-0000</span> 0000<span class=\"string\">-0000</span> 0000<span class=\"string\">-0000</span> 0010<span class=\"string\">-0000</span></span><br><span class=\"line\">0000<span class=\"string\">-0000</span> 0000<span class=\"string\">-0000</span> 0000<span class=\"string\">-0000</span> 0001<span class=\"string\">-0000</span>   </span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"string\">-32</span> &gt;&gt; 1 = <span class=\"string\">-16</span></span><br><span class=\"line\">1111<span class=\"string\">-1111</span> 1111<span class=\"string\">-1111</span> 1111<span class=\"string\">-1111</span> 1110<span class=\"string\">-0000</span></span><br><span class=\"line\">1111<span class=\"string\">-1111</span> 1111<span class=\"string\">-1111</span> 1111<span class=\"string\">-1111</span> 1111<span class=\"string\">-0000</span></span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"string\">-32</span> &gt;&gt;&gt; 1 = 2147483632</span><br><span class=\"line\">1111<span class=\"string\">-1111</span> 1111<span class=\"string\">-1111</span> 1111<span class=\"string\">-1111</span> 1110<span class=\"string\">-0000</span></span><br><span class=\"line\">0111<span class=\"string\">-1111</span> 1111<span class=\"string\">-1111</span> 1111<span class=\"string\">-1111</span> 1111<span class=\"string\">-0000</span></span><br></pre></td></tr></table></figure>\n<p>4、区别：<br>（1）无符号右移，数据右移时，二进制最高位出现的空位，无论原高位是什么，空位都用0补位；<br>（2）有符号右移，需要先看正负，正的同无符号右移，负数最高位补1。  </p>\n<br/>\n\n\n<hr>\n<br/>\n\n\n<h1 id=\"七、-（反码）\"><a href=\"#七、-（反码）\" class=\"headerlink\" title=\"七、~（反码）\"></a>七、~（反码）</h1><p>1、<code>~6</code>反码运算：</p>\n<figure class=\"highlight subunit\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\t0000<span class=\"string\">-0000</span> 0000<span class=\"string\">-0000</span> 0000<span class=\"string\">-0000</span> 0000<span class=\"string\">-0110</span>         6的二进制</span><br><span class=\"line\">~</span><br><span class=\"line\">-----------------------------------------------------------</span><br><span class=\"line\">\t1111<span class=\"string\">-1111</span> 1111<span class=\"string\">-1111</span> 1111<span class=\"string\">-1111</span> 1111<span class=\"string\">-1001</span>         转为十进制为<span class=\"string\">-7</span></span><br><span class=\"line\">简单运算方法：<span class=\"string\">-6</span><span class=\"string\">-1</span> = <span class=\"string\">-7</span>  (其实就是：取该值得负数减1)</span><br></pre></td></tr></table></figure>\n<p>2、<code>~-7</code>反码运算：</p>\n<figure class=\"highlight subunit\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\t1111<span class=\"string\">-1111</span> 1111<span class=\"string\">-1111</span> 1111<span class=\"string\">-1111</span> 1111<span class=\"string\">-1001</span>        <span class=\"string\">-7</span>的二进制</span><br><span class=\"line\">~</span><br><span class=\"line\">-----------------------------------------------------------</span><br><span class=\"line\">\t0000<span class=\"string\">-0000</span> 0000<span class=\"string\">-0000</span> 0000<span class=\"string\">-0000</span> 0000<span class=\"string\">-0110</span>        转为十进制为6</span><br><span class=\"line\">结果： 取<span class=\"string\">-7</span>的负数减1 (-<span class=\"string\">-7</span><span class=\"string\">-1</span> = 7<span class=\"string\">-1</span> = 6)</span><br></pre></td></tr></table></figure>\n\n\n<br/>\n\n\n<hr>\n<br/>\n\n\n<h1 id=\"八、s-4和s-s-4的区别\"><a href=\"#八、s-4和s-s-4的区别\" class=\"headerlink\" title=\"八、s +&#x3D; 4和s &#x3D; s + 4的区别\"></a>八、s +&#x3D; 4和s &#x3D; s + 4的区别</h1><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">OneTest</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Test</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span>  <span class=\"title function_\">test</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"type\">byte</span> <span class=\"variable\">s</span> <span class=\"operator\">=</span> <span class=\"number\">127</span>;</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\t<span class=\"comment\">// 不会报错，会自动强转 s = (byte)(s + 4)，输出：-125</span></span><br><span class=\"line\">        System.out.println(s += <span class=\"number\">4</span>);</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\t<span class=\"comment\">// 编译报错，因为4为int类型，如果还用低级别类型接收数据，就必须手动强转</span></span><br><span class=\"line\">        System.out.println(s = s + <span class=\"number\">4</span>);</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\t<span class=\"comment\">// 将上面System.out.println(s = s + 4);改为下面的就不会报错了</span></span><br><span class=\"line\">\t\tSystem.out.println(s = (<span class=\"type\">byte</span>) (s + <span class=\"number\">4</span>));</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n<br/>\n\n\n<hr>\n<br/>\n\n\n<h1 id=\"九、-（自增）和–（自减）\"><a href=\"#九、-（自增）和–（自减）\" class=\"headerlink\" title=\"九、++（自增）和–（自减）\"></a>九、++（自增）和–（自减）</h1><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">TestOne</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\"> </span><br><span class=\"line\">        <span class=\"type\">int</span> <span class=\"variable\">s</span> <span class=\"operator\">=</span> <span class=\"number\">3</span>;</span><br><span class=\"line\">\t\t<span class=\"comment\">// 第一个s++：先使用s，再执行 +1操作，所以是3；</span></span><br><span class=\"line\">\t\t<span class=\"comment\">// 第二个++s：因为s已经+1变成4了，然后先执行+1操作，再使用s，所以是5；</span></span><br><span class=\"line\">\t\t<span class=\"comment\">// 第三个s++：同第一个一样，所以是5，但是实际s的值是6；</span></span><br><span class=\"line\">        <span class=\"comment\">// 3 + 5 + 5\t\t</span></span><br><span class=\"line\">        <span class=\"comment\">//s = s++ + ++s + s++;</span></span><br><span class=\"line\">        <span class=\"comment\">//System.out.println(s);</span></span><br><span class=\"line\"> </span><br><span class=\"line\">        System.out.println(s++);  <span class=\"comment\">//3</span></span><br><span class=\"line\">        System.out.println(++s);  <span class=\"comment\">//5</span></span><br><span class=\"line\">        System.out.println(s++);  <span class=\"comment\">//5</span></span><br><span class=\"line\"> </span><br><span class=\"line\">        <span class=\"type\">int</span> <span class=\"variable\">a</span> <span class=\"operator\">=</span> <span class=\"number\">3</span>,b;</span><br><span class=\"line\">        b= a++;</span><br><span class=\"line\">        System.out.println(b+<span class=\"string\">&quot;,&quot;</span>+a); <span class=\"comment\">// 3,4</span></span><br><span class=\"line\"> </span><br><span class=\"line\">        <span class=\"comment\">//a++; // 相当于 a = a + 1</span></span><br><span class=\"line\">        <span class=\"comment\">//int c = 5++;  // 编译报错,应该是编译后为： 5 = 5 + 1;  所以报错</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>","categories":[{"name":"工作技能","path":"api/categories/工作技能.json"}],"tags":[{"name":"工作技能","path":"api/tags/工作技能.json"},{"name":"后端","path":"api/tags/后端.json"},{"name":"Java","path":"api/tags/Java.json"}]}