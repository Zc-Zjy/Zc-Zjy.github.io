{"title":"使用Arrays.asList、ArrayList.subList注意事项","slug":"使用Arrays-asList、ArrayList-subList注意事项","date":"2024-01-16T02:56:19.000Z","updated":"2024-07-12T07:43:37.640Z","comments":true,"path":"api/articles/使用Arrays-asList、ArrayList-subList注意事项.json","realPath":null,"excerpt":null,"covers":null,"cover":null,"content":"<br/>\n\n\n<hr>\n<br/>\n\n<h1 id=\"一、Arrays-asList\"><a href=\"#一、Arrays-asList\" class=\"headerlink\" title=\"一、Arrays.asList\"></a>一、Arrays.asList</h1><p>1、例子：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">List&lt;Integer&gt; list = Arrays.asList(<span class=\"number\">1</span>, <span class=\"number\">2</span>);</span><br><span class=\"line\">System.out.println(list);</span><br><span class=\"line\">System.out.println(list.contains(<span class=\"number\">1</span>));</span><br><span class=\"line\">System.out.println(list.contains(<span class=\"number\">2</span>));</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 输出</span></span><br><span class=\"line\">[<span class=\"number\">1</span>, <span class=\"number\">2</span>]</span><br><span class=\"line\"><span class=\"literal\">true</span></span><br><span class=\"line\"><span class=\"literal\">true</span></span><br></pre></td></tr></table></figure>\n<p>往list中添加元素3：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">list.add(<span class=\"number\">3</span>);</span><br><span class=\"line\">System.out.println(list.contains(<span class=\"number\">3</span>));</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 输出</span></span><br><span class=\"line\">抛出java.lang.UnsupportedOperationException异常</span><br></pre></td></tr></table></figure>\n<p>2、原因：<br>查看源码得知，Arrays.asList方法中，返回的ArrayList不是我们new List那个ArrayList，我们new List那个ArrayList是位于java.util包下的，而这个Arrays.asList方法中返回的ArrayList是Arrays类的内部类，它继承了AbstractList类，没有重写add方法，所以当我们调用add方法时才会抛出异常。<br>3、总结：<br>使用工具类Arrays.asList()把数组转成集合时，不能使用其修改集合相关的方法，比如：add、remove、clear等方法，会抛出异常。  </p>\n<br/>\n\n\n<hr>\n<br/>\n\n\n<h1 id=\"二、ArrayList-subList\"><a href=\"#二、ArrayList-subList\" class=\"headerlink\" title=\"二、ArrayList.subList\"></a>二、ArrayList.subList</h1><p>1、例子：  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">List&lt;String&gt; list = <span class=\"keyword\">new</span> <span class=\"title class_\">ArrayList</span>&lt;&gt;();</span><br><span class=\"line\">lsit.add(<span class=\"string\">&quot;三国演义&quot;</span>);</span><br><span class=\"line\">list.add(<span class=\"string\">&quot;西游记&quot;</span>);</span><br><span class=\"line\">list.add(<span class=\"string\">&quot;红楼梦&quot;</span>);</span><br><span class=\"line\">list.add(<span class=\"string\">&quot;水浒传&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">List&lt;String&gt; listSub = list.subList(<span class=\"number\">2</span>, <span class=\"number\">4</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">System.out.println(list);</span><br><span class=\"line\">System.out.println(listSub);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 输出</span></span><br><span class=\"line\">[<span class=\"string\">&quot;三国演义&quot;</span>, <span class=\"string\">&quot;西游记&quot;</span>, <span class=\"string\">&quot;红楼梦&quot;</span>,<span class=\"string\">&quot;水浒传&quot;</span>]</span><br><span class=\"line\">[ <span class=\"string\">&quot;红楼梦&quot;</span>,<span class=\"string\">&quot;水浒传&quot;</span>]</span><br></pre></td></tr></table></figure>\n<p>可以看出，subList方法返回的是list中索引从2（包含）到4（不包含）的元素集合。<br>2、问题注意：<br>（1）修改原集合的值，会影响子集合  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 修改原集合第二个元素红楼梦 -》简爱</span></span><br><span class=\"line\">list.set(<span class=\"number\">2</span>, <span class=\"string\">&quot;简爱&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">System.out.println(list);</span><br><span class=\"line\">System.out.println(listSub);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 输出</span></span><br><span class=\"line\">[<span class=\"string\">&quot;三国演义&quot;</span>, <span class=\"string\">&quot;西游记&quot;</span>, <span class=\"string\">&quot;简爱&quot;</span>,<span class=\"string\">&quot;水浒传&quot;</span>]</span><br><span class=\"line\">[ <span class=\"string\">&quot;简爱&quot;</span>,<span class=\"string\">&quot;水浒传&quot;</span>]</span><br></pre></td></tr></table></figure>\n<p>可以看出，修改原集合的值，子集合也会跟着被修改。<br>（2）修改原集合的结构，对子集合操作时会抛出异常<br><strong>注意：</strong>只有在对子集合操作时才会抛出异常。  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 向原集合添加新元素，会抛出ConcurrentModificationException异常</span></span><br><span class=\"line\">list.add(<span class=\"string\">&quot;简爱&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">System.out.println(list);</span><br><span class=\"line\">System.out.println(listSub);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 输出</span></span><br><span class=\"line\">[<span class=\"string\">&quot;三国演义&quot;</span>, <span class=\"string\">&quot;西游记&quot;</span>, <span class=\"string\">&quot;简爱&quot;</span>,<span class=\"string\">&quot;水浒传&quot;</span>, <span class=\"string\">&quot;简爱&quot;</span>]</span><br><span class=\"line\"><span class=\"comment\">// 子集合输出时，会抛出ConcurrentModificationException异常</span></span><br></pre></td></tr></table></figure>\n<p>（3）修改子集合的值，会影响原集合  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">listSub.set(<span class=\"number\">0</span>, <span class=\"string\">&quot;简爱&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">System.out.println(list);</span><br><span class=\"line\">System.out.println(listSub);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 输出</span></span><br><span class=\"line\">[<span class=\"string\">&quot;三国演义&quot;</span>, <span class=\"string\">&quot;西游记&quot;</span>, <span class=\"string\">&quot;简爱&quot;</span>,<span class=\"string\">&quot;水浒传&quot;</span>]</span><br><span class=\"line\">[ <span class=\"string\">&quot;简爱&quot;</span>,<span class=\"string\">&quot;水浒传&quot;</span>]</span><br></pre></td></tr></table></figure>\n<p>可以看出，修改子集合元素，原集合元素也跟着被修改了。<br>（4）修改子集合的结构，会影响原集合  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">listSub.add(<span class=\"string\">&quot;简爱&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">System.out.println(list);</span><br><span class=\"line\">System.out.println(listSub);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 输出</span></span><br><span class=\"line\">[<span class=\"string\">&quot;三国演义&quot;</span>, <span class=\"string\">&quot;西游记&quot;</span>, <span class=\"string\">&quot;红楼梦&quot;</span>,<span class=\"string\">&quot;水浒传&quot;</span>, <span class=\"string\">&quot;简爱&quot;</span>]</span><br><span class=\"line\">[ <span class=\"string\">&quot;红楼梦&quot;</span>,<span class=\"string\">&quot;水浒传&quot;</span>, <span class=\"string\">&quot;简爱&quot;</span>]</span><br></pre></td></tr></table></figure>\n<p>3、问题解析：<br>（1）查看subList方法源码  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 得知subList方法中，调用了SubList类的构造函数</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> List&lt;E&gt; <span class=\"title function_\">subList</span><span class=\"params\">(<span class=\"type\">int</span> fromIndex, <span class=\"type\">int</span> toIndex)</span> &#123;</span><br><span class=\"line\">    subListRangeCheck(fromIndex, toIndex, size);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"title class_\">SubList</span>(<span class=\"built_in\">this</span>, <span class=\"number\">0</span>, fromIndex, toIndex);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// SubList类的构造函数源码</span></span><br><span class=\"line\">SubList(AbstractList&lt;E&gt; parent, <span class=\"type\">int</span> offset, <span class=\"type\">int</span> fromIndex, <span class=\"type\">int</span> toIndex) &#123;</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.parent = parent;</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.parentOffset = fromIndex;</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.offset = offset + fromIndex;</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.size = toIndex - fromIndex;</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.modCount = ArraryList.<span class=\"built_in\">this</span>.modCount;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>可以看出，SubList类是ArrayList的内部类，该构造函数中也并没有重新创建一个新的ArrayList，所以修改原集合或子集合的元素，会相互影响。<br>4、总结：<br>（1）在定义方法时，如果返回值类型是List的话，一定要思考是否允许修改，如果不允许修改，在方法注释上，一定要说明清楚！<br>（2）我们可以使用Guava提供的方法，去创建一个新的List：  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Lists.newArrayList(E... elements)</span><br><span class=\"line\">Sets.newHashSet(E... elements)</span><br></pre></td></tr></table></figure>","more":"<br/>\n\n\n<hr>\n<br/>\n\n<h1 id=\"一、Arrays-asList\"><a href=\"#一、Arrays-asList\" class=\"headerlink\" title=\"一、Arrays.asList\"></a>一、Arrays.asList</h1><p>1、例子：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">List&lt;Integer&gt; list = Arrays.asList(<span class=\"number\">1</span>, <span class=\"number\">2</span>);</span><br><span class=\"line\">System.out.println(list);</span><br><span class=\"line\">System.out.println(list.contains(<span class=\"number\">1</span>));</span><br><span class=\"line\">System.out.println(list.contains(<span class=\"number\">2</span>));</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 输出</span></span><br><span class=\"line\">[<span class=\"number\">1</span>, <span class=\"number\">2</span>]</span><br><span class=\"line\"><span class=\"literal\">true</span></span><br><span class=\"line\"><span class=\"literal\">true</span></span><br></pre></td></tr></table></figure>\n<p>往list中添加元素3：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">list.add(<span class=\"number\">3</span>);</span><br><span class=\"line\">System.out.println(list.contains(<span class=\"number\">3</span>));</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 输出</span></span><br><span class=\"line\">抛出java.lang.UnsupportedOperationException异常</span><br></pre></td></tr></table></figure>\n<p>2、原因：<br>查看源码得知，Arrays.asList方法中，返回的ArrayList不是我们new List那个ArrayList，我们new List那个ArrayList是位于java.util包下的，而这个Arrays.asList方法中返回的ArrayList是Arrays类的内部类，它继承了AbstractList类，没有重写add方法，所以当我们调用add方法时才会抛出异常。<br>3、总结：<br>使用工具类Arrays.asList()把数组转成集合时，不能使用其修改集合相关的方法，比如：add、remove、clear等方法，会抛出异常。  </p>\n<br/>\n\n\n<hr>\n<br/>\n\n\n<h1 id=\"二、ArrayList-subList\"><a href=\"#二、ArrayList-subList\" class=\"headerlink\" title=\"二、ArrayList.subList\"></a>二、ArrayList.subList</h1><p>1、例子：  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">List&lt;String&gt; list = <span class=\"keyword\">new</span> <span class=\"title class_\">ArrayList</span>&lt;&gt;();</span><br><span class=\"line\">lsit.add(<span class=\"string\">&quot;三国演义&quot;</span>);</span><br><span class=\"line\">list.add(<span class=\"string\">&quot;西游记&quot;</span>);</span><br><span class=\"line\">list.add(<span class=\"string\">&quot;红楼梦&quot;</span>);</span><br><span class=\"line\">list.add(<span class=\"string\">&quot;水浒传&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">List&lt;String&gt; listSub = list.subList(<span class=\"number\">2</span>, <span class=\"number\">4</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">System.out.println(list);</span><br><span class=\"line\">System.out.println(listSub);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 输出</span></span><br><span class=\"line\">[<span class=\"string\">&quot;三国演义&quot;</span>, <span class=\"string\">&quot;西游记&quot;</span>, <span class=\"string\">&quot;红楼梦&quot;</span>,<span class=\"string\">&quot;水浒传&quot;</span>]</span><br><span class=\"line\">[ <span class=\"string\">&quot;红楼梦&quot;</span>,<span class=\"string\">&quot;水浒传&quot;</span>]</span><br></pre></td></tr></table></figure>\n<p>可以看出，subList方法返回的是list中索引从2（包含）到4（不包含）的元素集合。<br>2、问题注意：<br>（1）修改原集合的值，会影响子集合  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 修改原集合第二个元素红楼梦 -》简爱</span></span><br><span class=\"line\">list.set(<span class=\"number\">2</span>, <span class=\"string\">&quot;简爱&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">System.out.println(list);</span><br><span class=\"line\">System.out.println(listSub);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 输出</span></span><br><span class=\"line\">[<span class=\"string\">&quot;三国演义&quot;</span>, <span class=\"string\">&quot;西游记&quot;</span>, <span class=\"string\">&quot;简爱&quot;</span>,<span class=\"string\">&quot;水浒传&quot;</span>]</span><br><span class=\"line\">[ <span class=\"string\">&quot;简爱&quot;</span>,<span class=\"string\">&quot;水浒传&quot;</span>]</span><br></pre></td></tr></table></figure>\n<p>可以看出，修改原集合的值，子集合也会跟着被修改。<br>（2）修改原集合的结构，对子集合操作时会抛出异常<br><strong>注意：</strong>只有在对子集合操作时才会抛出异常。  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 向原集合添加新元素，会抛出ConcurrentModificationException异常</span></span><br><span class=\"line\">list.add(<span class=\"string\">&quot;简爱&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">System.out.println(list);</span><br><span class=\"line\">System.out.println(listSub);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 输出</span></span><br><span class=\"line\">[<span class=\"string\">&quot;三国演义&quot;</span>, <span class=\"string\">&quot;西游记&quot;</span>, <span class=\"string\">&quot;简爱&quot;</span>,<span class=\"string\">&quot;水浒传&quot;</span>, <span class=\"string\">&quot;简爱&quot;</span>]</span><br><span class=\"line\"><span class=\"comment\">// 子集合输出时，会抛出ConcurrentModificationException异常</span></span><br></pre></td></tr></table></figure>\n<p>（3）修改子集合的值，会影响原集合  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">listSub.set(<span class=\"number\">0</span>, <span class=\"string\">&quot;简爱&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">System.out.println(list);</span><br><span class=\"line\">System.out.println(listSub);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 输出</span></span><br><span class=\"line\">[<span class=\"string\">&quot;三国演义&quot;</span>, <span class=\"string\">&quot;西游记&quot;</span>, <span class=\"string\">&quot;简爱&quot;</span>,<span class=\"string\">&quot;水浒传&quot;</span>]</span><br><span class=\"line\">[ <span class=\"string\">&quot;简爱&quot;</span>,<span class=\"string\">&quot;水浒传&quot;</span>]</span><br></pre></td></tr></table></figure>\n<p>可以看出，修改子集合元素，原集合元素也跟着被修改了。<br>（4）修改子集合的结构，会影响原集合  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">listSub.add(<span class=\"string\">&quot;简爱&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">System.out.println(list);</span><br><span class=\"line\">System.out.println(listSub);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 输出</span></span><br><span class=\"line\">[<span class=\"string\">&quot;三国演义&quot;</span>, <span class=\"string\">&quot;西游记&quot;</span>, <span class=\"string\">&quot;红楼梦&quot;</span>,<span class=\"string\">&quot;水浒传&quot;</span>, <span class=\"string\">&quot;简爱&quot;</span>]</span><br><span class=\"line\">[ <span class=\"string\">&quot;红楼梦&quot;</span>,<span class=\"string\">&quot;水浒传&quot;</span>, <span class=\"string\">&quot;简爱&quot;</span>]</span><br></pre></td></tr></table></figure>\n<p>3、问题解析：<br>（1）查看subList方法源码  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 得知subList方法中，调用了SubList类的构造函数</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> List&lt;E&gt; <span class=\"title function_\">subList</span><span class=\"params\">(<span class=\"type\">int</span> fromIndex, <span class=\"type\">int</span> toIndex)</span> &#123;</span><br><span class=\"line\">    subListRangeCheck(fromIndex, toIndex, size);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"title class_\">SubList</span>(<span class=\"built_in\">this</span>, <span class=\"number\">0</span>, fromIndex, toIndex);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// SubList类的构造函数源码</span></span><br><span class=\"line\">SubList(AbstractList&lt;E&gt; parent, <span class=\"type\">int</span> offset, <span class=\"type\">int</span> fromIndex, <span class=\"type\">int</span> toIndex) &#123;</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.parent = parent;</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.parentOffset = fromIndex;</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.offset = offset + fromIndex;</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.size = toIndex - fromIndex;</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.modCount = ArraryList.<span class=\"built_in\">this</span>.modCount;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>可以看出，SubList类是ArrayList的内部类，该构造函数中也并没有重新创建一个新的ArrayList，所以修改原集合或子集合的元素，会相互影响。<br>4、总结：<br>（1）在定义方法时，如果返回值类型是List的话，一定要思考是否允许修改，如果不允许修改，在方法注释上，一定要说明清楚！<br>（2）我们可以使用Guava提供的方法，去创建一个新的List：  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Lists.newArrayList(E... elements)</span><br><span class=\"line\">Sets.newHashSet(E... elements)</span><br></pre></td></tr></table></figure>","categories":[{"name":"工作技能","path":"api/categories/工作技能.json"}],"tags":[{"name":"工作技能","path":"api/tags/工作技能.json"},{"name":"后端","path":"api/tags/后端.json"},{"name":"Java","path":"api/tags/Java.json"}]}